{"version":3,"sources":["webpack:///./resources/assets/js/vue-components/resources/assets/js/vue-components/ShowHideButton.vue","webpack:///./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/TraineeReport.vue","webpack:///./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/AggregateReport.vue","webpack:///./resources/assets/js/vue-components/resources/assets/js/vue-components/DataTable.vue","webpack:///./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/IndividualReport.vue","webpack:///./resources/assets/js/vue-components/resources/assets/js/vue-components/SvgIcon.vue","webpack:///./resources/assets/js/vue-components/resources/assets/js/vue-components/StartEndDate.vue","webpack:///./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/StatsReport.vue","webpack:///./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/FormReport.vue","webpack:///./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/FormReportQuestion.vue","webpack:///./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/FormReportQuestionOptionStats.vue","webpack:///./resources/assets/js/vue-components/Reports/Needs/resources/assets/js/vue-components/Reports/Needs/Evaluations.vue","webpack:///./resources/assets/js/vue-components/Reports/Needs/resources/assets/js/vue-components/Reports/Needs/EvaluationListItem.vue","webpack:///./resources/assets/js/vue-components/Reports/Needs/resources/assets/js/vue-components/Reports/Needs/EvaluationDetailsListItem.vue","webpack:///./resources/assets/js/vue-components/resources/assets/js/vue-components/ComponentList.vue","webpack:///./resources/assets/js/vue-components/resources/assets/js/vue-components/ListPaginator.vue","webpack:///./resources/assets/js/vue-components/resources/assets/js/vue-components/EmailEditor.vue","webpack:///./resources/assets/js/vue-components/resources/assets/js/vue-components/MediumEditor.vue","webpack:///./resources/assets/js/vue-components/resources/assets/js/vue-components/ReplacementList.vue","webpack:///./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/FacultyMeritReport.vue","webpack:///./resources/assets/js/vue-components/Reports/EgressPairings/resources/assets/js/vue-components/Reports/EgressPairings/EgressPairings.vue","webpack:///./resources/assets/js/vue-components/resources/assets/js/vue-components/MarkdownEditor.vue","webpack:///./resources/assets/js/vue-components/Reports/EgressPairings/resources/assets/js/vue-components/Reports/EgressPairings/OverlapListItem.vue","webpack:///./resources/assets/js/vue-components/resources/assets/js/vue-components/PhpDateInterval.vue","webpack:///./resources/assets/js/vue-components/Reports/FacultyMerit/resources/assets/js/vue-components/Reports/FacultyMerit/UsersWithMeritReport.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/resources/assets/js/vue-components/MeritCompensation/UserWithMeritPublicationsListItem.vue"],"names":[],"mappings":";AAuCA;AACA;EACA;CACA;CACA;;ACgVA;CACA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;;AAIA;CACA;CACA;;ACwEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;;AC/UA;CACA;CACA;AAEA;AACA;EACA;CACA;CACA;;ACueA;CACA;CACA;;ACjnBA;;CAEA;CACA;CACA;CACA;CACA;CACA;CACA;;ACuJA;CACA;CACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsTA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;;AAIA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;;ACwUA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;AACA;EACA;CACA;CACA;;AC3fA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;;AC9YA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;;AC0HA;CACA;CACA;CACA;AAEA;CACA;CACA;;ACrDA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;;ACzCA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;;AC2GA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;;ACjNA;CACA;CACA;AAEA;CACA;CACA;;ACuRA;CACA;CACA;AAEA;CACA;CACA;;ACxQA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;CACA;CACA;AAEA;CACA;CACA;;ACNA;CACA;CACA;AAEA;AACA;EACA;CACA;CACA;;ACuPA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;;AC7MA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;;AAIA;CACA;CACA;;ACtEA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;;CAEA;CACA;;AC7DA;CACA;CACA;;ACeA;CACA;CACA;AAEA;CACA;CACA;;ACoBA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA","file":"../css/vue-reports.css","sourcesContent":["<template>\n\t<button type=\"button\" class=\"btn\"\n\t\t\t@click=\"$emit('input', !value)\">\n\t\t\t\n\t\t<slot name=\"left-glyph\"></slot>\n\t\t\t\n\t\t<slot v-if=\"value\" name=\"true\">\n\t\t\tHide\n\t\t</slot>\n\t\t<slot v-else name=\"false\">\n\t\t\tShow\n\t\t</slot>\n\n\t\t<slot>\n\t\t\t{{ text }}\n\t\t</slot>\n\t\t\n\t\t<slot name=\"glyph\">\n\t\t\t<span class=\"glyphicon glyphicon-triangle-bottom\"></span>\n\t\t</slot>\n\t</button>\n</template>\n\n<script>\nexport default {\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t}\n\t}\n};\n</script>\n\n<style scoped>\n\t@media print {\n\t\tbutton {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/resources/assets/js/vue-components/ShowHideButton.vue?47c685e9","<template>\n\t<div>\n\t\t<div class=\"container body-block\">\n\t\t\t<h1>Trainee report</h1>\n\t\t\t<start-end-date v-model=\"dates\" />\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"form-group col-sm-6\">\n\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\tEvaluation training level\n\t\t\t\t\t\t<training-level-select v-model=\"trainingLevel\" />\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group col-sm-6\">\n\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\tTrainee current training level\n\t\t\t\t\t\t<span class=\"glyphicon glyphicon-question-sign\"\n\t\t\t\t\t\t\t\tref=\"currentTrainingLevelHintGlyph\"></span>\n\t\t\t\t\t\t<training-level-select v-model=\"currentTrainingLevel\" />\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"checkbox\" v-model=\"filterMilestones\" />\n\t\t\t\t\tFilter milestones\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<fieldset v-if=\"filterMilestones\">\n\t\t\t\t<legend>Milestones</legend>\n\t\t\t\t<div class=\"filter-milestones-container\">\n\t\t\t\t\t<div v-for=\"(milestoneGroup, index) of milestoneGroups\" class=\"milestone-group\">\n\t\t\t\t\t\t<div class=\"panel panel-default\">\n\t\t\t\t\t\t\t<div class=\"panel-heading\">\n\t\t\t\t\t\t\t\t<label class=\"panel-title\">\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t:checked=\"isEntireMilestoneGroupSelected(index)\"\n\t\t\t\t\t\t\t\t\t\t\t@click=\"toggleEntireMilestoneGroup(index)\" />\n\t\t\t\t\t\t\t\t\t{{ milestoneGroup.text }}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t\t\t<div v-for=\"child of milestoneGroup.children\" class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t:value=\"child.id\"\n\t\t\t\t\t\t\t\t\t\t\t\tv-model=\"milestonesFilter\" />\n\t\t\t\t\t\t\t\t\t\t{{ child.text }}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\n\t\t\t<alert-list v-model=\"alerts\" />\n\n\t\t\t<div class=\"btn-lg-submit-container\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-primary\"\n\t\t\t\t\t\t@click=\"runReport\">\n\t\t\t\t\tRun report\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div v-if=\"report\">\n\t\t\t<div class=\"container body-block\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-3\">\n\t\t\t\t\t\t\t<bootstrap-alert type=\"info\">\n\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-info-sign\"></span>\n\t\t\t\t\t\t\t\tSelect a subject to show\n\t\t\t\t\t\t\t\tindividual reports.\n\t\t\t\t\t\t\t</bootstrap-alert>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-sm-10 col-md-7\">\n\t\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\t\tSubject\n\t\t\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t\t\t<select-two class=\"form-control\" v-if=\"filteredUsers\"\n\t\t\t\t\t\t\t\t\t\t\t:options=\"filteredUsers\" v-model=\"traineeId\"\n\t\t\t\t\t\t\t\t\t\t\t:multiple=\"multipleTrainees\">\n\t\t\t\t\t\t\t\t\t\t<option v-if=\"!multipleTrainees\" value=\"\">All</option>\n\t\t\t\t\t\t\t\t\t</select-two>\n\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\">\n\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"show.inactiveUsers\" />\n\t\t\t\t\t\t\t\t\t\t\tShow inactive\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\">\n\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"multipleTrainees\" />\n\t\t\t\t\t\t\t\t\t\t\tSelect multiple\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-sm-3 col-md-2\">\n\t\t\t\t\t\t\t<button type=\"button\"\n\t\t\t\t\t\t\t\t\tclass=\"btn btn-default labelless-button\"\n\t\t\t\t\t\t\t\t\t@click=\"selectAllTrainees\">\n\t\t\t\t\t\t\t\tSelect all\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"button\"\n\t\t\t\t\t\t\t\t\tclass=\"btn btn-default labelless-button\"\n\t\t\t\t\t\t\t\t\t@click=\"traineeId = null\">\n\t\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"btn-lg-submit-container\">\n\t\t\t\t\t\t<button v-if=\"report && subjects && subjects.length > 0\"\n\t\t\t\t\t\t\t\ttype=\"button\" class=\"btn btn-lg btn-primary\"\n\t\t\t\t\t\t\t\t@click=\"printAll\">\n\t\t\t\t\t\t\tExport all\n\t\t\t\t\t\t\t<svg-icon src=\"/img/icons/pdf.svg\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<template v-if=\"subjects && subjects.length > 0\">\n\t\t\t\t<individual-report v-for=\"subject of subjects\" :key=\"subject.id\"\n\t\t\t\t\t:report=\"report\"\n\t\t\t\t\t:subject=\"subject\"\n\t\t\t\t\tref=\"individualReports\" />\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<stats-report v-if=\"subjectStats\" :report=\"subjectStats\"\n\t\t\t\t\t\ttitle=\"Trainee evaluation statistics by trainee\">\n\t\t\t\t\t<p class=\"text-center\">\n\t\t\t\t\t\tTrainee list can be filtered by\n\t\t\t\t\t\t<b>Trainee current training level</b>\n\t\t\t\t\t\tabove\n\t\t\t\t\t</p>\n\t\t\t\t</stats-report>\n\t\t\t\t<stats-report v-if=\"evaluatorStats\" :report=\"evaluatorStats\"\n\t\t\t\t\t\ttitle=\"Faculty evaluation statistics by trainee\">\n\t\t\t\t\t<p class=\"text-center\">\n\t\t\t\t\t\tTrainee list can be filtered by\n\t\t\t\t\t\t<b>Trainee current training level</b>\n\t\t\t\t\t\tabove\n\t\t\t\t\t</p>\n\t\t\t\t</stats-report>\n\t\t\t\t<aggregate-report :report=\"report\"\n\t\t\t\t\t:milestones=\"milestones\" :competencies=\"competencies\" />\n\t\t\t</template>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport HasAlerts from '@/vue-mixins/HasAlerts.js';\n\nimport AggregateReport from './AggregateReport.vue';\nimport IndividualReport from './IndividualReport.vue';\nimport StartEndDate from '../StartEndDate.vue';\nimport StatsReport from './StatsReport.vue';\nimport TrainingLevelSelect from './TrainingLevelSelect.vue';\nimport BootstrapAlert from '../BootstrapAlert.vue';\nimport SelectTwo from '../SelectTwo.vue';\nimport SvgIcon from '../SvgIcon.vue';\n\nimport { handleError } from '@/modules/errors.js';\nimport {\n\tgetFetchHeaders,\n\tjsonOrThrow,\n\tfetchMilestones,\n\tgroupMilestones,\n\tfetchCompetencies\n} from '@/modules/utils.js';\nimport { isoDateStringObject, currentQuarter } from '@/modules/date-utils.js';\n\nexport default {\n\tmixins: [HasAlerts],\n\tprops: {\n\t\tusers: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t},\n\t\tgroupedUsers: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tdates: isoDateStringObject(currentQuarter()),\n\t\t\ttrainingLevel: 'all',\n\t\t\tcurrentTrainingLevel: 'all',\n\t\t\ttraineeId: null,\n\t\t\tfilterMilestones: false,\n\t\t\tmilestonesFilter: [],\n\t\t\tmultipleTrainees: false,\n\n\t\t\tshow: {\n\t\t\t\tinactiveUsers: false\n\t\t\t},\n\n\t\t\treport: null,\n\t\t\tsubjectStats: null,\n\t\t\tevaluatorStats: null,\n\n\t\t\tmilestones: [],\n\t\t\tcompetencies: []\n\t\t};\n\t},\n\tmounted(){\n\t\tfetchMilestones().then(milestones => {\n\t\t\tthis.milestones = milestones;\n\t\t}).catch(err => {\n\t\t\thandleError(err, this, 'There was a problem fetching milestones');\n\t\t});\n\n\t\tfetchCompetencies().then(competencies => {\n\t\t\tthis.competencies = competencies;\n\t\t}).catch(err => {\n\t\t\thandleError(err, this, 'There was a problem fetching competencies');\n\t\t});\n\n\t\t$(this.$refs.currentTrainingLevelHintGlyph).popover({\n\t\t\ttitle: 'Current training level',\n\t\t\tcontent: `\n\t\t\t\t<p>\n\t\t\t\t\tSelecting a <b>current training level</b> will include only\n\t\t\t\t\tactive trainees for that level, whether they have completed\n\t\t\t\t\tevaluations or not.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tAny trainees with completed evaluations associated with the\n\t\t\t\t\t<b>evaluation training level</b> who are not currently\n\t\t\t\t\tin the selected <b>current training level</b> will be\n\t\t\t\t\texcluded.\n\t\t\t\t</p>\n\t\t\t\t<dd>\n\t\t\t\t\t<dt>Example:</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tJane is currently a fellow, but she completed her\n\t\t\t\t\t\t\tresidency a month late, at the end of July.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tWhen running reports for July for the incoming CA-3s,\n\t\t\t\t\t\t\tJane's July CA-3 evaluations will be excluded\n\t\t\t\t\t\t\tfrom the report by selecting a\n\t\t\t\t\t\t\t<b>current training level</b> of <i>CA-3</i>.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</dd>\n\t\t\t\t</dd>`,\n\t\t\thtml: true,\n\t\t\tplacement: 'auto top'\n\t\t});\n\t},\n\n\tcomputed: {\n\t\tmilestoneGroups(){\n\t\t\treturn groupMilestones(this.milestones);\n\t\t},\n\t\tfilteredUsers(){\n\t\t\tlet groupedUsers = this.currentTrainingLevel === 'all'\n\t\t\t\t? this.groupedUsers.filter(userGroup =>\n\t\t\t\t\tuserGroup.text.toLowerCase() !== 'faculty')\n\t\t\t\t: this.groupedUsers.filter(userGroup =>\n\t\t\t\t\tuserGroup.text.toLowerCase() === this.currentTrainingLevel.toLowerCase());\n\n\t\t\treturn this.show.inactiveUsers\n\t\t\t\t? groupedUsers\n\t\t\t\t: groupedUsers.filter(userGroup => userGroup.text !== 'Inactive');\n\n\t\t},\n\t\tsubjects(){\n\t\t\tif(this.traineeId){\n\t\t\t\tlet traineeId = Array.isArray(this.traineeId)\n\t\t\t\t\t? this.traineeId\n\t\t\t\t\t: [this.traineeId];\n\t\t\t\treturn this.users.filter(user => traineeId.includes(user.id.toString()));\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tisEntireMilestoneGroupSelected(index){\n\t\t\tlet groupIds = this.milestoneGroups[index].children.map(child => child.id);\n\t\t\treturn groupIds.every(id => {\n\t\t\t\treturn this.milestonesFilter.includes(id);\n\t\t\t});\n\t\t},\n\t\ttoggleEntireMilestoneGroup(index){\n\t\t\tlet groupIds = this.milestoneGroups[index].children.map(child => child.id);\n\t\t\tlet newMilestones = this.milestonesFilter.filter(milestone => {\n\t\t\t\treturn !groupIds.includes(milestone);\n\t\t\t});\n\t\t\tif(!this.isEntireMilestoneGroupSelected(index)){\n\t\t\t\tnewMilestones = newMilestones.concat(groupIds);\n\t\t\t}\n\t\t\tthis.milestonesFilter = newMilestones;\n\t\t},\n\t\tselectAllTrainees() {\n\t\t\tthis.multipleTrainees = true;\n\t\t\tconst users = this.show.inactiveUsers\n\t\t\t\t? this.users\n\t\t\t\t: this.users.filter(u => u.status === 'active');\n\t\t\tthis.traineeId = users.map(u => u.id);\n\t\t},\n\t\trunReport(){\n\t\t\tfetch('/report/aggregate', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: getFetchHeaders(),\n\t\t\t\tcredentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tstartDate: this.dates.startDate,\n\t\t\t\t\tendDate: this.dates.endDate,\n\t\t\t\t\ttrainingLevel: this.trainingLevel,\n\t\t\t\t\tcurrentTrainingLevel: this.currentTrainingLevel,\n\t\t\t\t\tmilestones: this.milestonesFilter\n\t\t\t\t})\n\t\t\t}).then(response => {\n\t\t\t\tif(response.ok)\n\t\t\t\t\treturn response.json();\n\t\t\t\tlet err = new Error(response.statusText);\n\t\t\t\terr.response = response;\n\t\t\t\tthrow err;\n\t\t\t}).then(report => {\n\t\t\t\tthis.report = Object.assign({}, this.report, report);\n\t\t\t}).catch(err => {\n\t\t\t\thandleError(err, this, 'There was a problem fetching the aggregate report');\n\t\t\t});\n\n\t\t\tfetch('/report/stats/trainee/trainee', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: getFetchHeaders(),\n\t\t\t\tcredentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(Object.assign({}, this.dates, {\n\t\t\t\t\ttrainingLevel: this.currentTrainingLevel\n\t\t\t\t}))\n\t\t\t}).then(jsonOrThrow).then(stats => {\n\t\t\t\tthis.subjectStats = stats;\n\t\t\t}).catch(err => {\n\t\t\t\thandleError(err, this, 'There was a problem fetching the trainee statistics');\n\t\t\t});\n\n\t\t\tfetch('/report/stats/faculty/trainee', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: getFetchHeaders(),\n\t\t\t\tcredentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(Object.assign({}, this.dates, {\n\t\t\t\t\ttrainingLevel: this.currentTrainingLevel\n\t\t\t\t}))\n\t\t\t}).then(jsonOrThrow).then(stats => {\n\t\t\t\tthis.evaluatorStats = stats;\n\t\t\t}).catch(err => {\n\t\t\t\thandleError(err, this, 'There was a problem fetching the faculty statistics');\n\t\t\t});\n\t\t},\n\t\tprintAll(){\n\t\t\tthis.$refs.individualReports.map(individual => {\n\t\t\t\tindividual.exportPdf();\n\t\t\t});\n\t\t}\n\t},\n\tcomponents: {\n\t\tStartEndDate,\n\t\tAggregateReport,\n\t\tIndividualReport,\n\t\tStatsReport,\n\t\tTrainingLevelSelect,\n\t\tBootstrapAlert,\n\t\tSelectTwo,\n\t\tSvgIcon\n\t}\n};\n</script>\n\n<style scoped>\n\t.filter-milestones-container {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: flex-start;\n\t\talign-items: stretch;\n\t}\n\n\t.milestone-group {\n\t\tflex-grow: 0;\n\t\tflex-shrink: 1;\n\t\twidth: 250px;\n\t\tmin-width: 200px;\n\t\tmax-width: 100%;\n\t\tmargin: 10px;\n\t}\n\n\t.milestone-group .panel-body {\n\t\theight: 300px;\n\t\toverflow: auto;\n\t}\n\n\t.milestone-group .panel-body label {\n\t\tfont-weight: normal;\n\t}\n</style>\n\n<style>\n\t.popover dd {\n\t\tpadding: 0 1em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/TraineeReport.vue?b91f1442","<template>\n\t<div class=\"container body-block\">\n\t\t<h3>Aggregate</h3>\n\t\t<fieldset class=\"show-container\">\n\t\t\t<legend>Show</legend>\n\t\t\t<div>\n\t\t\t\t<label v-for=\"(part, name) of show\">\n\t\t\t\t\t<input type=\"checkbox\" v-model=\"show[name]\" />\n\t\t\t\t\t{{ camelCaseToWords(name) }}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</fieldset>\n\n\t\t<data-table id=\"aggregate-table\" :bordered=\"true\" :thead=\"tableThead\"\n\t\t\t:data=\"tableData\" :config=\"tableConfig\" :exportable=\"true\"\n\t\t\t:exportFilename=\"tableExportFilename\" />\n\n\t\t<div class=\"graphs-container\" v-if=\"show.charts\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div v-if=\"show.competencies\" :class=\"chartWidth\">\n\t\t\t\t\t<chartjs-chart id=\"aggregate-competency-chart\" :type=\"chartType\"\n\t\t\t\t\t\t:options=\"chartOptions\" :data=\"competencyChartData\" />\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"show.milestones\" :class=\"chartWidth\">\n\t\t\t\t\t<chartjs-chart id=\"aggregate-milestone-chart\" :type=\"chartType\"\n\t\t\t\t\t\t:options=\"chartOptions\" :data=\"milestoneChartData\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"row chart-options\">\n\t\t\t\t<div class=\"col-sm-offset-5 col-sm-2\">\n\t\t\t\t\t<div class=\"panel panel-default\">\n\t\t\t\t\t\t<div class=\"panel-heading\">\n\t\t\t\t\t\t\t<span class=\"panel-title\">Chart options</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t\t<fieldset v-if=\"show.milestones && show.competencies\">\n\t\t\t\t\t\t\t\t<legend>Orientation</legend>\n\t\t\t\t\t\t\t\t<div class=\"btn-group btn-group-justified\" data-toggle=\"buttons\">\n\t\t\t\t\t\t\t\t\t<bootstrap-button-input type=\"radio\" option=\"horizontal\"\n\t\t\t\t\t\t\t\t\t\t\tv-model=\"chartOrientation\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-option-horizontal\"></span>\n\t\t\t\t\t\t\t\t\t</bootstrap-button-input>\n\t\t\t\t\t\t\t\t\t<bootstrap-button-input type=\"radio\" option=\"vertical\"\n\t\t\t\t\t\t\t\t\t\t\tv-model=\"chartOrientation\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-option-vertical\"></span>\n\t\t\t\t\t\t\t\t\t</bootstrap-button-input>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\t\t\tType\n\t\t\t\t\t\t\t\t\t<select class=\"form-control\" v-model=\"chartType\">\n\t\t\t\t\t\t\t\t\t\t<option v-for=\"type of chartTypes\" :value=\"type\">\n\t\t\t\t\t\t\t\t\t\t\t{{ ucfirst(type) }}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport Color from 'color';\n\nimport BootstrapButtonInput from '../BootstrapButtonInput.vue';\nimport ChartjsChart from '../ChartjsChart.vue';\nimport DataTable from '../DataTable.vue';\n\nimport { CHART_COLORS } from '@/modules/constants.js';\nimport { camelCaseToWords, ucfirst } from '@/modules/utils.js';\nimport { renderTrainingLevel } from '@/modules/datatable-utils.js';\nimport { getAverageLevel } from '@/modules/report-utils.js';\nimport { isoDateString } from '@/modules/date-utils.js';\n\nexport default {\n\tprops: {\n\t\treport: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tmilestones: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t},\n\t\tcompetencies: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tshow: {\n\t\t\t\tmilestones: false,\n\t\t\t\tcompetencies: true,\n\t\t\t\taverages: true,\n\t\t\t\taverageLevels: false,\n\t\t\t\tevaluationCounts: true,\n\t\t\t\tstandardDeviations: false,\n\t\t\t\ttotals: true,\n\t\t\t\tcharts: true\n\t\t\t},\n\t\t\ttransformations: {\n\t\t\t\tlevelRatings: false\n\t\t\t},\n\t\t\tchartType: 'radar',\n\t\t\tchartOrientation: 'vertical'\n\t\t};\n\t},\n\tcomputed: {\n\t\torderedMilestones(){\n\t\t\tif(!this.report.milestones)\n\t\t\t\treturn [];\n\n\t\t\treturn this.milestones.filter(milestone =>\n\t\t\t\tmilestone.id in this.report.milestones\n\t\t\t);\n\t\t},\n\t\torderedCompetencies(){\n\t\t\tif(!this.report.competencies)\n\t\t\t\treturn [];\n\n\t\t\treturn this.competencies.filter(competency =>\n\t\t\t\tcompetency.id in this.report.competencies\n\t\t\t);\n\t\t},\n\t\tcolsPerItem(){\n\t\t\treturn [\n\t\t\t\tthis.show.averages,\n\t\t\t\tthis.show.averageLevels,\n\t\t\t\tthis.show.evaluationCounts,\n\t\t\t\tthis.show.standardDeviations\n\t\t\t].filter(col => col).length;\n\t\t},\n\t\tnameRowspan(){\n\t\t\tlet rowspan = 1;\n\t\t\tif(this.show.milestones && this.show.competencies)\n\t\t\t\trowspan++;\n\t\t\tif(this.showSomething && this.colsPerItem > 1)\n\t\t\t\trowspan++;\n\n\t\t\treturn rowspan;\n\t\t},\n\t\tshowSomething(){\n\t\t\treturn this.show.milestones || this.show.competencies || this.show.totals;\n\t\t},\n\t\tmilestoneColspan(){\n\t\t\treturn this.colsPerItem * Object.keys(this.report.milestones).length;\n\t\t},\n\t\tcompetencyColspan(){\n\t\t\treturn this.colsPerItem * Object.keys(this.report.competencies).length;\n\t\t},\n\t\ttableThead(){\n\t\t\tlet thead = [];\n\t\t\tlet row;\n\t\t\tif(this.show.milestones && this.show.competencies){\n\t\t\t\trow = [];\n\t\t\t\trow.push({rowspan: this.nameRowspan, text: 'Name'});\n\t\t\t\trow.push({\n\t\t\t\t\tcolspan: this.milestoneColspan,\n\t\t\t\t\ttext: 'Milestones'\n\t\t\t\t});\n\t\t\t\trow.push({\n\t\t\t\t\tcolspan: this.competencyColspan,\n\t\t\t\t\ttext: 'Competencies'\n\t\t\t\t});\n\t\t\t\tif(this.show.totals)\n\t\t\t\t\trow.push({colspan: 3, text: 'All'});\n\n\t\t\t\tthead.push(row);\n\t\t\t}\n\n\n\t\t\tif(this.showSomething && this.colsPerItem > 1){\n\t\t\t\trow = [];\n\t\t\t\tif(this.nameRowspan === 2)\n\t\t\t\t\trow.push({rowspan: this.nameRowspan, text: 'Name'});\n\n\t\t\t\tif(this.show.milestones){\n\t\t\t\t\tthis.orderedMilestones.map(milestone => {\n\t\t\t\t\t\trow.push({\n\t\t\t\t\t\t\tcolspan: this.colsPerItem,\n\t\t\t\t\t\t\ttext: milestone.title\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif(this.show.competencies){\n\t\t\t\t\tthis.orderedCompetencies.map(competency => {\n\t\t\t\t\t\trow.push({\n\t\t\t\t\t\t\tcolspan: this.colsPerItem,\n\t\t\t\t\t\t\ttext: competency.title\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif(this.show.totals)\n\t\t\t\t\trow.push({colspan: 3, text: 'Total'});\n\n\t\t\t\tif(row.length > 0)\n\t\t\t\t\tthead.push(row);\n\t\t\t}\n\n\n\t\t\trow = [];\n\t\t\tif(this.nameRowspan === 1)\n\t\t\t\trow.push({rowspan: this.nameRowspan, text: 'Name'});\n\t\t\tif(this.show.milestones){\n\t\t\t\tthis.orderedMilestones.map(milestone => {\n\t\t\t\t\tif(this.colsPerItem > 1){\n\t\t\t\t\t\tif(this.show.averages)\n\t\t\t\t\t\t\trow.push({text: 'Average'});\n\t\t\t\t\t\tif(this.show.averageLevels)\n\t\t\t\t\t\t\trow.push({text: 'Average Level'});\n\t\t\t\t\t\tif(this.show.standardDeviations)\n\t\t\t\t\t\t\trow.push({text: 'Std. Dev.'});\n\t\t\t\t\t\tif(this.show.evaluationCounts)\n\t\t\t\t\t\t\trow.push({text: '#'});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trow.push({\n\t\t\t\t\t\t\tcolspan: this.colsPerItem,\n\t\t\t\t\t\t\ttext: milestone.title\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif(this.show.competencies){\n\t\t\t\tthis.orderedCompetencies.map(competency => {\n\t\t\t\t\tif(this.colsPerItem > 1){\n\t\t\t\t\t\tif(this.show.averages)\n\t\t\t\t\t\t\trow.push({text: 'Average'});\n\t\t\t\t\t\tif(this.show.averageLevels)\n\t\t\t\t\t\t\trow.push({text: 'Average Level'});\n\t\t\t\t\t\tif(this.show.standardDeviations)\n\t\t\t\t\t\t\trow.push({text: 'Std. Dev.'});\n\t\t\t\t\t\tif(this.show.evaluationCounts)\n\t\t\t\t\t\t\trow.push({text: '#'});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trow.push({\n\t\t\t\t\t\t\tcolspan: this.colsPerItem,\n\t\t\t\t\t\t\ttext: competency.title\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif(this.show.totals){\n\t\t\t\trow.push({text: '# Evaluators'});\n\t\t\t\trow.push({text: '# Evaluations'});\n\t\t\t\trow.push({text: '# Trainee Requests'});\n\t\t\t}\n\n\t\t\tif(row.length > 0)\n\t\t\t\tthead.push(row);\n\n\t\t\treturn thead;\n\t\t},\n\t\ttableConfig(){\n\t\t\treturn {\n\t\t\t\torder: [[0, 'asc']],\n\t\t\t\tstateSave: true,\n\t\t\t\tdom: 'lfprtip',\n\t\t\t\tscrollX: true,\n\t\t\t\tscrollY: '500px',\n\t\t\t\tscrollCollapse: true,\n\t\t\t\tpaging: false,\n\t\t\t\tfixedColumns: true,\n\t\t\t};\n\t\t},\n\t\ttableData(){\n\t\t\tlet data = [];\n\t\t\tfor(let subjectId in this.report.subjects){\n\t\t\t\tlet row = [];\n\t\t\t\trow.push(`<a href=\"/profile/${subjectId}\" target=\"_blank\">${this.report.subjects[subjectId]}</a>`);\n\t\t\t\tif(this.show.milestones){\n\t\t\t\t\tthis.orderedMilestones.map(milestone => {\n\t\t\t\t\t\tif(this.show.averages)\n\t\t\t\t\t\t\trow.push(\n\t\t\t\t\t\t\t\tthis.report.subjectMilestone\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectMilestone[subjectId]\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectMilestone[subjectId][milestone.id]\n\t\t\t\t\t\t\t\t\t? parseFloat(this.report.subjectMilestone[subjectId][milestone.id]).toFixed(2)\n\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif(this.show.averageLevels)\n\t\t\t\t\t\t\trow.push(getAverageLevel(\n\t\t\t\t\t\t\t\tthis.report.subjectMilestone\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectMilestone[subjectId]\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectMilestone[subjectId][milestone.id]\n\t\t\t\t\t\t\t\t\t? parseFloat(this.report.subjectMilestone[subjectId][milestone.id]).toFixed(2)\n\t\t\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t\t));\n\n\t\t\t\t\t\tif(this.show.standardDeviations)\n\t\t\t\t\t\t\trow.push(\n\t\t\t\t\t\t\t\tthis.report.subjectMilestoneDeviations\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectMilestoneDeviations[subjectId]\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectMilestoneDeviations[subjectId][milestone.id]\n\t\t\t\t\t\t\t\t\t? parseFloat(this.report.subjectMilestoneDeviations[subjectId][milestone.id]).toFixed(2)\n\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif(this.show.evaluationCounts)\n\t\t\t\t\t\t\trow.push(\n\t\t\t\t\t\t\t\tthis.report.subjectMilestoneEvals\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectMilestoneEvals[subjectId]\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectMilestoneEvals[subjectId][milestone.id]\n\t\t\t\t\t\t\t\t\t? parseFloat(this.report.subjectMilestoneEvals[subjectId][milestone.id]).toFixed()\n\t\t\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif(this.colsPerItem === 0)\n\t\t\t\t\t\t\trow.push('');\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif(this.show.competencies){\n\t\t\t\t\tthis.orderedCompetencies.map(competency => {\n\t\t\t\t\t\tif(this.show.averages)\n\t\t\t\t\t\t\trow.push(\n\t\t\t\t\t\t\t\tthis.report.subjectCompetency\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectCompetency[subjectId]\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectCompetency[subjectId][competency.id]\n\t\t\t\t\t\t\t\t\t? parseFloat(this.report.subjectCompetency[subjectId][competency.id]).toFixed(2)\n\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif(this.show.averageLevels)\n\t\t\t\t\t\t\trow.push(getAverageLevel(\n\t\t\t\t\t\t\t\tthis.report.subjectCompetency\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectCompetency[subjectId]\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectCompetency[subjectId][competency.id]\n\t\t\t\t\t\t\t\t\t? parseFloat(this.report.subjectCompetency[subjectId][competency.id]).toFixed(2)\n\t\t\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t\t));\n\n\t\t\t\t\t\tif(this.show.standardDeviations)\n\t\t\t\t\t\t\trow.push(\n\t\t\t\t\t\t\t\tthis.report.subjectCompetencyDeviations\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectCompetencyDeviations[subjectId]\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectCompetencyDeviations[subjectId][competency.id]\n\t\t\t\t\t\t\t\t\t? parseFloat(this.report.subjectCompetencyDeviations[subjectId][competency.id]).toFixed(2)\n\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif(this.show.evaluationCounts)\n\t\t\t\t\t\t\trow.push(\n\t\t\t\t\t\t\t\tthis.report.subjectCompetencyEvals\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectCompetencyEvals[subjectId]\n\t\t\t\t\t\t\t\t\t\t&& this.report.subjectCompetencyEvals[subjectId][competency.id]\n\t\t\t\t\t\t\t\t\t? parseFloat(this.report.subjectCompetencyEvals[subjectId][competency.id]).toFixed()\n\t\t\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif(this.colsPerItem === 0)\n\t\t\t\t\t\t\trow.push('');\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif(this.show.totals){\n\t\t\t\t\trow.push(\n\t\t\t\t\t\tthis.report.subjectEvaluators[subjectId]\n\t\t\t\t\t\t\t? Object.keys(this.report.subjectEvaluators[subjectId]).length\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t);\n\t\t\t\t\trow.push(\n\t\t\t\t\t\tthis.report.subjectEvals[subjectId]\n\t\t\t\t\t\t\t? Object.keys(this.report.subjectEvals[subjectId]).length\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t);\n\t\t\t\t\trow.push(\n\t\t\t\t\t\tthis.report.subjectRequests[subjectId]\n\t\t\t\t\t\t\t? Object.keys(this.report.subjectRequests[subjectId]).length\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tdata.push(row);\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\ttableExportFilename(){\n\t\t\tlet level = this.report.trainingLevel === 'all'\n\t\t\t\t? ''\n\t\t\t\t: renderTrainingLevel(this.report.trainingLevel);\n\t\t\tlet start = isoDateString(new Date(this.report.startDate.date));\n\t\t\tlet end = isoDateString(new Date(this.report.endDate.date));\n\t\t\tlet now = new Date().toLocaleString();\n\t\t\treturn `Aggregate Report ${level}, ${start} - ${end}, exported ${now}`;\n\t\t},\n\t\tchartTypes(){\n\t\t\treturn [\n\t\t\t\t'radar',\n\t\t\t\t'line',\n\t\t\t\t'bar'\n\t\t\t];\n\t\t},\n\t\tchartWidth(){\n\t\t\treturn {\n\t\t\t\t'col-md-6': this.chartOrientation === 'horizontal',\n\t\t\t\t'col-md-12': this.chartOrientation === 'vertical'\n\t\t\t};\n\t\t},\n\t\tchartOptions(){\n\t\t\treturn {\n\t\t\t\tlegend: {\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\tfontColor: '#333'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttooltips: {\n\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\tlabel(tooltip, data){\n\t\t\t\t\t\t\tlet value = parseFloat(tooltip.yLabel).toFixed(2);\n\t\t\t\t\t\t\tlet name = data.datasets[tooltip.datasetIndex].label;\n\t\t\t\t\t\t\treturn `${name}: ${value}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcompetencyChartData(){\n\t\t\tlet color = Color(CHART_COLORS.AVERAGE);\n\t\t\tlet backgroundColor = color.alpha(0.2);\n\t\t\treturn {\n\t\t\t\tlabels: Object.values(this.report.competencies),\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Average Competencies',\n\t\t\t\t\t\tbackgroundColor: backgroundColor.rgb().string(),\n\t\t\t\t\t\tborderColor: color.rgb().string(),\n\t\t\t\t\t\tpointBackgroundColor: color.rgb().string(),\n\t\t\t\t\t\tpointBorderColor: '#fff',\n\t\t\t\t\t\tpointHoverBackgroundColor: '#fff',\n\t\t\t\t\t\tpointHoverBorderColor: color.rgb().string(),\n\t\t\t\t\t\tdata: Object.values(this.report.averageCompetency)\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t},\n\t\tmilestoneChartData(){\n\t\t\tlet color = Color(CHART_COLORS.AVERAGE);\n\t\t\tlet backgroundColor = color.alpha(0.2);\n\t\t\treturn {\n\t\t\t\tlabels: Object.values(this.report.milestones),\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Average Milestones',\n\t\t\t\t\t\tbackgroundColor: backgroundColor.rgb().string(),\n\t\t\t\t\t\tborderColor: color.rgb().string(),\n\t\t\t\t\t\tpointBackgroundColor: color.rgb().string(),\n\t\t\t\t\t\tpointBorderColor: '#fff',\n\t\t\t\t\t\tpointHoverBackgroundColor: '#fff',\n\t\t\t\t\t\tpointHoverBorderColor: color.rgb().string(),\n\t\t\t\t\t\tdata: Object.values(this.report.averageMilestone)\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t},\n\tmethods: {\n\t\tcamelCaseToWords,\n\t\tucfirst\n\t},\n\tcomponents: {\n\t\tBootstrapButtonInput,\n\t\tChartjsChart,\n\t\tDataTable\n\t}\n};\n</script>\n\n<style scoped>\n\t.show-container div {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\n\t.show-container div label {\n\t\tmargin: 0.5em 1em;\n\t}\n\n\t.graphs-container {\n\t\tmargin: 2em 0;\n\t}\n\n\t.graphs-container .chart-options {\n\t\tmargin: 2em 0 0;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/AggregateReport.vue?035e06f7","<template>\n\t<div class=\"table-responsive\">\n\t\t<div class=\"refresh-button-container\" v-if=\"canReload\">\n\t\t\t<button type=\"button\" class=\"btn btn-default\" title=\"Reload table\"\n\t\t\t\t\t@click=\"reloadTable\">\n\t\t\t\t<span class=\"glyphicon glyphicon-refresh\"></span>\n\t\t\t</button>\n\t\t</div>\n\n\t\t<table :id=\"id\" class=\"table\" :class=\"tableClass\" width=\"100%\" ref=\"table\">\n\t\t\t<slot>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr v-for=\"(row, rowIndex) of thead\" :key=\"`row-${rowIndex}`\">\n\t\t\t\t\t\t<th v-for=\"(th, thIndex) of row\" :key=\"thIndex\"\n\t\t\t\t\t\t\t\t:rowspan=\"th.rowspan\"\n\t\t\t\t\t\t\t\t:colspan=\"th.colspan\">\n\t\t\t\t\t\t\t{{ th.text || th }}\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t</slot>\n\t\t</table>\n\t\t<div v-if=\"exportable && data && data.length > 0\" class=\"text-center\">\n\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t@click=\"exportCsv\">\n\t\t\t\tExport CSV\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport download from 'downloadjs';\n\nimport { csvHeader } from '@/modules/report-utils.js';\nimport { escapeCsv, sortIgnoreCase } from '@/modules/utils.js';\n\nexport default {\n\tprops: {\n\t\tid: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\tstriped: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tbordered: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\n\t\tthead: {\n\t\t\ttype: Array,\n\t\t\trequired: false\n\t\t},\n\t\tconfig: {\n\t\t\ttype: Object,\n\t\t\trequired: false\n\t\t},\n\t\tdata: {\n\t\t\ttype: Array,\n\t\t\trequired: false\n\t\t},\n\n\t\treloadable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\texportable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\texportFilename: {\n\t\t\ttype: String,\n\t\t\tdefault(){\n\t\t\t\treturn `Table Export ${new Date().toLocaleString()}`;\n\t\t\t}\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tupdateData: false\n\t\t};\n\t},\n\tmounted(){\n\t\t$(this.$refs.table).DataTable(Object.assign({}, this.config, {data: this.data}));\n\t},\n\tcomputed: {\n\t\ttableClass(){\n\t\t\treturn {\n\t\t\t\t'table-striped': this.striped,\n\t\t\t\t'table-bordered': this.bordered\n\t\t\t};\n\t\t},\n\t\tcanReload(){\n\t\t\treturn (this.config && 'ajax' in this.config) || this.reloadable;\n\t\t}\n\t},\n\twatch: {\n\t\tconfig(){\n\t\t\tlet config = Object.assign({destroy: true}, this.config, {data: this.data});\n\t\t\t$(this.$refs.table).DataTable(config);\n\t\t},\n\t\tdata(data){\n\t\t\tthis.updateData = true;\n\t\t\tthis.$nextTick(() => {\n\t\t\t\t// only set data if table not already recreated with new data\n\t\t\t\tif(this.updateData){\n\t\t\t\t\t$(this.$refs.table).DataTable({\n\t\t\t\t\t\tretrieve: true\n\t\t\t\t\t}).clear().rows.add(data).draw();\n\t\t\t\t\tthis.updateData = false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\tmethods: {\n\t\treloadTable(){\n\t\t\tif (!this.canReload)\n\t\t\t\treturn;\n\n\t\t\tif (this.config && 'ajax' in this.config)\n\t\t\t\t$(this.$refs.table).DataTable({\n\t\t\t\t\tretrieve: true\n\t\t\t\t}).ajax.reload(null, false);\n\t\t\telse\n\t\t\t\tthis.$emit('reload');\n\t\t},\n\t\texportCsv(){\n\t\t\tif (!this.exportable)\n\t\t\t\treturn;\n\n\t\t\tlet header = csvHeader(this.thead);\n\t\t\tlet rows = this.data.map(row =>\n\t\t\t\trow.map(cell =>\n\t\t\t\t\tescapeCsv(cell.toString())\n\t\t\t\t).join(',')\n\t\t\t).sort(sortIgnoreCase);\n\t\t\tlet table = header.concat(rows);\n\t\t\tdownload(table.join('\\n'), `${this.exportFilename}.csv`, 'text/csv');\n\t\t}\n\t},\n\tbeforeUpdate(){\n\t\t$(this.$refs.table).DataTable({\n\t\t\tretrieve: true\n\t\t}).clear().destroy();\n\t\tthis.updateData = false;\n\t},\n\tupdated(){\n\t\t$(this.$refs.table).DataTable(Object.assign({}, this.config, {data: this.data}));\n\t},\n\tbeforeDestroy(){\n\t\t$(this.$refs.table).DataTable({\n\t\t\tretrieve: true\n\t\t}).clear().destroy();\n\t}\n};\n</script>\n\n<style scoped>\n\t.refresh-button-container {\n\t\ttext-align: right;\n\t}\n\n\t@media print {\n\t\t.refresh-button-container {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/resources/assets/js/vue-components/DataTable.vue?a7abc4e2","<template>\n\t<div class=\"individual-report container body-block\">\n\t\t<alert-list v-model=\"alerts\" />\n\t\t<template v-if=\"report.subjectEvaluations[subjectId] && report.subjectEvaluations[subjectId].length > 0\">\n\t\t\t<h2>\n\t\t\t\tIndividual Report\n\t\t\t\t<small>\n\t\t\t\t\t{{ report.subjects[subjectId] }}\n\t\t\t\t</small>\n\t\t\t</h2>\n\n\n\t\t\t<section>\n\t\t\t\t<h3>Evaluations included in report</h3>\n\t\t\t\t<data-table :bordered=\"true\" :thead=\"evaluationsThead\"\n\t\t\t\t\t:config=\"evaluationsConfig\" :data=\"evaluationsData\" />\n\n\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t@click=\"exportPdf\">\n\t\t\t\t\t\t\tExport PDF\n\t\t\t\t\t\t\t<svg-icon src=\"/img/icons/pdf.svg\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t\t\t@click=\"saveCharts\">\n\t\t\t\t\t\t\tSave chart images\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section>\n\t\t\t\t<fieldset class=\"show-container\">\n\t\t\t\t\t<legend>Show</legend>\n\t\t\t\t\t<label v-for=\"(part, name) of show\">\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"show[name]\" />\n\t\t\t\t\t\t{{ camelCaseToWords(name) }}\n\t\t\t\t\t</label>\n\t\t\t\t</fieldset>\n\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div :class=\"milestoneCompetencyWidth\" v-if=\"show.competencies\">\n\t\t\t\t\t\t<h4>Competencies</h4>\n\t\t\t\t\t\t<data-table :bordered=\"true\"\n\t\t\t\t\t\t\t:thead=\"competenciesThead\" :data=\"competenciesData\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div :class=\"milestoneCompetencyWidth\" v-if=\"show.milestones\">\n\t\t\t\t\t\t<h4>Milestones</h4>\n\t\t\t\t\t\t<data-table :bordered=\"true\"\n\t\t\t\t\t\t\t:thead=\"milestonesThead\" :data=\"milestonesData\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section v-if=\"show.charts\">\n\t\t\t\t<div class=\"row charts\">\n\t\t\t\t\t<div v-if=\"show.competencies\" :class=\"chartWidth\">\n\t\t\t\t\t\t<chartjs-chart v-if=\"competencyChartData\"\n\t\t\t\t\t\t\t:type=\"chartType\"\n\t\t\t\t\t\t\t:options=\"chartOptions\" :data=\"competencyChartData\"\n\t\t\t\t\t\t\t:shouldEmit=\"true\" ref=\"competencyChart\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if=\"show.milestones\" :class=\"chartWidth\">\n\t\t\t\t\t\t<chartjs-chart v-if=\"milestoneChartData\"\n\t\t\t\t\t\t\t:type=\"chartType\"\n\t\t\t\t\t\t\t:options=\"chartOptions\" :data=\"milestoneChartData\"\n\t\t\t\t\t\t\t:shouldEmit=\"true\" ref=\"milestoneChart\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"row chart-options\">\n\t\t\t\t\t<div class=\"col-sm-offset-5 col-sm-2\">\n\t\t\t\t\t\t<div class=\"panel panel-default\">\n\t\t\t\t\t\t\t<div class=\"panel-heading\">\n\t\t\t\t\t\t\t\t<span class=\"panel-title\">Chart options</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t\t\t<fieldset v-if=\"show.milestones && show.competencies\">\n\t\t\t\t\t\t\t\t\t<legend>Orientation</legend>\n\t\t\t\t\t\t\t\t\t<div class=\"btn-group btn-group-justified\" data-toggle=\"buttons\">\n\t\t\t\t\t\t\t\t\t\t<bootstrap-button-input type=\"radio\" option=\"horizontal\"\n\t\t\t\t\t\t\t\t\t\t\t\tv-model=\"chartOrientation\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-option-horizontal\"></span>\n\t\t\t\t\t\t\t\t\t\t</bootstrap-button-input>\n\t\t\t\t\t\t\t\t\t\t<bootstrap-button-input type=\"radio\" option=\"vertical\"\n\t\t\t\t\t\t\t\t\t\t\t\tv-model=\"chartOrientation\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-option-vertical\"></span>\n\t\t\t\t\t\t\t\t\t\t</bootstrap-button-input>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\t\t\t\tType\n\t\t\t\t\t\t\t\t\t\t<select class=\"form-control\" v-model=\"chartType\">\n\t\t\t\t\t\t\t\t\t\t\t<option v-for=\"type of chartTypes\" :value=\"type\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{ ucfirst(type) }}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section>\n\t\t\t\t<h3>Comments</h3>\n\t\t\t\t<data-table :bordered=\"true\" :thead=\"commentsThead\"\n\t\t\t\t\t:config=\"commentsConfig\" :data=\"commentsData\" />\n\n\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t@click=\"exportPdf\">\n\t\t\t\t\t\tExport PDF\n\t\t\t\t\t\t<svg-icon src=\"/img/icons/pdf.svg\" />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t\t@click=\"saveCharts\">\n\t\t\t\t\t\tSave chart images\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t</section>\n\n\t\t</template>\n\t\t<bootstrap-alert v-else type=\"warning\">\n\t\t\tNo <strong>{{ trainingLevelDisplay }}</strong> evaluations found for\n\t\t\t<strong>{{ subject.full_name }}</strong>\n\t\t\tbetween <strong>{{ renderDateCell(report.startDate.date) }}</strong>\n\t\t\tand <strong>{{ renderDateCell(report.endDate.date) }}</strong>.\n\t\t</bootstrap-alert>\n\t</div>\n</template>\n\n<script>\nimport Color from 'color';\nimport download from 'downloadjs';\n\nimport HasAlerts from '@/vue-mixins/HasAlerts.js';\n\nimport BootstrapAlert from '../BootstrapAlert.vue';\nimport BootstrapButtonInput from '../BootstrapButtonInput.vue';\nimport ChartjsChart from '../ChartjsChart.vue';\nimport DataTable from '../DataTable.vue';\nimport SvgIcon from '../SvgIcon.vue';\n\nimport {\n\tCHART_COLORS,\n\tRESIDENT_VALUE_MAP,\n\tFELLOWSHIP_VALUE_MAPS\n} from '@/modules/constants.js';\nimport { handleError } from '@/modules/errors.js';\nimport {\n\tcamelCaseToWords,\n\tucfirst\n} from '@/modules/utils.js';\nimport {\n\trenderIdToEvalUrl,\n\trenderDateCell,\n\trenderDateRangeCell,\n\trenderTrainingLevel\n} from '@/modules/datatable-utils.js';\nimport {\n\tcreateRadarScaleCallback,\n\ttableHeader,\n\tfullWidthTable,\n\tborderedStripedTable,\n\tcreateResponseLegend\n} from '@/modules/report-utils.js';\n\nexport default {\n\tmixins: [HasAlerts],\n\tprops: {\n\t\tsubject: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\treport: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tshow: {\n\t\t\t\tmilestones: true,\n\t\t\t\tcompetencies: true,\n\t\t\t\tstandardDeviations: false,\n\t\t\t\tcharts: true\n\t\t\t},\n\t\t\tchartType: 'radar',\n\t\t\tchartOrientation: 'vertical'\n\t\t};\n\t},\n\tcomputed: {\n\t\tsubjectId(){\n\t\t\treturn this.subject.id;\n\t\t},\n\t\ttrainingLevelDisplay(){\n\t\t\tif(this.report.trainingLevel === 'all')\n\t\t\t\treturn;\n\n\t\t\treturn renderTrainingLevel(this.report.trainingLevel);\n\t\t},\n\t\tvalueMap(){\n\t\t\tif(this.report.trainingLevel === 'fellow')\n\t\t\t\treturn FELLOWSHIP_VALUE_MAPS.get(this.subject.secondary_training_level)\n\t\t\t\t\t|| FELLOWSHIP_VALUE_MAPS.get(null);\n\n\t\t\treturn RESIDENT_VALUE_MAP;\n\t\t},\n\t\tmilestoneCompetencyWidth(){\n\t\t\treturn {\n\t\t\t\t'col-md-6': this.show.milestones && this.show.competencies,\n\t\t\t\t'col-md-12': !this.show.milestones || !this.show.competencies\n\t\t\t};\n\t\t},\n\t\tevaluationsThead(){\n\t\t\treturn [[\n\t\t\t\t'#',\n\t\t\t\t'Evaluation date',\n\t\t\t\t'Evaluator',\n\t\t\t\t'Evaluation form'\n\t\t\t]];\n\t\t},\n\t\tevaluationsConfig(){\n\t\t\treturn {\n\t\t\t\tcolumns: [\n\t\t\t\t\t{ render: renderIdToEvalUrl },\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull\n\t\t\t\t]\n\t\t\t};\n\t\t},\n\t\tevaluationsData(){\n\t\t\ttry {\n\t\t\t\treturn this.report.subjectEvaluations[this.subjectId].map(request => [\n\t\t\t\t\tString(request.evaluation_id),\n\t\t\t\t\trenderDateRangeCell('evaluation_date_start', 'evaluation_date_end')(request),\n\t\t\t\t\t`${request.evaluator_last}, ${request.evaluator_first}`,\n\t\t\t\t\trequest.form_title\n\t\t\t\t]);\n\t\t\t} catch(err) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\t\tcompetenciesThead(){\n\t\t\tlet tr = [\n\t\t\t\t'Competency',\n\t\t\t\t'Average'\n\t\t\t];\n\t\t\tif(this.show.standardDeviations)\n\t\t\t\ttr.push('Standard Deviation');\n\t\t\ttr.push('Number of Evaluations');\n\n\t\t\treturn [tr];\n\t\t},\n\t\tcompetenciesData(){\n\t\t\tlet data = [];\n\t\t\tfor(let competencyId in this.report.subjectCompetency[this.subjectId]){\n\t\t\t\tlet tr = [String(this.report.competencies[competencyId])];\n\t\t\t\tif(this.report.subjectCompetency[this.subjectId][competencyId]){\n\t\t\t\t\ttr.push(String(Math.round10(this.report.subjectCompetency[this.subjectId][competencyId], -2)));\n\t\t\t\t\tif(this.show.standardDeviations)\n\t\t\t\t\t\ttr.push(String(Math.round10(this.report.subjectCompetencyDeviations[this.subjectId][competencyId], -2)));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttr.push('');\n\t\t\t\t\tif(this.show.standardDeviations)\n\t\t\t\t\t\ttr.push('');\n\t\t\t\t}\n\t\t\t\ttr.push(String(this.report.subjectCompetencyEvals[this.subjectId][competencyId] || 0));\n\t\t\t\tdata.push(tr);\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\tmilestonesThead(){\n\t\t\tlet tr = [\n\t\t\t\t'Milestone',\n\t\t\t\t'Average'\n\t\t\t];\n\n\t\t\tif(this.show.standardDeviations)\n\t\t\t\ttr.push('Standard Deviation');\n\t\t\ttr.push('Number of Evaluations');\n\n\t\t\treturn [tr];\n\t\t},\n\t\tmilestonesData(){\n\t\t\tlet data = [];\n\t\t\tfor(let milestoneId in this.report.subjectMilestone[this.subjectId]){\n\t\t\t\tlet tr = [String(this.report.milestones[milestoneId])];\n\t\t\t\tif(this.report.subjectMilestone[this.subjectId][milestoneId]){\n\t\t\t\t\ttr.push(String(Math.round10(this.report.subjectMilestone[this.subjectId][milestoneId], -2)));\n\t\t\t\t\tif(this.show.standardDeviations)\n\t\t\t\t\t\ttr.push(String(Math.round10(this.report.subjectMilestoneDeviations[this.subjectId][milestoneId], -2)));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttr.push('');\n\t\t\t\t\tif(this.show.standardDeviations)\n\t\t\t\t\t\ttr.push('');\n\t\t\t\t}\n\n\t\t\t\ttr.push(String(this.report.subjectMilestoneEvals[this.subjectId][milestoneId] || 0));\n\n\t\t\t\tdata.push(tr);\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\n\t\tcommentsConfig(){\n\t\t\treturn {\n\t\t\t\tcolumns: [\n\t\t\t\t\t{ render: renderIdToEvalUrl },\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull\n\t\t\t\t]\n\t\t\t};\n\t\t},\n\t\tcommentsThead(){\n\t\t\treturn [[\n\t\t\t\t'#',\n\t\t\t\t'Evaluation Date',\n\t\t\t\t'Evaluator',\n\t\t\t\t'Evaluation Form',\n\t\t\t\t'Comment'\n\t\t\t]];\n\t\t},\n\t\tcommentsData(){\n\t\t\ttry {\n\t\t\t\treturn this.report.subjectTextResponses[this.subjectId].map(response => [\n\t\t\t\t\tString(response.evaluation_id),\n\t\t\t\t\trenderDateRangeCell('evaluation_date_start', 'evaluation_date_end')(response),\n\t\t\t\t\t`${response.last_name}, ${response.first_name}`,\n\t\t\t\t\tresponse.form_title,\n\t\t\t\t\tresponse.response\n\t\t\t\t]);\n\t\t\t} catch(err) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tchartTypes(){\n\t\t\treturn [\n\t\t\t\t'radar',\n\t\t\t\t'line',\n\t\t\t\t'bar'\n\t\t\t];\n\t\t},\n\t\tchartWidth(){\n\t\t\treturn {\n\t\t\t\t'col-md-6': this.chartOrientation === 'horizontal',\n\t\t\t\t'col-md-12': this.chartOrientation === 'vertical'\n\t\t\t};\n\t\t},\n\t\tchartOptions(){\n\t\t\treturn {\n\t\t\t\tanimation: false,\n\t\t\t\tlegend: {\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\tfontColor: '#333'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttooltips: {\n\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\tlabel(tooltip, data){\n\t\t\t\t\t\t\tlet value = parseFloat(tooltip.yLabel).toFixed(2);\n\t\t\t\t\t\t\tlet name = data.datasets[tooltip.datasetIndex].label;\n\t\t\t\t\t\t\treturn `${name}: ${value}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscale: {\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\tuserCallback: createRadarScaleCallback(this.valueMap)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcompetencyChartData(){\n\t\t\tlet averageColor = Color(CHART_COLORS.AVERAGE);\n\t\t\tlet averageBackgroundColor = averageColor.alpha(0.2);\n\n\t\t\tlet subjectColor = Color(CHART_COLORS.SUBJECT);\n\t\t\tlet subjectBackgroundColor = subjectColor.alpha(0.2);\n\t\t\ttry {\n\t\t\t\treturn {\n\t\t\t\t\tlabels: Object.values(this.report.competencies),\n\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Average Competency',\n\t\t\t\t\t\t\tbackgroundColor: averageBackgroundColor.rgb().string(),\n\t\t\t\t\t\t\tborderColor: averageColor.rgb().string(),\n\t\t\t\t\t\t\tpointBackgroundColor: averageColor.rgb().string(),\n\t\t\t\t\t\t\tpointBorderColor: '#fff',\n\t\t\t\t\t\t\tpointHoverBackgroundColor: '#fff',\n\t\t\t\t\t\t\tpointHoverBorderColor: averageColor.rgb().string(),\n\t\t\t\t\t\t\tdata: Object.values(this.report.averageCompetency)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Subject Competency',\n\t\t\t\t\t\t\tbackgroundColor: subjectBackgroundColor.rgb().string(),\n\t\t\t\t\t\t\tborderColor: subjectColor.rgb().string(),\n\t\t\t\t\t\t\tpointBackgroundColor: subjectColor.rgb().string(),\n\t\t\t\t\t\t\tpointBorderColor: '#fff',\n\t\t\t\t\t\t\tpointHoverBackgroundColor: '#fff',\n\t\t\t\t\t\t\tpointHoverBorderColor: subjectColor.rgb().string(),\n\t\t\t\t\t\t\tdata: Object.values(this.report.subjectCompetency[this.subjectId])\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t} catch(err) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tmilestoneChartData(){\n\t\t\tlet averageColor = Color(CHART_COLORS.AVERAGE);\n\t\t\tlet averageBackgroundColor = averageColor.alpha(0.2);\n\n\t\t\tlet subjectColor = Color(CHART_COLORS.SUBJECT);\n\t\t\tlet subjectBackgroundColor = subjectColor.alpha(0.2);\n\t\t\ttry {\n\t\t\t\treturn {\n\t\t\t\t\tlabels: Object.values(this.report.milestones),\n\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Average Milestone',\n\t\t\t\t\t\t\tbackgroundColor: averageBackgroundColor.rgb().string(),\n\t\t\t\t\t\t\tborderColor: averageColor.rgb().string(),\n\t\t\t\t\t\t\tpointBackgroundColor: averageColor.rgb().string(),\n\t\t\t\t\t\t\tpointBorderColor: '#fff',\n\t\t\t\t\t\t\tpointHoverBackgroundColor: '#fff',\n\t\t\t\t\t\t\tpointHoverBorderColor: averageColor.rgb().string(),\n\t\t\t\t\t\t\tdata: Object.values(this.report.averageMilestone)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Subject Milestone',\n\t\t\t\t\t\t\tbackgroundColor: subjectBackgroundColor.rgb().string(),\n\t\t\t\t\t\t\tborderColor: subjectColor.rgb().string(),\n\t\t\t\t\t\t\tpointBackgroundColor: subjectColor.rgb().string(),\n\t\t\t\t\t\t\tpointBorderColor: '#fff',\n\t\t\t\t\t\t\tpointHoverBackgroundColor: '#fff',\n\t\t\t\t\t\t\tpointHoverBorderColor: subjectColor.rgb().string(),\n\t\t\t\t\t\t\tdata: Object.values(this.report.subjectMilestone[this.subjectId])\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t} catch(err) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tcamelCaseToWords,\n\t\tucfirst,\n\t\trenderDateCell,\n\t\tsaveCharts() {\n\t\t\tif (this.$refs.competencyChart && this.$refs.competencyChart.chart)\n\t\t\t\tdownload(this.$refs.competencyChart.chart.toBase64Image(),\n\t\t\t\t\t`Competencies chart - ${this.report.subjects[this.subjectId]} - ${new Date().toLocaleString()}.png`);\n\t\t\tif (this.$refs.milestoneChart && this.$refs.milestoneChart.chart)\n\t\t\t\tdownload(this.$refs.milestoneChart.chart.toBase64Image(),\n\t\t\t\t\t`Milestones chart - ${this.report.subjects[this.subjectId]} - ${new Date().toLocaleString()}.png`);\n\t\t},\n\t\texportPdf(){\n\t\t\tif(!this.report.subjectEvaluations[this.subjectId])\n\t\t\t\treturn;\n\n\t\t\tPromise.all([\n\t\t\t\timport('pdfmake/build/pdfmake.js'),\n\t\t\t\timport('../../vfs_fonts.json')\n\t\t\t]).then(([pdfmake, vfs]) => {\n\t\t\t\tpdfmake.vfs = vfs;\n\n\t\t\t\t// FIXME\n\t\t\t\tconst subjectName = this.report.subjects[this.subjectId];\n\t\t\t\tconst trainingLevel = renderTrainingLevel(this.report.trainingLevel);\n\t\t\t\tconst startDate = this.report.startDate.date\n\t\t\t\t\t? this.report.startDate.date.split(' ')[0]\n\t\t\t\t\t: this.report.startDate;\n\t\t\t\tconst endDate = this.report.endDate.date\n\t\t\t\t\t? this.report.endDate.date.split(' ')[0]\n\t\t\t\t\t: this.report.endDate;\n\n\t\t\t\tconst filename = `${subjectName} Individual Report (${trainingLevel}, ${startDate} to ${endDate}).pdf`;\n\n\t\t\t\tlet content = [\n\t\t\t\t\t{ text: 'Report parameters', style: 'heading' },\n\t\t\t\t\tborderedStripedTable({\n\t\t\t\t\t\ttable: fullWidthTable({\n\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t\t['Name', 'Training level', 'Start date', 'End date'].map(tableHeader),\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tsubjectName,\n\t\t\t\t\t\t\t\t\ttrainingLevel,\n\t\t\t\t\t\t\t\t\tstartDate,\n\t\t\t\t\t\t\t\t\tendDate\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t})\n\t\t\t\t\t}),\n\t\t\t\t\t{ text: 'Evaluations included in report', style: 'heading' },\n\t\t\t\t\tborderedStripedTable({\n\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\twidths: ['auto', 'auto', 'auto', '*'],\n\t\t\t\t\t\t\tbody: JSON.parse(JSON.stringify([\n\t\t\t\t\t\t\t\tthis.evaluationsThead[0].map(tableHeader),\n\t\t\t\t\t\t\t\t...this.evaluationsData\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t];\n\n\t\t\t\tif(this.show.competencies || this.show.milestones)\n\t\t\t\t\tcontent.push(\n\t\t\t\t\t\t{ text: 'Score mapping', style: 'heading' },\n\t\t\t\t\t\tcreateResponseLegend(this.valueMap)\n\t\t\t\t\t);\n\n\t\t\t\tif(this.show.competencies)\n\t\t\t\t\tcontent.push(\n\t\t\t\t\t\t{ text: 'Competencies', style: 'heading' },\n\t\t\t\t\t\tborderedStripedTable({\n\t\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\t\twidths: ['*', 'auto', 'auto'],\n\t\t\t\t\t\t\t\tbody: JSON.parse(JSON.stringify([\n\t\t\t\t\t\t\t\t\tthis.competenciesThead[0].map(tableHeader),\n\t\t\t\t\t\t\t\t\t...this.competenciesData\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\n\t\t\t\tif(this.show.milestones)\n\t\t\t\t\tcontent.push(\n\t\t\t\t\t\t{ text: 'Milestones', style: 'heading' },\n\t\t\t\t\t\tborderedStripedTable({\n\t\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\t\twidths: ['*', 'auto', 'auto'],\n\t\t\t\t\t\t\t\tbody: JSON.parse(JSON.stringify([\n\t\t\t\t\t\t\t\t\tthis.milestonesThead[0].map(tableHeader),\n\t\t\t\t\t\t\t\t\t...this.milestonesData\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\n\t\t\t\tlet charts = [];\n\t\t\t\tif(this.show.charts){\n\t\t\t\t\tif(this.chartOrientation === 'horizontal'){\n\t\t\t\t\t\tlet cols = [];\n\t\t\t\t\t\tif(this.show.competencies && this.$refs.competencyChart && this.$refs.competencyChart.chart)\n\t\t\t\t\t\t\tcols.push({\n\t\t\t\t\t\t\t\timage: this.$refs.competencyChart.chart.toBase64Image(),\n\t\t\t\t\t\t\t\twidth: 200\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcols.push({ text: '', width: '*' });\n\n\t\t\t\t\t\tif(this.show.milestones && this.$refs.milestoneChart && this.$refs.milestoneChart.chart)\n\t\t\t\t\t\t\tcols.push({\n\t\t\t\t\t\t\t\timage: this.$refs.milestoneChart.chart.toBase64Image(),\n\t\t\t\t\t\t\t\twidth: 200\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcols.push({ text: '', width: '*' });\n\n\t\t\t\t\t\tcharts = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpageBreak: 'before',\n\t\t\t\t\t\t\t\tcolumns: cols,\n\t\t\t\t\t\t\t\tcolumnGap: 10\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcharts = [];\n\t\t\t\t\t\tif(this.show.competencies && this.$refs.competencyChart && this.$refs.competencyChart.chart)\n\t\t\t\t\t\t\tcharts.push({\n\t\t\t\t\t\t\t\tpageBreak: 'before',\n\t\t\t\t\t\t\t\timage: this.$refs.competencyChart.chart.toBase64Image(),\n\t\t\t\t\t\t\t\twidth: 500\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif(this.show.milestones && this.$refs.milestoneChart && this.$refs.milestoneChart.chart)\n\t\t\t\t\t\t\tcharts.push({\n\t\t\t\t\t\t\t\timage: this.$refs.milestoneChart.chart.toBase64Image(),\n\t\t\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\t\t\tpageBreak: 'after'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tcontent.push(...charts);\n\t\t\t\t}\n\n\t\t\t\tcontent.push(\n\t\t\t\t\t{ text: 'Comments', style: 'heading' },\n\t\t\t\t\tborderedStripedTable({\n\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\twidths: ['auto', 'auto', 'auto', 'auto', '*'],\n\t\t\t\t\t\t\tbody: JSON.parse(JSON.stringify([\n\t\t\t\t\t\t\t\tthis.commentsThead[0].map(tableHeader),\n\t\t\t\t\t\t\t\t...this.commentsData\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tlet docDefinition = {\n\t\t\t\t\tpageSize: 'LETTER',\n\t\t\t\t\tcontent,\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\theading: {\n\t\t\t\t\t\t\tbold: true,\n\t\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t\t\tmargin: [0, 20, 0, 10]\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttableHeader: {\n\t\t\t\t\t\t\tbold: true,\n\t\t\t\t\t\t\tfontSize: 14\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tpdfmake.createPdf(docDefinition).download(filename);\n\t\t\t}).catch(err => {\n\t\t\t\thandleError(err, this, `There was a problem exporting the report for ${this.report.subjects[this.subjectId]}`);\n\t\t\t});\n\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tBootstrapAlert,\n\t\tBootstrapButtonInput,\n\t\tChartjsChart,\n\t\tDataTable,\n\t\tSvgIcon\n\t}\n};\n</script>\n\n<style scoped>\n\t.individual-report section {\n\t\tmargin: 2em 0 0;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/IndividualReport.vue?7a4e238b","<template>\n\t<span class=\"svg-icon\" v-html=\"svg\"></span>\n</template>\n\n<script>\nimport { logError } from '@/modules/errors.js';\n\nexport default {\n\tprops: {\n\t\tsrc: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tsvg: null\n\t\t};\n\t},\n\tcreated(){\n\t\tfetch(this.src).then(response => {\n\t\t\tif(response.ok)\n\t\t\t\treturn response.text();\n\n\t\t\tthrow new Error('Unable to load icon');\n\t\t}).then(svg => {\n\t\t\tthis.svg = svg;\n\t\t}).catch(logError);\n\t}\n};\n</script>\n\n<style>\n\t.svg-icon,\n\t.svg-icon > svg {\n\t\tdisplay: inline-block;\n\t\twidth: 1em;\n\t\theight: 1em;\n\t\tstroke-width: 0;\n\t\tstroke: currentColor;\n\t\tfill: currentColor;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/resources/assets/js/vue-components/SvgIcon.vue?3571e783","<template>\n\t<div class=\"form-horizontal\" ref=\"container\">\n\t\t<div class=\"form-group\">\n\t\t\t<div class=\"col-md-4\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tDate Range\n\t\t\t\t\t<select class=\"form-control\" v-model=\"dateRange\">\n\t\t\t\t\t\t<option v-for=\"(range, name) of dateRanges\" :value=\"name\">\n\t\t\t\t\t\t\t{{ camelCaseToWords(name) }}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-6 col-md-4\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tStart Date\n\t\t\t\t\t<div v-if=\"clearable\" class=\"input-group\">\n\t\t\t\t\t\t<vue-flatpickr class=\"form-control\"\n\t\t\t\t\t\t\t:options=\"flatpickrOptions\" v-model=\"startDate\" />\n\t\t\t\t\t\t<span class=\"input-group-btn\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t\t\t\t@click=\"startDate = null\">\n\t\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<vue-flatpickr v-else class=\"form-control\"\n\t\t\t\t\t\t:options=\"flatpickrOptions\" v-model=\"startDate\" />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-6 col-md-4\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tEnd Date\n\t\t\t\t\t<div v-if=\"clearable\" class=\"input-group\">\n\t\t\t\t\t\t<vue-flatpickr class=\"form-control\"\n\t\t\t\t\t\t\t:options=\"flatpickrOptions\" v-model=\"endDate\" />\n\t\t\t\t\t\t<span class=\"input-group-btn\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t\t\t\t@click=\"endDate = null\">\n\t\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<vue-flatpickr v-else class=\"form-control\"\n\t\t\t\t\t\t:options=\"flatpickrOptions\" v-model=\"endDate\" />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport VueFlatpickr from '@jacobmischka/vue-flatpickr';\nimport 'flatpickr/dist/flatpickr.css';\n\nimport moment from 'moment';\n\nimport { camelCaseToWords } from '@/modules/utils.js';\nimport * as dateUtils from '@/modules/date-utils.js';\n\nexport default {\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\thideDates: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tallTime: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tranges: {\n\t\t\ttype: Object,\n\t\t\tdefault() {\n\t\t\t\treturn {\n\t\t\t\t\t[dateUtils.DATE_RANGES.CUSTOM]: null,\n\t\t\t\t\t[dateUtils.DATE_RANGES.CURRENT_QUARTER]: dateUtils.currentQuarter(),\n\t\t\t\t\t[dateUtils.DATE_RANGES.LAST_QUARTER]: dateUtils.lastQuarter(),\n\t\t\t\t\t[dateUtils.DATE_RANGES.CURRENT_SEMESTER]: dateUtils.currentSemester(),\n\t\t\t\t\t[dateUtils.DATE_RANGES.LAST_SEMESTER]: dateUtils.lastSemester(),\n\t\t\t\t\t[dateUtils.DATE_RANGES.CURRENT_YEAR]: dateUtils.currentYear(),\n\t\t\t\t\t[dateUtils.DATE_RANGES.LAST_YEAR]: dateUtils.lastYear()\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tclearable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tstartDate: this.value && this.value.startDate && moment(this.value.startDate).isValid()\n\t\t\t\t? this.value.startDate\n\t\t\t\t: null,\n\t\t\tendDate: this.value && this.value.endDate && moment(this.value.endDate).isValid()\n\t\t\t\t? this.value.endDate\n\t\t\t\t: null,\n\t\t\tdateRange: dateUtils.DATE_RANGES.CUSTOM\n\t\t};\n\t},\n\tcreated(){\n\t\tthis.matchDateRangeWithValue();\n\t},\n\tcomputed: {\n\t\tdates(){\n\t\t\tconst startDate = this.startDate && moment(this.startDate).isValid()\n\t\t\t\t? this.startDate\n\t\t\t\t: null;\n\n\t\t\tconst endDate = this.endDate && moment(this.endDate).isValid()\n\t\t\t\t? this.endDate\n\t\t\t\t: null;\n\n\t\t\treturn {\n\t\t\t\tstartDate,\n\t\t\t\tendDate\n\t\t\t};\n\t\t},\n\t\tdateRanges(){\n\t\t\tlet ranges = Object.assign({}, this.ranges);\n\t\t\tif(this.allTime && !ranges[dateUtils.DATE_RANGES.ALL_TIME])\n\t\t\t\tranges[dateUtils.DATE_RANGES.ALL_TIME] = dateUtils.allTime();\n\t\t\telse\n\t\t\t\tdelete ranges[dateUtils.DATE_RANGES.ALL_TIME];\n\n\t\t\treturn ranges;\n\t\t},\n\t\tflatpickrOptions(){\n\t\t\treturn {\n\t\t\t\taltInput: true,\n\t\t\t\taltInputClass: 'form-control appear-not-readonly',\n\t\t\t\taltFormat: 'M j, Y'\n\t\t\t};\n\t\t}\n\t},\n\twatch: {\n\t\tdates(dates){\n\t\t\tthis.$emit('input', dates);\n\t\t},\n\t\tvalue(value){\n\t\t\tthis.matchDateRangeWithValue();\n\t\t\tthis.startDate = value.startDate;\n\t\t\tthis.endDate = value.endDate;\n\t\t},\n\t\tdateRange(dateRange){\n\t\t\tif(dateRange === dateUtils.DATE_RANGES.ALL_TIME)\n\t\t\t\tthis.setDate(dateUtils.allTime());\n\n\t\t\tif(dateRange !== dateUtils.DATE_RANGES.CUSTOM && this.dateRanges[dateRange]\n\t\t\t\t\t&& !dateUtils.datesEqual(this.value, this.dateRanges[dateRange]))\n\t\t\t\tthis.setDate(this.dateRanges[dateRange]);\n\t\t}\n\t},\n\tmethods: {\n\t\tmatchDateRangeWithValue(value = this.value){\n\t\t\tif(this.allTime && !value.startDate && !value.endDate){\n\t\t\t\tthis.dateRange = dateUtils.DATE_RANGES.ALL_TIME;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(this.dateRange && this.dateRange !== dateUtils.DATE_RANGES.CUSTOM\n\t\t\t\t\t&& this.dateRanges[this.dateRange]\n\t\t\t\t\t&& dateUtils.datesEqual(value, this.dateRanges[this.dateRange]))\n\t\t\t\treturn;\n\n\t\t\tfor(let range of Object.values(dateUtils.DATE_RANGES)){\n\t\t\t\tif(this.dateRanges[range] && dateUtils.datesEqual(value, this.dateRanges[range])){\n\t\t\t\t\tthis.dateRange = range;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.dateRange = dateUtils.DATE_RANGES.CUSTOM;\n\t\t},\n\t\tsetDate(dates){\n\t\t\tdates = dateUtils.isoDateStringObject(dates);\n\t\t\tthis.startDate = dates.startDate;\n\t\t\tthis.endDate = dates.endDate;\n\t\t},\n\t\tcamelCaseToWords\n\t},\n\tcomponents: {\n\t\tVueFlatpickr\n\t}\n};\n</script>\n\n<style scoped>\n\t.form-horizontal {\n\t\toverflow-x: hidden;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/resources/assets/js/vue-components/StartEndDate.vue?7553ed79","<template>\n\t<div class=\"container body-block\">\n\t\t<h3>{{ title }}</h3>\n\t\t<div class=\"controls\">\n\t\t\t<fieldset class=\"show-container\">\n\t\t\t\t<legend>Show</legend>\n\t\t\t\t<div>\n\t\t\t\t\t<label v-for=\"field of availableFields\">\n\t\t\t\t\t\t<input type=\"checkbox\" :value=\"show[field]\"\n\t\t\t\t\t\t\t@change=\"show = Object.assign({}, show, {[field]: !show[field]})\"/>\n\t\t\t\t\t\t{{ camelCaseToWords(field) }}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\tTable height\n\t\t\t\t\t\t<select class=\"form-control\" v-model=\"tableHeight\">\n\t\t\t\t\t\t\t<option :value=\"false\">Full size</option>\n\t\t\t\t\t\t\t<option value=\"500px\">Fixed</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\tChart height\n\t\t\t\t\t\t<select class=\"form-control\" v-model=\"chartHeight\">\n\t\t\t\t\t\t\t<option :value=\"false\">Full size</option>\n\t\t\t\t\t\t\t<option value=\"625px\">Fixed</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<slot></slot>\n\n\t\t<alert-list v-model=\"alerts\" />\n\n\t\t<button type=\"button\" class=\"export-button btn btn-primary center-block\"\n\t\t\t\t@click=\"exportPdf\">\n\t\t\tExport PDF\n\t\t\t<svg-icon src=\"/img/icons/pdf.svg\" />\n\t\t</button>\n\n\t\t<div class=\"stats-report-container\">\n\t\t\t<div v-if=\"show.ratios\">\n\t\t\t\t<h3>Ratios</h3>\n\t\t\t\t<data-table bordered exportable :thead=\"ratiosThead\"\n\t\t\t\t\t:config=\"listTableConfig\" :data=\"ratiosData\" />\n\t\t\t</div>\n\t\t\t<div v-if=\"show.ratios && show.graphs\">\n\t\t\t\t<h3>Ratios</h3>\n\t\t\t\t<div class=\"list-chart-container-container\"\n\t\t\t\t\t\t:style=\"listChartContainerContainerStyle\">\n\t\t\t\t\t<div class=\"list-chart-container\" :style=\"listChartContainerStyle\">\n\t\t\t\t\t\t<chartjs-chart type=\"horizontalBar\"\n\t\t\t\t\t\t\t:data=\"ratiosGraphData\" :options=\"listChartConfig\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div v-if=\"show.noRequests\">\n\t\t\t\t<h3>No requests</h3>\n\t\t\t\t<data-table bordered exportable :thead=\"noRequestsThead\"\n\t\t\t\t\t:config=\"listTableConfig\" :data=\"noRequestsData\" />\n\t\t\t</div>\n\t\t\t<div v-if=\"show.noneCompleted\">\n\t\t\t\t<h3>None completed</h3>\n\t\t\t\t<data-table bordered exportable :thead=\"noneCompletedThead\"\n\t\t\t\t\t:config=\"listTableConfig\" :data=\"noneCompletedData\" />\n\t\t\t</div>\n\t\t\t<div v-if=\"show.averageCompletionTimes\">\n\t\t\t\t<h3>Average completion times</h3>\n\t\t\t\t<data-table bordered exportable\n\t\t\t\t\t:thead=\"averageCompletionTimesThead\"\n\t\t\t\t\t:config=\"averageCompletionTimesConfig\"\n\t\t\t\t\t:data=\"averageCompletionTimesData\" />\n\t\t\t</div>\n\t\t\t<div v-if=\"show.lastCompleted\">\n\t\t\t\t<h3>Last completed evaluations</h3>\n\t\t\t\t<data-table bordered exportable :thead=\"lastCompletedThead\"\n\t\t\t\t\t:config=\"lastCompletedConfig\" :data=\"lastCompletedData\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport Color from 'color';\n\nimport HasAlerts from '@/vue-mixins/HasAlerts.js';\n\nimport ChartjsChart from '../ChartjsChart.vue';\nimport DataTable from '../DataTable.vue';\nimport SvgIcon from '../SvgIcon.vue';\n\nimport { CHART_COLORS } from '@/modules/constants.js';\nimport { handleError } from '@/modules/errors.js';\nimport { camelCaseToWords, sortPropIgnoreCase } from '@/modules/utils.js';\nimport {\n\tcreateDateCell,\n\trenderDateCell,\n\trenderIdToEvalUrl,\n\trenderTrainingLevel\n} from '@/modules/datatable-utils.js';\nimport { tableHeader } from '@/modules/report-utils.js';\n\nexport default {\n\tmixins: [HasAlerts],\n\tprops: {\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\tdefault: 'Statistics'\n\t\t},\n\t\treport: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tshow: {\n\t\t\t\tratios: false,\n\t\t\t\tgraphs: false,\n\t\t\t\tnoRequests: false,\n\t\t\t\tnoneCompleted: false,\n\t\t\t\taverageCompletionTimes: false,\n\t\t\t\tlastCompleted: false\n\t\t\t},\n\t\t\ttableHeight: '500px',\n\t\t\tchartHeight: '625px'\n\t\t};\n\t},\n\tcomputed: {\n\t\tavailableFields(){\n\t\t\tlet fields = [\n\t\t\t\t'ratios',\n\t\t\t\t'graphs',\n\t\t\t\t'noRequests',\n\t\t\t\t'noneCompleted',\n\t\t\t\t'lastCompleted',\n\t\t\t];\n\n\t\t\tif(this.report.statsType === 'evaluator')\n\t\t\t\tfields.push('averageCompletionTimes');\n\n\t\t\treturn fields;\n\t\t},\n\t\tlistTableConfig(){\n\t\t\treturn {\n\t\t\t\torder: [[0, 'asc']],\n\t\t\t\tstateSave: true,\n\t\t\t\tscrollX: true,\n\t\t\t\tscrollY: this.tableHeight,\n\t\t\t\tscrollCollapse: true,\n\t\t\t\tpaging: false\n\t\t\t};\n\t\t},\n\t\tlistChartContainerContainerStyle(){\n\t\t\treturn {\n\t\t\t\theight: this.chartHeight\n\t\t\t};\n\t\t},\n\t\tlistChartContainerStyle(){\n\t\t\treturn {\n\t\t\t\twidth: '100%',\n\t\t\t\theight: `${20 * this.report.userStats.length}px`\n\t\t\t};\n\t\t},\n\t\tlistChartConfig(){\n\t\t\treturn {\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tlegend: {\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\tfontColor: '#333'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttooltips: {\n\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\tlabel(tooltip){\n\t\t\t\t\t\t\tlet value = parseFloat(tooltip.xLabel).toFixed();\n\t\t\t\t\t\t\treturn `${value}%`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tratiosThead(){\n\t\t\treturn [[\n\t\t\t\t'User',\n\t\t\t\t'Requested',\n\t\t\t\t'Total Requests',\n\t\t\t\t'Total Completed',\n\t\t\t\t'Total Ratio'\n\t\t\t]];\n\t\t},\n\t\tratiosData(){\n\t\t\tif(!this.report.userStats || this.report.userStats.length === 0)\n\t\t\t\treturn [];\n\n\t\t\treturn this.report.userStats.map(stat => [\n\t\t\t\tstat.name,\n\t\t\t\tstat.requested,\n\t\t\t\tstat.totalRequests,\n\t\t\t\tstat.completed,\n\t\t\t\tstat.ratio\n\t\t\t\t\t? `${stat.ratio}%`\n\t\t\t\t\t: ''\n\t\t\t]);\n\t\t},\n\t\tratiosGraphData(){\n\t\t\tlet color = Color(CHART_COLORS.OTHER[0]);\n\t\t\tlet backgroundColor = color.alpha(0.2);\n\t\t\treturn {\n\t\t\t\tlabels: this.report.userStats.map(userStat => userStat.name),\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Completed / Requested %',\n\t\t\t\t\t\tbackgroundColor: backgroundColor.rgb().string(),\n\t\t\t\t\t\tborderColor: color.rgb().string(),\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\tpointBackgroundColor: color.rgb().string(),\n\t\t\t\t\t\tpointBorderColor: '#fff',\n\t\t\t\t\t\tpointHoverBackgroundColor: '#fff',\n\t\t\t\t\t\tpointHoverBorderColor: color.rgb().string(),\n\t\t\t\t\t\tdata: this.report.userStats.map(userStat => userStat.ratio)\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t},\n\t\tnoRequestsThead(){\n\t\t\treturn [\n\t\t\t\t['No requests']\n\t\t\t];\n\t\t},\n\t\tnoRequestsData(){\n\t\t\tif(!this.report.noneRequested || this.report.noneRequested.length === 0)\n\t\t\t\treturn [];\n\n\t\t\treturn this.report.noneRequested.map(name => [name]);\n\t\t},\n\t\tnoneCompletedThead(){\n\t\t\treturn [\n\t\t\t\t['No completed evals']\n\t\t\t];\n\t\t},\n\t\tnoneCompletedData(){\n\t\t\tif(!this.report.noneCompleted || this.report.noneCompleted.length === 0)\n\t\t\t\treturn [];\n\n\t\t\treturn this.report.noneCompleted.map(name => [name]);\n\t\t},\n\t\taverageCompletionTimesThead(){\n\t\t\treturn [\n\t\t\t\t['User', 'Average Time']\n\t\t\t];\n\t\t},\n\t\taverageCompletionTimesConfig(){\n\t\t\treturn {\n\t\t\t\torder: [[0, 'asc']],\n\t\t\t\tstateSave: true,\n\t\t\t\tscrollY: this.tableHeight,\n\t\t\t\tscrollCollapse: true,\n\t\t\t\tpaging: false,\n\t\t\t\tcolumns: [\n\t\t\t\t\t{ data: 'name' },\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: 'time',\n\t\t\t\t\t\trender(time, type, obj){\n\t\t\t\t\t\t\tif(['sort', 'type'].includes(type))\n\t\t\t\t\t\t\t\treturn obj.timespan;\n\n\t\t\t\t\t\t\tlet [days, hours, minutes] = time.split(', ');\n\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t`<b>${days},</b>`,\n\t\t\t\t\t\t\t\t`<span>${hours},</span>`,\n\t\t\t\t\t\t\t\t`<i>${minutes}</i>`\n\t\t\t\t\t\t\t].join(' ');\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcreatedCell(td){\n\t\t\t\t\t\t\ttd.classList.add('time-period-cell');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tfixedHeader: true\n\t\t\t};\n\t\t},\n\t\taverageCompletionTimesData(){\n\t\t\treturn this.report.averageCompletionTimes || [];\n\t\t},\n\t\tlastCompletedThead(){\n\t\t\treturn [\n\t\t\t\t['User', 'Completed', 'Evaluation']\n\t\t\t];\n\t\t},\n\t\tlastCompletedConfig(){\n\t\t\treturn {\n\t\t\t\torder: [[0, 'asc']],\n\t\t\t\tstateSave: true,\n\t\t\t\tscrollY: this.tableHeight,\n\t\t\t\tscrollCollapse: true,\n\t\t\t\tpaging: false,\n\t\t\t\tcolumns: [\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\trender: renderDateCell,\n\t\t\t\t\t\tcreatedCell: createDateCell\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trender: renderIdToEvalUrl\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tfixedHeader: true\n\t\t\t};\n\t\t},\n\t\tlastCompletedData(){\n\t\t\tif(!this.report.lastCompleted || this.report.lastCompleted.length === 0)\n\t\t\t\treturn [];\n\n\t\t\treturn this.report.lastCompleted.map(obj => [\n\t\t\t\tobj.name,\n\t\t\t\tobj.evaluation.complete_date,\n\t\t\t\tobj.evaluation.id\n\t\t\t]);\n\t\t}\n\t},\n\twatch: {\n\t\tshow(){\n\t\t\tthis.$nextTick(() => {\n\t\t\t\t$(window).resize();\n\t\t\t});\n\t\t}\n\t},\n\tmethods: {\n\t\tcamelCaseToWords,\n\t\texportPdf(){\n\t\t\tPromise.all([\n\t\t\t\timport('pdfmake/build/pdfmake.js'),\n\t\t\t\timport('../../vfs_fonts.json')\n\t\t\t]).then(([pdfmake, vfs]) => {\n\t\t\t\tpdfmake.vfs = vfs;\n\n\t\t\t\tconst filename = `${this.title} - ${new Date().toLocaleString()}`;\n\n\t\t\t\tlet reportParamHeader = ['Start date', 'End date'];\n\t\t\t\tlet reportParamBody = [\n\t\t\t\t\tthis.report.startDate.date\n\t\t\t\t\t\t? this.report.startDate.date.split(' ')[0]\n\t\t\t\t\t\t: this.report.startDate,\n\t\t\t\t\tthis.report.endDate.date\n\t\t\t\t\t\t? this.report.endDate.date.split(' ')[0]\n\t\t\t\t\t\t: this.report.endDate,\n\t\t\t\t];\n\n\t\t\t\tif(this.report.trainingLevel){\n\t\t\t\t\treportParamHeader.push('Training level');\n\t\t\t\t\treportParamBody.push(renderTrainingLevel(this.report.trainingLevel));\n\t\t\t\t}\n\n\t\t\t\tlet content = [\n\t\t\t\t\t{ text: this.title, style: 'title' },\n\t\t\t\t\t{\n\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t\treportParamHeader.map(tableHeader),\n\t\t\t\t\t\t\t\treportParamBody\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstyle: 'table'\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t\tif(this.ratiosData.length > 0)\n\t\t\t\t\tcontent.push({\n\t\t\t\t\t\ttext: 'Ratios',\n\t\t\t\t\t\tstyle: 'heading'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\tbody: JSON.parse(JSON.stringify([\n\t\t\t\t\t\t\t\tthis.ratiosThead[0].map(tableHeader),\n\t\t\t\t\t\t\t\t...this.ratiosData.sort(sortPropIgnoreCase(0))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstyle: 'table'\n\t\t\t\t\t});\n\n\t\t\t\tif(this.noRequestsData.length > 0)\n\t\t\t\t\tcontent.push({\n\t\t\t\t\t\ttext: 'No requests',\n\t\t\t\t\t\tstyle: 'heading',\n\t\t\t\t\t\tpageBreak: 'before'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\tbody: JSON.parse(JSON.stringify([\n\t\t\t\t\t\t\t\tthis.noRequestsThead[0].map(tableHeader),\n\t\t\t\t\t\t\t\t...this.noRequestsData.sort(sortPropIgnoreCase(0))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstyle: 'table'\n\t\t\t\t\t});\n\n\t\t\t\tif(this.noneCompletedData.length > 0)\n\t\t\t\t\tcontent.push({\n\t\t\t\t\t\ttext: 'None completed',\n\t\t\t\t\t\tstyle: 'heading',\n\t\t\t\t\t\tpageBreak: 'before'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\tbody: JSON.parse(JSON.stringify([\n\t\t\t\t\t\t\t\tthis.noneCompletedThead[0].map(tableHeader),\n\t\t\t\t\t\t\t\t...this.noneCompletedData.sort(sortPropIgnoreCase(0))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstyle: 'table'\n\t\t\t\t\t});\n\n\t\t\t\tif(this.lastCompletedData.length > 0)\n\t\t\t\t\tcontent.push({\n\t\t\t\t\t\ttext: 'Last completed evaluation',\n\t\t\t\t\t\tstyle: 'heading',\n\t\t\t\t\t\tpageBreak: 'before'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\tbody: JSON.parse(JSON.stringify([\n\t\t\t\t\t\t\t\tthis.lastCompletedThead[0].map(tableHeader),\n\t\t\t\t\t\t\t\t...this.lastCompletedData.sort(sortPropIgnoreCase(0))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstyle: 'table'\n\t\t\t\t\t});\n\n\t\t\t\tif(this.report.statsType === 'evaluator'\n\t\t\t\t\t\t&& this.averageCompletionTimesData.length > 0)\n\t\t\t\t\tcontent.push({\n\t\t\t\t\t\ttext: 'Average completion time',\n\t\t\t\t\t\tstyle: 'heading',\n\t\t\t\t\t\tpageBreak: 'before'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\tbody: JSON.parse(JSON.stringify([\n\t\t\t\t\t\t\t\tthis.averageCompletionTimesThead[0].map(tableHeader),\n\t\t\t\t\t\t\t\t...this.averageCompletionTimesData.map(obj => [\n\t\t\t\t\t\t\t\t\tobj.name,\n\t\t\t\t\t\t\t\t\tobj.time\n\t\t\t\t\t\t\t\t]).sort(sortPropIgnoreCase(0))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstyle: 'table'\n\t\t\t\t\t});\n\n\t\t\t\t// TODO: Chart, improved styling\n\n\t\t\t\tconst docDefinition = {\n\t\t\t\t\tpageSize: 'LETTER',\n\t\t\t\t\tcontent,\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tbold: true,\n\t\t\t\t\t\t\tfontSize: 24,\n\t\t\t\t\t\t\tmargin: [0, 20, 0, 10]\n\t\t\t\t\t\t},\n\t\t\t\t\t\theading: {\n\t\t\t\t\t\t\tbold: true,\n\t\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t\t\tmargin: [0, 10, 0, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttableHeader: {\n\t\t\t\t\t\t\tbold: true,\n\t\t\t\t\t\t\tfontSize: 14\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\tmargin: [0, 20]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tpdfmake.createPdf(docDefinition).download(filename);\n\t\t\t}).catch(err => {\n\t\t\t\thandleError(err, this, `There was a problem exporting the ${this.title} PDF`);\n\t\t\t});\n\t\t}\n\t},\n\tcomponents: {\n\t\tChartjsChart,\n\t\tDataTable,\n\t\tSvgIcon\n\t}\n};\n</script>\n\n<style scoped>\n\t.show-container div {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\n\t.show-container div label {\n\t\tmargin: 0.5em 1em;\n\t}\n\n\t.controls {\n\t\tmargin-bottom: 2em;\n\t}\n\n\t.stats-report-container {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: space-between;\n\t\talign-items: stretch;\n\t}\n\n\t.stats-report-container > div {\n\t\twidth: calc(50% - 20px);\n\t\tmargin: 10px;\n\t\tflex-grow: 1;\n\t\tflex-shrink: 0;\n\t}\n\n\t.list-chart-container-container {\n\t\toverflow: auto;\n\t}\n\n\t.export-button {\n\t\tmargin-top: 2em;\n\t}\n</style>\n\n<style>\n\t.time-period-cell > * {\n\t\tdisplay: inline-block;\n\t}\n\n\t.time-period-cell b {\n\t\twidth: 5em;\n\t\tmargin-right: 0;\n\t}\n\n\t.time-period-cell span {\n\t\tmargin-right: 1em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/StatsReport.vue?3f5fe204","<template>\n\t<div>\n\t\t<div class=\"container body-block\">\n\t\t\t<h1>Form report</h1>\n\t\t\t<start-end-date v-model=\"dates\" />\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tForm\n\t\t\t\t\t<select-two class=\"form-control\" :options=\"groupedForms\"\n\t\t\t\t\tv-model=\"formId\"></select-two>\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<alert-list v-model=\"alerts\" />\n\n\t\t\t<div class=\"btn-lg-submit-container\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-primary\"\n\t\t\t\t\t\t@click=\"runReport\">\n\t\t\t\t\tRun report\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div v-if=\"report\" class=\"container body-block\">\n\t\t\t<div class=\"report-evaluations\">\n\t\t\t\t<bootstrap-alert v-if=\"report.evals.length > 0\" type=\"info\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{{ report.evals.length }} total form evaluations\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-4 text-right\">\n\t\t\t\t\t\t\t<show-hide-button class=\"btn btn-info\"\n\t\t\t\t\t\t\t\t\tv-model=\"show.allEvals\">\n\t\t\t\t\t\t\t\tall\n\t\t\t\t\t\t\t</show-hide-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<data-table v-if=\"show.allEvals\"\n\t\t\t\t\t\t:thead=\"evalsThead\" :config=\"allEvalsConfig\" />\n\n\t\t\t\t</bootstrap-alert>\n\t\t\t\t<bootstrap-alert v-else type=\"warning\"\n\t\t\t\t\t:text=\"`No evaluations found for ${report.formContents.title} in report parameters.`\" />\n\n\t\t\t\t<section>\n\t\t\t\t\t<div class=\"form-horizontal\">\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\t\t\tUser\n\t\t\t\t\t\t\t\t\t<select-two class=\"form-control\" :options=\"groupedUsers\"\n\t\t\t\t\t\t\t\t\t\t\tv-model=\"subjectId\">\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">All</option>\n\t\t\t\t\t\t\t\t\t</select-two>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-sm-2\">\n\t\t\t\t\t\t\t\t<button type=\"button\" v-if=\"subjectId\"\n\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-default labelless-button\"\n\t\t\t\t\t\t\t\t\t\t@click=\"subjectId = null\">\n\t\t\t\t\t\t\t\t\tClear user\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<section v-if=\"subjectId\">\n\t\t\t\t\t\t<bootstrap-alert type=\"info\"\n\t\t\t\t\t\t\t\tv-if=\"report.subjectEvals[subjectId] && report.subjectEvals[subjectId].length > 0\">\n\n\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\t\t{{ report.subjectEvals[subjectId].length }}\n\t\t\t\t\t\t\t\t\t\t{{ subject.full_name }} evaluations\n\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-md-4 text-right\">\n\t\t\t\t\t\t\t\t\t<show-hide-button class=\"btn btn-info\"\n\t\t\t\t\t\t\t\t\t\t\tv-model=\"show.subjectEvals\">\n\t\t\t\t\t\t\t\t\t\tall\n\t\t\t\t\t\t\t\t\t</show-hide-button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<data-table v-if=\"subjectEvals && show.subjectEvals\"\n\t\t\t\t\t\t\t\t:thead=\"evalsThead\" :data=\"subjectEvals\"\n\t\t\t\t\t\t\t\t:config=\"subjectEvalsConfig\" />\n\n\t\t\t\t\t\t</bootstrap-alert>\n\t\t\t\t\t\t<bootstrap-alert v-else type=\"warning\"\n\t\t\t\t\t\t\t:text=\"`No evaluations found for ${subject.full_name} in report parameters.`\" />\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\t\t\t</div>\n\n\t\t\t<div class=\"text-center\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t@click=\"runAllCsvReports\">\n\t\t\t\t\tExport all to CSV\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t<div v-if=\"this.reportContents && this.subjectId && this.reportContents.items.length > 0\"\n\t\t\t\t\tclass=\"panel panel-default\">\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<legend>\n\t\t\t\t\t\t\tEvaluation list style\n\t\t\t\t\t\t</legend>\n\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"details\"\n\t\t\t\t\t\t\t\tv-model=\"pdfOptions.evaluationListStyle\" />\n\t\t\t\t\t\t\tDetailed\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"summary\"\n\t\t\t\t\t\t\t\tv-model=\"pdfOptions.evaluationListStyle\" />\n\t\t\t\t\t\t\tSummary\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t\t\t@click=\"exportPdf\">\n\t\t\t\t\t\t\tExport PDF\n\t\t\t\t\t\t\t<svg-icon src=\"/img/icons/pdf.svg\" />\n\t\t\t\t\t\t</button>\n\n\n\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t\t\t@click=\"runCsvReport\">\n\t\t\t\t\t\t\tExport CSV\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<h2 class=\"form-title\" v-if=\"reportContents.title\">\n\t\t\t\t{{ reportContents.title }}\n\t\t\t</h2>\n\t\t\t<form-report-question v-for=\"(question, index) of reportQuestions\"\n\t\t\t\t:key=\"index\"\n\t\t\t\tv-bind=\"question\"\n\t\t\t\t:hide=\"hideQuestions[index]\"\n\t\t\t\t:score-question=\"scoreQuestions[index]\"\n\t\t\t\t:custom-option-values=\"customOptionValues[index]\"\n\t\t\t\t:disregard-option=\"disregardOption[index]\"\n\t\t\t\t@hide=\"hideQuestion(index, arguments[0])\"\n\t\t\t\t@score-question=\"scoreQuestion(index, arguments[0])\"\n\t\t\t\t@custom-option=\"handleCustomOption(index, arguments[0])\"\n\t\t\t\t@disregard-option=\"handleDisregardOption(index, arguments[0])\" />\n\t\t\t<hr />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport moment from 'moment';\nimport round from 'lodash/round';\n\nimport StartEndDate from '../StartEndDate.vue';\nimport SelectTwo from '../SelectTwo.vue';\nimport FormReportQuestion from './FormReportQuestion.vue';\nimport DataTable from '../DataTable.vue';\nimport BootstrapAlert from '../BootstrapAlert.vue';\nimport AlertList from '../AlertList.vue';\nimport ShowHideButton from '../ShowHideButton.vue';\nimport SvgIcon from '../SvgIcon.vue';\n\nimport {\n\tcanScoreQuestion,\n\tvaluesForAllOptions,\n\tgetResponseValue,\n\tgetResponseValues,\n\tgenerateScoresReportCsv\n} from '@/modules/reports/form-report.js';\n\nimport { handleError } from '@/modules/errors.js';\nimport {\n\taverage,\n\tstandardDeviation\n} from '@/modules/math-utils.js';\nimport {\n\tgetFetchHeaders,\n\tjsonOrThrow,\n\tfetchFormGroups\n} from '@/modules/utils.js';\nimport {\n\tisoDateStringObject,\n\tcurrentQuarter,\n\trenderDateRange\n} from '@/modules/date-utils.js';\nimport {\n\tdownloadCsv,\n\ttableHeader,\n\tpdfmakeStyle,\n\tfullWidthTable,\n\tborderedStripedTable,\n\tCUSTOM_OPTION_VALUES,\n\tDISREGARD_OPTION\n} from '@/modules/report-utils.js';\nimport {\n\trenderDateCell,\n\tcreateDateCell,\n\trenderDateTimeCell,\n\tcreateDateTimeCell,\n\trenderDateRangeCell,\n\tcreateDateRangeCell,\n\trenderEvaluationStatus\n} from '@/modules/datatable-utils.js';\n\nexport default {\n\tprops: {\n\t\tusers: {\n\t\t\ttype: Array\n\t\t},\n\t\tgroupedUsers: {\n\t\t\ttype: Array\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tdates: isoDateStringObject(currentQuarter()),\n\t\t\tformId: null,\n\t\t\tsubjectId: null,\n\t\t\treport: null,\n\n\t\t\tgroupedForms: [],\n\t\t\tsubjectEvals: [],\n\n\t\t\thideQuestions: [],\n\t\t\tscoreQuestions: [],\n\t\t\tcustomOptionValues: [],\n\t\t\tdisregardOption: [],\n\n\t\t\tshow: {\n\t\t\t\tallEvals: false,\n\t\t\t\tsubjectEvals: false\n\t\t\t},\n\n\t\t\tpdfOptions: {\n\t\t\t\tquestionPageBreak: null,\n\t\t\t\tevaluationListStyle: 'details'\n\t\t\t},\n\n\t\t\talerts: []\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tsubject() {\n\t\t\tif(this.subjectId)\n\t\t\t\treturn this.users.find(user => user.id === Number(this.subjectId));\n\t\t},\n\t\treportContents() {\n\t\t\tlet reportContents = this.report.formContents;\n\n\t\t\treportContents.items.map(item => {\n\t\t\t\titem.weight = Number(item.weight);\n\t\t\t\tif(this.subjectId && this.report.subjectEvals[this.subjectId]){\n\t\t\t\t\titem.subjectResponses = this.report.subjectResponses[this.subjectId]\n\t\t\t\t\t\t? this.report.subjectResponses[this.subjectId][item.id]\n\t\t\t\t\t\t: null;\n\t\t\t\t\titem.subjectResponseValues = this.report.subjectResponseValues[this.subjectId]\n\t\t\t\t\t\t? this.report.subjectResponseValues[this.subjectId][item.id]\n\t\t\t\t\t\t: null;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\titem.subjectResponses = null;\n\t\t\t\t\titem.subjectResponseValues = null;\n\t\t\t\t}\n\n\t\t\t\titem.averageResponses = this.report.averageResponses[item.id];\n\n\t\t\t\tif(item.type === 'question' && ['checkbox', 'radio', 'radiononnumeric']\n\t\t\t\t\t\t.includes(item.questionType)){\n\t\t\t\t\titem.options.map(option => {\n\t\t\t\t\t\tif(this.subjectId && this.report.subjectEvals[this.subjectId]){\n\t\t\t\t\t\t\toption.responses = this.report.subjectResponses[this.subjectId]\n\t\t\t\t\t\t\t\t? this.report.subjectResponses[this.subjectId][item.id][option.value]\n\t\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t\t\toption.percentage = this.report.subjectPercentages[this.subjectId]\n\t\t\t\t\t\t\t\t? this.report.subjectPercentages[this.subjectId][item.id][option.value]\n\t\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\toption.responses = null;\n\t\t\t\t\t\t\toption.percentage = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toption.averagePercentage = this.report.averagePercentages[item.id]\n\t\t\t\t\t\t\t? this.report.averagePercentages[item.id][option.value]\n\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn reportContents;\n\t\t},\n\t\treportQuestions() {\n\t\t\tif (!this.reportContents || !this.reportContents.items)\n\t\t\t\treturn [];\n\n\t\t\tlet questions = this.reportContents.items.filter(item => item.type === 'question');\n\t\t\tthis.hideQuestions = Array(questions.length).fill(false);\n\n\t\t\treturn questions;\n\t\t},\n\n\t\tevalsThead() {\n\t\t\treturn [[\n\t\t\t\t'#',\n\t\t\t\t'Subject',\n\t\t\t\t'Evaluator',\n\t\t\t\t'Requested By',\n\t\t\t\t'Form',\n\t\t\t\t'Evaluation Date',\n\t\t\t\t'Request Date',\n\t\t\t\t'Complete Date',\n\t\t\t\t'Status'\n\t\t\t]];\n\t\t},\n\t\tallEvalsConfig() {\n\t\t\treturn {\n\t\t\t\tajax: {\n\t\t\t\t\turl: '/evaluations',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tid: this.report.evals.slice(),\n\t\t\t\t\t\twith: {\n\t\t\t\t\t\t\tsubject: [\n\t\t\t\t\t\t\t\t'full_name'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tevaluator: [\n\t\t\t\t\t\t\t\t'full_name'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\trequestor: [\n\t\t\t\t\t\t\t\t'full_name'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tform: [\n\t\t\t\t\t\t\t\t'title'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdataSrc: ''\n\t\t\t\t},\n\t\t\t\tcolumns: [\n\t\t\t\t\t{data: 'url'},\n\t\t\t\t\t{data: 'subject.full_name'},\n\t\t\t\t\t{data: 'evaluator.full_name'},\n\t\t\t\t\t{data: 'requestor.full_name'},\n\t\t\t\t\t{data: 'form.title'},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\trender: renderDateRangeCell('evaluation_date_start', 'evaluation_date_end'),\n\t\t\t\t\t\tcreatedCell: createDateRangeCell('evaluation_date_start', 'evaluation_date_end')\n\t\t\t\t\t},\n\t\t\t\t\t{data: 'request_date', render: renderDateCell, createdCell: createDateCell},\n\t\t\t\t\t{data: 'complete_date', render: renderDateTimeCell, createdCell: createDateTimeCell},\n\t\t\t\t\t{data: 'status', render: renderEvaluationStatus}\n\t\t\t\t],\n\t\t\t\torder: [[0, 'desc']]\n\t\t\t};\n\t\t},\n\t\tsubjectEvalsConfig() {\n\t\t\treturn {\n\t\t\t\tcolumns: [\n\t\t\t\t\t{data: 'url'},\n\t\t\t\t\t{data: 'subject.full_name'},\n\t\t\t\t\t{data: 'evaluator.full_name'},\n\t\t\t\t\t{data: 'requestor.full_name'},\n\t\t\t\t\t{data: 'form.title'},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\trender: renderDateRangeCell('evaluation_date_start', 'evaluation_date_end'),\n\t\t\t\t\t\tcreatedCell: createDateRangeCell('evaluation_date_start', 'evaluation_date_end')\n\t\t\t\t\t},\n\t\t\t\t\t{data: \"request_date\", render: renderDateCell, createdCell: createDateCell},\n\t\t\t\t\t{data: \"complete_date\", render: renderDateTimeCell, createdCell: createDateTimeCell},\n\t\t\t\t\t{data: \"status\", render: renderEvaluationStatus}\n\t\t\t\t],\n\t\t\t\torder: [[0, 'desc']]\n\t\t\t};\n\t\t}\n\t},\n\twatch: {\n\t\tsubjectId() {\n\t\t\tthis.fetchSubjectEvals();\n\t\t},\n\t\treport(report) {\n\t\t\tthis.fetchSubjectEvals();\n\t\t\tthis.hideQuestions = Array(report.formContents.items.length)\n\t\t\t\t.fill(false);\n\t\t\tthis.scoreQuestions = Array(report.formContents.items.length)\n\t\t\t\t.fill(true);\n\t\t\tthis.customOptionValues = Array(report.formContents.items.length)\n\t\t\t\t.fill(CUSTOM_OPTION_VALUES.get('faculty'));\n\t\t\tthis.disregardOption = Array(report.formContents.items.length)\n\t\t\t\t.fill(DISREGARD_OPTION.get('faculty'));\n\t\t}\n\t},\n\n\tcreated() {\n\t\tfetchFormGroups().then(groupedForms => {\n\t\t\tthis.groupedForms = groupedForms;\n\t\t}).catch(err => {\n\t\t\thandleError(err, this, 'There was a problem fetching the list of forms');\n\t\t});\n\t},\n\n\tmethods: {\n\t\trunCsvReport() {\n\t\t\tlet csv = generateScoresReportCsv(\n\t\t\t\tthis.report,\n\t\t\t\t[this.subject],\n\t\t\t\tthis.hideQuestions,\n\t\t\t\tthis.scoreQuestions,\n\t\t\t\tthis.customOptionValues,\n\t\t\t\tthis.disregardOption\n\t\t\t);\n\n\t\t\tdownloadCsv(\n\t\t\t\tcsv,\n\t\t\t\t`${this.report.formContents.title} - ${this.subject.full_name}`,\n\t\t\t\tthis.dates\n\t\t\t);\n\t\t},\n\t\trunAllCsvReports() {\n\t\t\tlet subjects = Object.keys(this.report.subjectResponses).map(subjectId => {\n\t\t\t\tlet subject = this.users.find(user => user.id === Number(subjectId));\n\t\t\t\tlet full_name = subject\n\t\t\t\t\t? subject.full_name\n\t\t\t\t\t: `User # ${subjectId}`;\n\t\t\t\treturn {\n\t\t\t\t\tid: subjectId,\n\t\t\t\t\tfull_name\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tlet csv = generateScoresReportCsv(\n\t\t\t\tthis.report,\n\t\t\t\tsubjects,\n\t\t\t\tthis.hideQuestions,\n\t\t\t\tthis.scoreQuestions,\n\t\t\t\tthis.customOptionValues,\n\t\t\t\tthis.disregardOption\n\t\t\t);\n\n\t\t\tdownloadCsv(csv, `${this.report.formContents.title} - Aggregate`, this.dates);\n\n\t\t},\n\t\trunReport() {\n\t\t\tfetch('/report/form', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: getFetchHeaders(),\n\t\t\t\tcredentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tstartDate: this.dates.startDate,\n\t\t\t\t\tendDate: this.dates.endDate,\n\t\t\t\t\t'form_id': this.formId\n\t\t\t\t})\n\t\t\t}).then(response => {\n\t\t\t\tif(response.ok)\n\t\t\t\t\treturn response.json();\n\t\t\t\telse\n\t\t\t\t\tthrow new Error(response.statusText);\n\t\t\t}).then(report => {\n\t\t\t\tthis.report = Object.assign({}, this.report, report);\n\t\t\t}).catch(err => {\n\t\t\t\thandleError(err, this, 'There was a problem running the report');\n\t\t\t});\n\t\t},\n\t\tfetchSubjectEvals() {\n\t\t\tif(!this.subjectId || !this.report || !this.report.subjectEvals || !this.report.subjectEvals[this.subjectId]){\n\t\t\t\tthis.subjectEvals = [];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet query = $.param({\n\t\t\t\tid: this.report.subjectEvals[this.subjectId].slice(),\n\t\t\t\twith: {\n\t\t\t\t\tsubject: [\n\t\t\t\t\t\t'full_name'\n\t\t\t\t\t],\n\t\t\t\t\tevaluator: [\n\t\t\t\t\t\t'full_name'\n\t\t\t\t\t],\n\t\t\t\t\trequestor: [\n\t\t\t\t\t\t'full_name'\n\t\t\t\t\t],\n\t\t\t\t\tform: [\n\t\t\t\t\t\t'title'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfetch(`/evaluations?${query}`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: getFetchHeaders(),\n\t\t\t\tcredentials: 'same-origin',\n\t\t\t}).then(jsonOrThrow).then(subjectEvals => {\n\t\t\t\tthis.subjectEvals = subjectEvals;\n\t\t\t}).catch(err => {\n\t\t\t\thandleError(err, this, 'There was a problem fetching subject evaluations');\n\t\t\t});\n\t\t},\n\t\thideQuestion(questionIndex, hide) {\n\t\t\tlet hideQuestions = this.hideQuestions.slice();\n\t\t\thideQuestions.splice(questionIndex, 1, hide);\n\n\t\t\tthis.hideQuestions = hideQuestions;\n\t\t},\n\t\tscoreQuestion(questionIndex, score) {\n\t\t\tlet scoreQuestions = this.scoreQuestions.slice();\n\t\t\tscoreQuestions.splice(questionIndex, 1, score);\n\n\t\t\tthis.scoreQuestions = scoreQuestions;\n\t\t},\n\t\thandleCustomOption(questionIndex, questionCustomOptionValues) {\n\t\t\tlet customOptionValues = this.customOptionValues.slice();\n\t\t\tcustomOptionValues.splice(questionIndex, 1, questionCustomOptionValues);\n\n\t\t\tthis.customOptionValues = customOptionValues;\n\t\t},\n\t\thandleDisregardOption(questionIndex, questionDisregardOption) {\n\t\t\tlet disregardOption = this.disregardOption.slice();\n\t\t\tdisregardOption.splice(questionIndex, 1, questionDisregardOption);\n\n\t\t\tthis.disregardOption = disregardOption;\n\t\t},\n\t\texportPdf() {\n\t\t\tif(!this.reportContents || this.reportContents.items.length < 1)\n\t\t\t\treturn;\n\n\t\t\tlet hasSubject = (this.report.subjectEvals[this.subjectId]\n\t\t\t\t&& this.report.subjectEvals[this.subjectId].length > 0);\n\n\t\t\tPromise.all([\n\t\t\t\timport('pdfmake/build/pdfmake.js'),\n\t\t\t\timport('../../vfs_fonts.json')\n\t\t\t]).then(([pdfmake, vfs]) => {\n\t\t\t\tpdfmake.vfs = vfs;\n\n\t\t\t\tconst filename = hasSubject\n\t\t\t\t\t? `${this.subject.full_name} - ${this.reportContents.title} - ${this.dates.startDate} -- ${this.dates.endDate}.pdf`\n\t\t\t\t\t: `${this.reportContents.title} - ${this.dates.startDate} -- ${this.dates.endDate}.pdf`;\n\n\t\t\t\tlet evalCounts = {\n\t\t\t\t\tsubjectRequested: 0,\n\t\t\t\t\totherRequested: 0,\n\t\t\t\t\ttotal: 0\n\t\t\t\t};\n\t\t\t\tif (this.pdfOptions.evaluationListStyle === 'summary') {\n\t\t\t\t\tfor (let evaluation of this.subjectEvals) {\n\t\t\t\t\t\tif (evaluation.requested_by_id === evaluation.subject_id)\n\t\t\t\t\t\t\tevalCounts.subjectRequested++;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tevalCounts.otherRequested++;\n\n\t\t\t\t\t\tevalCounts.total++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet content = [\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: hasSubject\n\t\t\t\t\t\t\t? `${this.reportContents.title} - Summary of evaluations for ${this.subject.full_name}`\n\t\t\t\t\t\t\t: `${this.reportContents.title} - Summary of evaluations`,\n\t\t\t\t\t\tstyle: 'h1'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttable: fullWidthTable({\n\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t\t(hasSubject\n\t\t\t\t\t\t\t\t\t? ['Subject']\n\t\t\t\t\t\t\t\t\t: []).concat(\n\t\t\t\t\t\t\t\t\t\t['Form', 'Start date', 'End date']\n\t\t\t\t\t\t\t\t\t).map(tableHeader),\n\t\t\t\t\t\t\t\t(hasSubject\n\t\t\t\t\t\t\t\t\t? [this.subject.full_name]\n\t\t\t\t\t\t\t\t\t: []).concat([\n\t\t\t\t\t\t\t\t\t\tthis.reportContents.title,\n\t\t\t\t\t\t\t\t\t\tthis.dates.startDate,\n\t\t\t\t\t\t\t\t\t\tthis.dates.endDate\n\t\t\t\t\t\t\t\t\t]).map(pdfmakeStyle('tableBody'))\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\n\t\t\t\t\t{ text: `Evaluations included in report`, style: 'h2'},\n\t\t\t\t\tthis.pdfOptions.evaluationListStyle === 'summary'\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\tul: [\n\t\t\t\t\t\t\t\t`${evalCounts.subjectRequested} requested by ${hasSubject ? this.subject.full_name : 'subject'}`,\n\t\t\t\t\t\t\t\t`${evalCounts.otherRequested} requested by others`,\n\t\t\t\t\t\t\t\t`${evalCounts.total} total`\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: borderedStripedTable({\n\t\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\t\twidths: [\n\t\t\t\t\t\t\t\t\t'auto',\n\t\t\t\t\t\t\t\t\t'auto',\n\t\t\t\t\t\t\t\t\t'auto',\n\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t'auto',\n\t\t\t\t\t\t\t\t\t'auto'\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t'#',\n\t\t\t\t\t\t\t\t\t\t'Evaluator',\n\t\t\t\t\t\t\t\t\t\t'Requested by',\n\t\t\t\t\t\t\t\t\t\t'Form',\n\t\t\t\t\t\t\t\t\t\t'Evaluation date',\n\t\t\t\t\t\t\t\t\t\t'Completed'\n\t\t\t\t\t\t\t\t\t].map(tableHeader),\n\t\t\t\t\t\t\t\t\t...this.subjectEvals.map(subjectEval => [\n\t\t\t\t\t\t\t\t\t\tsubjectEval.id,\n\t\t\t\t\t\t\t\t\t\tsubjectEval.evaluator.full_name,\n\t\t\t\t\t\t\t\t\t\tsubjectEval.requestor.full_name,\n\t\t\t\t\t\t\t\t\t\tsubjectEval.form.title,\n\t\t\t\t\t\t\t\t\t\trenderDateRange(\n\t\t\t\t\t\t\t\t\t\t\tsubjectEval.evaluation_date_start,\n\t\t\t\t\t\t\t\t\t\t\tsubjectEval.evaluation_date_end\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tmoment(subjectEval.complete_date).calendar()\n\t\t\t\t\t\t\t\t\t]).map(row => row.map(pdfmakeStyle('tableBody')))\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\n\t\t\t\t\t{ text: this.reportContents.title, style: 'h2' },\n\t\t\t\t\t{\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\ttype: 'none',\n\t\t\t\t\t\tol: this.reportQuestions.map((question, index) =>\n\t\t\t\t\t\t\t\tObject.assign({}, question, {originalIndex: index})\n\t\t\t\t\t\t\t).filter((question, index) =>\n\t\t\t\t\t\t\t\t!this.hideQuestions[index]).map(item => {\n\t\t\t\t\t\t\tlet questionHeading = this.hideQuestions.some(hide => hide)\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tmargin: [0, 20, 0, 5],\n\t\t\t\t\t\t\t\t\ttext: item.text,\n\t\t\t\t\t\t\t\t\tstyle: 'questionText'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\tmargin: [0, 20, 0, 5],\n\t\t\t\t\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\twidth: 'auto',\n\t\t\t\t\t\t\t\t\t\t\tmargin: [0, 0, 5, 0],\n\t\t\t\t\t\t\t\t\t\t\ttext: `${item.id.toUpperCase()}: `,\n\t\t\t\t\t\t\t\t\t\t\tbold: true,\n\t\t\t\t\t\t\t\t\t\t\tstyle: 'questionText'\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\twidth: '*',\n\t\t\t\t\t\t\t\t\t\t\ttext: item.text,\n\t\t\t\t\t\t\t\t\t\t\tstyle: 'questionText'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tlet questionBody = '';\n\t\t\t\t\t\t\tswitch(item.questionType){\n\t\t\t\t\t\t\t\tcase 'checkbox':\n\t\t\t\t\t\t\t\tcase 'radio':\n\t\t\t\t\t\t\t\tcase 'radiononnumeric':\n\t\t\t\t\t\t\t\t\tquestionBody = borderedStripedTable({\n\t\t\t\t\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\t\t\t\t\theaderRows: 2,\n\t\t\t\t\t\t\t\t\t\t\twidths: ['auto', 'auto', '*'].concat(\n\t\t\t\t\t\t\t\t\t\t\t\thasSubject\n\t\t\t\t\t\t\t\t\t\t\t\t\t? ['*', '*']\n\t\t\t\t\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: 'Option text',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trowSpan: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'tableHeader'\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: 'Value',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trowSpan: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'tableHeader'\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: 'Responses',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolSpan: hasSubject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 3\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'tableHeader'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t].concat(hasSubject\n\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t].concat(hasSubject\n\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Subject #',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Subject %'\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t\t\t\t\t\t).concat([\n\t\t\t\t\t\t\t\t\t\t\t\t\t'Overall %'\n\t\t\t\t\t\t\t\t\t\t\t\t]).map(tableHeader)\n\t\t\t\t\t\t\t\t\t\t\t].concat(\n\t\t\t\t\t\t\t\t\t\t\t\titem.options.map(option => [\n\t\t\t\t\t\t\t\t\t\t\t\t\toption.text,\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetResponseValue(option.value, this.customOptionValues[item.originalIndex]) || ''\n\t\t\t\t\t\t\t\t\t\t\t\t].concat(hasSubject\n\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toption.responses || '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toption.percentage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `${option.percentage}%`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t\t\t\t\t\t).concat([\n\t\t\t\t\t\t\t\t\t\t\t\t\toption.averagePercentage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `${option.averagePercentage}%`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t\t\t])).map(row => row.map(pdfmakeStyle('tableBody')))\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'text':\n\t\t\t\t\t\t\t\t\tif(hasSubject && item.subjectResponseValues)\n\t\t\t\t\t\t\t\t\t\tquestionBody = borderedStripedTable({\n\t\t\t\t\t\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\t\t\t\t\t\theaderRows: 1,\n\t\t\t\t\t\t\t\t\t\t\t\twidths: ['auto', 'auto', 'auto', '*'],\n\t\t\t\t\t\t\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'#',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Evaluator',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Response'\n\t\t\t\t\t\t\t\t\t\t\t\t\t].map(tableHeader)\n\t\t\t\t\t\t\t\t\t\t\t\t].concat(\n\t\t\t\t\t\t\t\t\t\t\t\t\tObject.keys(item.subjectResponseValues).map(evaluationId => [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tevaluationId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.report.evaluators[evaluationId].full_name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderDateRange(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.report.evaluations[evaluationId].evaluation_date_start,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.report.evaluations[evaluationId].evaluation_date_end\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.subjectResponseValues[evaluationId]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]).map(row => row.map(pdfmakeStyle('tableBody')))\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tpageBreak: this.pdfOptions.questionPageBreak,\n\t\t\t\t\t\t\t\tstack: [\n\t\t\t\t\t\t\t\t\tquestionHeading,\n\t\t\t\t\t\t\t\t\tquestionBody\n\t\t\t\t\t\t\t\t].concat((\n\t\t\t\t\t\t\t\t\tthis.scoreQuestions[item.originalIndex]\n\t\t\t\t\t\t\t\t\t&& canScoreQuestion(item.questionType)\n\t\t\t\t\t\t\t\t\t&& valuesForAllOptions(item, this.customOptionValues[item.originalIndex], this.disregardOption[item.originalIndex])\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t? [{\n\t\t\t\t\t\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t['Total average'],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[round(average(getResponseValues(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.report.averageResponses[item.id],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.customOptionValues[item.originalIndex],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.disregardOption[item.originalIndex]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)), 2)]\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t].concat(hasSubject\n\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t['Subject average'],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[round(average(getResponseValues(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.report.subjectResponses[this.subjectId][item.id],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.customOptionValues[item.originalIndex],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.disregardOption[item.originalIndex]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)), 2)]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttable: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbody: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t['Subject standard deviation'],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[round(standardDeviation(getResponseValues(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.report.subjectResponses[this.subjectId][item.id],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.customOptionValues[item.originalIndex],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.disregardOption[item.originalIndex]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)), 2)]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t\tlet docDefinition = {\n\t\t\t\t\tpageSize: 'LETTER',\n\t\t\t\t\tcontent,\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\th1: {\n\t\t\t\t\t\t\tbold: true,\n\t\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t\t\tmargin: [0, 20],\n\t\t\t\t\t\t},\n\t\t\t\t\t\th2: {\n\t\t\t\t\t\t\tbold: true,\n\t\t\t\t\t\t\tfontSize: 16,\n\t\t\t\t\t\t\tmargin: [0, 10]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tquestionText: {\n\t\t\t\t\t\t\tfontSize: 11\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttableHeader: {\n\t\t\t\t\t\t\tbold: true,\n\t\t\t\t\t\t\tfontSize: 10\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttableBody: {\n\t\t\t\t\t\t\tfontSize: 8\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tpdfmake.createPdf(docDefinition).download(filename);\n\t\t\t}).catch(err => {\n\t\t\t\thandleError(err, this, `There was a problem exporting the report for ${this.reportContents.title}`);\n\t\t\t});\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tStartEndDate,\n\t\tSelectTwo,\n\t\tFormReportQuestion,\n\t\tDataTable,\n\t\tBootstrapAlert,\n\t\tAlertList,\n\t\tShowHideButton,\n\t\tSvgIcon\n\t}\n};\n</script>\n\n<style scoped>\n\th2 {\n\t\tmargin-top: 0;\n\t}\n\n\th2.form-title {\n\t\tmargin: 60px 0 20px;\n\t\tpage-break-before: always;\n\t}\n\n\t.report-evaluations {\n\t\tpage-break-inside: avoid;\n\t}\n\n\thr {\n\t\tpage-break-before: always;\n\t}\n\n\t@media print {\n\t\t.btn-lg-submit-container {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/FormReport.vue?10dbc2fe","<template>\n\t<div :class=\"`question panel ${required ? 'panel-primary' : 'panel-default'}`\"\n\t\t\t:style=\"{opacity: hide ? 0.7 : 1}\">\n\t\t<div v-if=\"text\" class=\"question-header panel-heading\">\n\t\t\t<h3 class=\"question-title panel-title\">\n\t\t\t\t<b>{{ ucfirst(id) }}: </b>\n\t\t\t\t<span v-html=\"snarkdown(text)\"></span>\n\t\t\t</h3>\n\t\t</div>\n\n\t\t<div class=\"panel-body\">\n\t\t\t<div class=\"question-body\">\n\t\t\t\t<form-reader-question-option\n\t\t\t\t\t\tv-if=\"['radio', 'radiononnumeric', 'checkbox'].includes(questionType)\"\n\t\t\t\t\t\tv-for=\"(option, index) of options\" :key=\"index\"\n\t\t\t\t\t\tv-bind=\"option\"\n\t\t\t\t\t\t:questionType=\"questionType\"\n\t\t\t\t\t\t:questionId=\"id\"\n\t\t\t\t\t\t:required=\"required\"\n\t\t\t\t\t\t:showDescription=\"showDescriptions\"\n\t\t\t\t\t\treadonly>\n\t\t\t\t\t<div class=\"text-center\"\n\t\t\t\t\t\t\tv-if=\"canScoreQuestion && scoreQuestion && valuesForAllOptions && !shouldDisregardOption(option) && (getOptionValue(option) || getOptionValue(option) === 0)\">\n\t\t\t\t\t\t<span class=\"option-value-display\">\n\t\t\t\t\t\t\tValue: {{ getOptionValue(option) }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form-report-question-option-stats v-bind=\"option\" />\n\t\t\t\t</form-reader-question-option>\n\n\t\t\t\t<div v-if=\"subjectResponseValues && ['text', 'number'].includes(questionType)\"\n\t\t\t\t\t\tclass=\"question-option\">\n\t\t\t\t\t<table class=\"table table-bordered\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Evaluation</th>\n\t\t\t\t\t\t\t\t<th>Response</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr v-for=\"(response, evalId) of subjectResponseValues\">\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a :href=\"`/evaluations/${evalId}`\">\n\t\t\t\t\t\t\t\t\t\t{{ evalId }}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{{ response }}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div v-if=\"options && showChart\" class=\"row\">\n\t\t\t\t<div v-if=\"subjectResponses\" class=\"col-md-6\">\n\t\t\t\t\t<h3>Subject responses</h3>\n\t\t\t\t\t<chartjs-chart :id=\"`${id}-chart`\" :type=\"chartType\"\n\t\t\t\t\t\t:data=\"chartData\" :options=\"chartOptions\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t<h3>Total responses</h3>\n\t\t\t\t\t<chartjs-chart :id=\"`${id}-chart-avg`\" :type=\"chartType\"\n\t\t\t\t\t\t:data=\"averageChartData\" :options=\"chartOptions\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\tChart type\n\t\t\t\t\t\t<select class=\"form-control\" v-model=\"chartType\">\n\t\t\t\t\t\t\t<option v-for=\"type of chartTypes\" :value=\"type\">\n\t\t\t\t\t\t\t\t{{ camelCaseToWords(type) }}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div v-if=\"canScoreQuestion && scoreQuestion && valuesForAllOptions && (totalAverageScore || subjectAverageScore)\"\n\t\t\t\t\tclass=\"scores-container\">\n\t\t\t\t<div v-if=\"totalAverageScore\" class=\"score-container\">\n\t\t\t\t\t<small>Total average</small>\n\t\t\t\t\t<span class=\"score\">\n\t\t\t\t\t\t{{ round(totalAverageScore, 2) }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"subjectAverageScore\" class=\"score-container\">\n\t\t\t\t\t<small>Subject average</small>\n\t\t\t\t\t<span class=\"score\">\n\t\t\t\t\t\t{{ round(subjectAverageScore, 2) }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"subjectStandardDev\" class=\"score-container\">\n\t\t\t\t\t<small>Subject standard deviation</small>\n\t\t\t\t\t<span class=\"score\">\n\t\t\t\t\t\t{{ round(subjectStandardDev, 2) }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"question-footer panel-footer\">\n\t\t\t<div class=\"question-description-toggle\">\n\t\t\t\t<show-hide-button class=\"btn btn-info\" :value=\"hide\"\n\t\t\t\t\t\t@input=\"$emit('hide', arguments[0])\">\n\t\t\t\t\t<template slot=\"glyph\"></template>\n\n\t\t\t\t\t<template slot=\"true\">\n\t\t\t\t\t\tShow\n\t\t\t\t\t</template>\n\t\t\t\t\t<template slot=\"false\">\n\t\t\t\t\t\tHide\n\t\t\t\t\t</template>\n\n\t\t\t\t\tquestion in PDF\n\t\t\t\t</show-hide-button>\n\n\t\t\t\t<show-hide-button v-if=\"hasDescriptions\" class=\"btn btn-info\"\n\t\t\t\t\t\tv-model=\"showDescriptions\">\n\t\t\t\t\t<template slot=\"true\">\n\t\t\t\t\t\t<span class=\"glyphicon glyphicon-zoom-out\"></span>\n\t\t\t\t\t\tHide\n\t\t\t\t\t</template>\n\t\t\t\t\t<template slot=\"false\">\n\t\t\t\t\t\t<span class=\"glyphicon glyphicon-zoom-in\"></span>\n\t\t\t\t\t\tShow\n\t\t\t\t\t</template>\n\n\t\t\t\t\tdescriptions\n\n\t\t\t\t\t<template slot=\"glyph\"></template>\n\t\t\t\t</show-hide-button>\n\n\t\t\t\t<show-hide-button v-if=\"options\" class=\"btn btn-info\"\n\t\t\t\t\t\tv-model=\"showChart\">\n\t\t\t\t\t<span slot=\"left-glyph\" class=\"glyphicon glyphicon-stats\"></span>\n\n\t\t\t\t\tchart\n\n\t\t\t\t\t<template slot=\"glyph\"></template>\n\t\t\t\t</show-hide-button>\n\n\t\t\t\t<show-hide-button v-if=\"canScoreQuestion\" class=\"btn btn-info\"\n\t\t\t\t\t\tv-model=\"showScoreOptions\">\n\t\t\t\t\tscore options\n\t\t\t\t</show-hide-button>\n\t\t\t</div>\n\t\t\t<div v-if=\"canScoreQuestion && showScoreOptions\" class=\"row score-options-row\">\n\t\t\t\t<div class=\"panel panel-default\">\n\t\t\t\t\t<div class=\"panel-heading\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" :checked=\"scoreQuestion\"\n\t\t\t\t\t\t\t\t\t@change=\"$emit('score-question', $event.target.checked)\" />\n\t\t\t\t\t\t\t\tCompute scores\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"panel-body\" v-if=\"scoreQuestion\">\n\t\t\t\t\t\t<div v-if=\"questionType === 'radiononnumeric'\" class=\"row\">\n\t\t\t\t\t\t\tQuestion values\n\t\t\t\t\t\t\t<div v-for=\"option of options\" class=\"form-horizontal\">\n\t\t\t\t\t\t\t\t<span class=\"option-text\">\n\t\t\t\t\t\t\t\t\t{{ option.text }}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" :checked=\"disregardOption[option.value]\"\n\t\t\t\t\t\t\t\t\t\t\t@change=\"handleDisregardOptionChange(option, $event)\" />\n\t\t\t\t\t\t\t\t\t\tDisregard responses\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-sm-8\">\n\t\t\t\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\t\t\t\tValue\n\t\t\t\t\t\t\t\t\t\t<input type=\"number\" class=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"disregardOption[option.value]\"\n\t\t\t\t\t\t\t\t\t\t\t:value=\"customOptionValues[option.value]\"\n\t\t\t\t\t\t\t\t\t\t\t@input=\"handleCustomOptionValueChange(option, $event)\" />\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport FormReaderQuestionOption from '@/vue-components/FormReader/FormReaderQuestionOption.vue';\nimport FormReportQuestionOptionStats from './FormReportQuestionOptionStats.vue';\nimport ChartjsChart from '../ChartjsChart.vue';\nimport ShowHideButton from '../ShowHideButton.vue';\nimport RichNumberStdDev from '../RichNumberStdDev.vue';\n\nimport round from 'lodash/round';\nimport snarkdown from 'snarkdown';\n\nimport {\n\tcanScoreQuestion,\n\tvaluesForAllOptions,\n\tgetResponseValues,\n\tgetResponseValue,\n\tshouldDisregardOption\n} from '@/modules/reports/form-report.js';\n\nimport { CHART_COLORS } from '@/modules/constants.js';\nimport { average, standardDeviation } from '@/modules/math-utils.js';\nimport { camelCaseToWords, ucfirst } from '@/modules/utils.js';\n\nexport default {\n\tprops: {\n\t\tid: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tquestionType: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array,\n\t\t\trequired: false\n\t\t},\n\t\trequired: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\thide: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tscoreQuestion: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tcustomOptionValues: {\n\t\t\ttype: Object,\n\t\t\tdefault: {}\n\t\t},\n\t\tdisregardOption: {\n\t\t\ttype: Object,\n\t\t\tdefault: {}\n\t\t},\n\n\t\tsubjectResponses: Object,\n\t\taverageResponses: Object,\n\t\tsubjectResponseValues: Object\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tshowDescriptions: false,\n\t\t\tshowChart: false,\n\t\t\tchartType: 'pie',\n\n\t\t\tshowScoreOptions: false\n\t\t};\n\t},\n\tcomputed: {\n\t\tcanScoreQuestion() {\n\t\t\treturn canScoreQuestion(this.questionType);\n\t\t},\n\t\tvaluesForAllOptions() {\n\t\t\treturn valuesForAllOptions(this, this.customOptionValues, this.disregardOption);\n\t\t},\n\t\ttotalScores() {\n\t\t\tif (!this.valuesForAllOptions || !this.averageResponses)\n\t\t\t\treturn;\n\n\t\t\treturn getResponseValues(\n\t\t\t\tthis.averageResponses,\n\t\t\t\tthis.customOptionValues,\n\t\t\t\tthis.disregardOption\n\t\t\t);\n\t\t},\n\t\ttotalAverageScore() {\n\t\t\tif (!this.valuesForAllOptions || !this.totalScores)\n\t\t\t\treturn;\n\n\t\t\treturn average(this.totalScores);\n\t\t},\n\t\tsubjectScores() {\n\t\t\tif (!this.valuesForAllOptions || !this.subjectResponses)\n\t\t\t\treturn;\n\n\t\t\treturn getResponseValues(\n\t\t\t\tthis.subjectResponses,\n\t\t\t\tthis.customOptionValues,\n\t\t\t\tthis.disregardOption\n\t\t\t);\n\t\t},\n\t\tsubjectAverageScore() {\n\t\t\tif (!this.valuesForAllOptions || !this.subjectScores)\n\t\t\t\treturn;\n\n\t\t\treturn average(this.subjectScores);\n\t\t},\n\t\tsubjectStandardDev() {\n\t\t\tif (!this.valuesForAllOptions || !this.subjectScores)\n\t\t\t\treturn;\n\n\t\t\treturn standardDeviation(this.subjectScores);\n\t\t},\n\t\thasDescriptions() {\n\t\t\tif (!this.options)\n\t\t\t\treturn false;\n\n\t\t\treturn this.options.some(option => option.description);\n\t\t},\n\t\tchartTypes(){\n\t\t\treturn [\n\t\t\t\t'pie',\n\t\t\t\t'bar',\n\t\t\t\t'polarArea'\n\t\t\t];\n\t\t},\n\t\tchartData(){\n\t\t\tif(this.subjectResponses)\n\t\t\t\treturn {\n\t\t\t\t\tlabels: this.options.map(option => option.text || option.value),\n\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Subject responses',\n\t\t\t\t\t\t\tdata: Object.values(this.subjectResponses),\n\t\t\t\t\t\t\tbackgroundColor: CHART_COLORS.OTHER\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t},\n\t\taverageChartData(){\n\t\t\tif(this.averageResponses)\n\t\t\t\treturn {\n\t\t\t\t\tlabels: this.options.map(option => option.text || option.value),\n\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Average responses',\n\t\t\t\t\t\t\tdata: Object.values(this.averageResponses),\n\t\t\t\t\t\t\tbackgroundColor: CHART_COLORS.OTHER\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t},\n\t\tchartOptions(){\n\t\t\treturn {\n\t\t\t\tlegend: {\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\tfontColor: '#333'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t},\n\tmethods: {\n\t\tcamelCaseToWords,\n\t\tsnarkdown,\n\t\tucfirst,\n\t\tround,\n\t\tshouldDisregardValue(value) {\n\t\t\treturn shouldDisregardOption(value, this.disregardOption);\n\t\t},\n\t\tshouldDisregardOption(option) {\n\t\t\treturn this.shouldDisregardValue(option.value);\n\t\t},\n\t\tgetValueValue(value) {\n\t\t\tif (!this.canScoreQuestion)\n\t\t\t\treturn;\n\n\t\t\treturn getResponseValue(value, this.customOptionValues);\n\t\t},\n\t\tgetOptionValue(option) {\n\t\t\treturn this.getValueValue(option.value);\n\t\t},\n\t\thandleCustomOptionValueChange(option, event) {\n\t\t\tthis.$emit('custom-option', Object.assign({}, this.customOptionValues, {[option.value]: Number(event.target.value)}));\n\t\t},\n\t\thandleDisregardOptionChange(option, event) {\n\t\t\tthis.$emit('disregard-option', Object.assign({}, this.disregardOption, {[option.value]: event.target.checked}));\n\t\t}\n\t},\n\tcomponents: {\n\t\tFormReaderQuestionOption,\n\t\tFormReportQuestionOptionStats,\n\t\tChartjsChart,\n\t\tShowHideButton,\n\t\tRichNumberStdDev\n\t}\n};\n</script>\n\n<style scoped>\n\t.option-text {\n\t\tfont-weight: bold;\n\t\tfont-size: 1.25em;\n\t}\n\n\t.score-options-row {\n\t\ttext-align: left;\n\t}\n\n\t.scores-container {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: space-around;\n\t}\n\n\t.score-container {\n\t\tdisplay: block;\n\t\tborder: 1px solid rgba(0, 0, 0, 0.15);\n\t\tpadding: 2em;\n\t\tfont-size: 1.25em;\n\t\tborder-radius: 1px;\n\t}\n\n\t.score-container small {\n\t\tdisplay: block;\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\n\t.score-container .score {\n\t\tdisplay: block;\n\t\ttext-align: center;\n\t\tfont-size: 1.25em;\n\t}\n\n\t.option-value-display {\n\t\tfont-size: 1.25em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/FormReportQuestion.vue?779aa158","<template>\n\t<div class=\"question-option-stats\">\n\t\t<table v-if=\"responses || percentage || averagePercentage\"\n\t\t\t\tclass=\"table table-bordered\">\n\t\t\t<tbody>\n\t\t\t\t<tr v-if=\"responses != null\">\n\t\t\t\t\t<th>Subject responses</th>\n\t\t\t\t\t<td>{{ responses }}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr v-if=\"percentage != null\">\n\t\t\t\t\t<th>Subject percentage</th>\n\t\t\t\t\t<td>{{ percentage }}%</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr v-if=\"averagePercentage != null\">\n\t\t\t\t\t<th>Overall percentage</th>\n\t\t\t\t\t<td>{{ averagePercentage }}%</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tprops: {\n\t\tresponses: Number,\n\t\tpercentage: Number,\n\t\taveragePercentage: Number\n\t}\n};\n</script>\n\n<style scoped>\n\t.question-option-stats {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tflex-grow: 1;\n\t\tjustify-content: flex-end;\n\t}\n\n\ttable {\n\t\twidth: 40%;\n\t\tmargin: 0 auto;\n\t}\n\t\n\ttable th {\n\t\twhite-space: nowrap;\n\t}\n\n\ttable td {\n\t\ttext-align: center;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/FormReportQuestionOptionStats.vue?663ee435","<template>\n\t<section>\n\t\t<h2>Needs evaluations</h2>\n\n\t\t<div v-if=\"show.emailEditor\" class=\"panel panel-default email-editor-container\">\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<email-editor\n\t\t\t\t\tfrom=\"reminders\"\n\t\t\t\t\ttarget=\"/emails/reminders\"\n\t\t\t\t\ttitle=\"Send reminders\"\n\t\t\t\t\tdefault-subject=\"Please request evaluations!\"\n\t\t\t\t\t:default-to=\"selectedUsers\"\n\t\t\t\t\t:possible-recipients=\"trainees\"\n\t\t\t\t\t:default-body-markdown=\"markdownTemplates.get(markdownTemplate)\"\n\t\t\t\t\t:email-replacements=\"emailReplacements\"\n\t\t\t\t\t:additional-fields=\"additionalEmailFields\"\n\t\t\t\t\t:edit-to-on-send=\"addNumCompleted\"\n\t\t\t\t\t@close=\"show.emailEditor = false\" />\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tEmail template\n\t\t\t\t\t<select class=\"form-control\" v-model=\"markdownTemplate\">\n\t\t\t\t\t\t<option v-for=\"template of Array.from(markdownTemplates.keys())\"\n\t\t\t\t\t\t\t\t:value=\"template\">\n\t\t\t\t\t\t\t{{ template }}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div v-else class=\"show-email-button-container\">\n\t\t\t<button type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t@click=\"show.emailEditor = true\">\n\t\t\t\t<span class=\"glyphicon glyphicon-pencil\"></span>\n\t\t\t\tCompose reminders\n\t\t\t</button>\n\t\t</div>\n\n\t\t<section>\n\t\t\t<component-list :items=\"trainees\" :fields=\"traineeFields\">\n\t\t\t\t<template slot-scope=\"item\">\n\t\t\t\t\t<evaluation-list-item :user=\"item\" />\n\t\t\t\t</template>\n\t\t\t</component-list>\n\t\t</section>\n\n\t</section>\n</template>\n\n<script>\nimport moment from 'moment';\n\nimport EvaluationListItem from './EvaluationListItem.vue';\nimport ComponentList from '../../ComponentList.vue';\nimport EmailEditor from '../../EmailEditor.vue';\n\nimport { groupUsers } from '@/modules/utils.js';\nimport { ADMIN_EMAIL } from '@/modules/constants.js';\n\nexport default {\n\tprops: {\n\t\tdates: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tevalThreshold: {\n\t\t\trequired: true\n\t\t},\n\t\ttrainees: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tselectedUsers: [],\n\t\t\tmarkdownTemplate: 'Default',\n\t\t\tshow: {\n\t\t\t\temailEditor: false\n\t\t\t}\n\t\t};\n\t},\n\tcomputed: {\n\t\ttraineeFields(){\n\t\t\treturn [\n\t\t\t\t'full_name',\n\t\t\t\t'training_level'\n\t\t\t];\n\t\t},\n\t\tmarkdownTemplates(){\n\t\t\tlet startDate = moment(this.dates.startDate).format('LL');\n\t\t\tlet endDate = moment(this.dates.endDate).format('LL');\n\t\t\treturn new Map([\n\t\t\t\t[\n\t\t\t\t\t'Default',\n\t\t\t\t\t`Hello Dr. [[Name]],\n\nYou have [[# Completed]] evaluations completed for between ${startDate} and ${endDate}.\n\n**You are required to have ${this.evalThreshold} evaluations completed for this period.**\nPlease request at least [[# Needed]] more evaluations as soon as possible.\n\nIf you have any issues or questions about the system, please contact [${ADMIN_EMAIL}](mailto:${ADMIN_EMAIL}).\n\nThank you!`\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'CCC',\n\t\t\t\t\t`Hello Dr. [[Name]],\n\nThe Clinical Competency Committee will be meeting soon to evaluate your performance from ${startDate} to ${endDate}.\n\nYou currently have [[# Completed]] evaluations completed for this period;\nhowever, **you are required to have ${this.evalThreshold} evaluations completed for this period.**\nPlease request at least [[# Needed]] more evaluations as soon as possible.\n\nIf you have any issues or questions about the system, please contact [${ADMIN_EMAIL}](mailto:${ADMIN_EMAIL}).\n\nThank you!`\n\t\t\t\t]\n\t\t\t]);\n\t\t},\n\t\temailReplacements(){\n\t\t\treturn [\n\t\t\t\t'Name',\n\t\t\t\t'# Completed',\n\t\t\t\t'# Needed'\n\t\t\t];\n\t\t},\n\t\tadditionalEmailFields(){\n\t\t\treturn {\n\t\t\t\tevalsRequired: this.evalThreshold\n\t\t\t};\n\t\t}\n\t},\n\tmethods: {\n\t\tgroupUsers,\n\t\tgetPossibleRecipient(id){\n\t\t\treturn this.trainees.find(user => user.id === Number(id));\n\t\t},\n\t\tgetRecipientCompleted(id){\n\t\t\tlet recipient = this.getPossibleRecipient(id);\n\t\t\treturn recipient && recipient.subject_evaluations\n\t\t\t\t? recipient.subject_evaluations.length\n\t\t\t\t: 0;\n\t\t},\n\t\taddNumCompleted(to) {\n\t\t\tif (Array.isArray(to))\n\t\t\t\treturn to.map(id => ({\n\t\t\t\t\tid: id,\n\t\t\t\t\tnumCompleted: this.getRecipientCompleted(id)\n\t\t\t\t}));\n\t\t\telse if(to.id)\n\t\t\t\treturn {\n\t\t\t\t\tid: to.id,\n\t\t\t\t\tnumCompleted: to.subject_evaluations.length\n\t\t\t\t};\n\t\t\telse if(!Number.isNaN(to))\n\t\t\t\treturn {\n\t\t\t\t\tid: to,\n\t\t\t\t\tnumCompleted: this.getRecipientCompleted(to)\n\t\t\t\t};\n\t\t}\n\t},\n\tcomponents: {\n\t\tEvaluationListItem,\n\t\tComponentList,\n\t\tEmailEditor\n\t}\n};\n</script>\n\n<style scoped>\n\t.show-email-button-container {\n\t\ttext-align: right;\n\t\tmargin-bottom: 20px;\n\t}\n\n\t.email-editor-container {\n\t\tmargin-bottom: 60px;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/Needs/resources/assets/js/vue-components/Reports/Needs/Evaluations.vue?1f713cce","<template>\n\t<li class=\"evaluation-list-item\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t<img height=\"50\" width=\"50\" alt=\"\"\n\t\t\t\t\t:src=\"user.photo_path || placeholderUserImagePath\" />\n\t\t\t\t<a class=\"name\" :href=\"`/profile/${user.id}`\" target=\"_blank\">\n\t\t\t\t\t{{ user.full_name }}\n\t\t\t\t</a>\n\t\t\t</div>\n\n\t\t\t<div class=\"col-sm-2\">\n\t\t\t\t{{\n\t\t\t\t\tuser.type === 'resident'\n\t\t\t\t\t\t? renderTrainingLevel(user.training_level)\n\t\t\t\t\t\t: ucfirst(user.type)\n\t\t\t\t}}\n\t\t\t</div>\n\n\t\t\t<section v-if=\"user.type === 'resident'\" class=\"col-sm-2\">\n\t\t\t\t<div>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t{{ completeEvals.length }}\n\t\t\t\t\t\tcomplete evaluations\n\t\t\t\t\t</b>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{{ pendingEvals.length }}\n\t\t\t\t\tpending evaluations\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section v-else class=\"col-sm-2\">\n\t\t\t\t<div>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t{{ pendingEvals.length }}\n\t\t\t\t\t\tpending evaluations\n\t\t\t\t\t</b>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{{ completeEvals.length }}\n\t\t\t\t\tcomplete evaluations\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<div class=\"col-sm-4 text-right\">\n\t\t\t\t<show-hide-button class=\"btn btn-xs btn-info\"\n\t\t\t\t\t\tv-if=\"user[evals].length > 0\"\n\t\t\t\t\t\tv-model=\"show.evaluations\">\n\t\t\t\t\tevaluations\n\t\t\t\t</show-hide-button>\n\t\t\t</div>\n\t\t</div>\n\t\t<section class=\"details\" v-show=\"show.evaluations\">\n\t\t\t<h4>Evaluations</h4>\n\t\t\t<label>\n\t\t\t\t<input type=\"checkbox\" v-model=\"show.canceled\" />\n\t\t\t\tShow disabled and canceled\n\t\t\t</label>\n\t\t\t<ul class=\"list-group\">\n\t\t\t\t<evaluation-details-list-item v-for=\"detailsEval of detailsEvals\"\n\t\t\t\t\t:key=\"detailsEval.id\"\n\t\t\t\t\t:evaluation=\"detailsEval\" />\n\t\t\t</ul>\n\t\t</section>\n\t</li>\n</template>\n\n<script>\nimport EvaluationDetailsListItem from './EvaluationDetailsListItem.vue';\nimport ShowHideButton from '../../ShowHideButton.vue';\n\nimport { PLACEHOLDER_USER_IMAGE_PATH } from '@/modules/constants.js';\nimport { ucfirst } from '@/modules/utils.js';\nimport { renderTrainingLevel } from '@/modules/datatable-utils.js';\n\nexport default {\n\tprops: {\n\t\tuser: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tevals: {\n\t\t\ttype: String,\n\t\t\tdefault: 'subject_evaluations'\n\t\t},\n\t\tplaceholderUserImagePath: {\n\t\t\ttype: String,\n\t\t\tdefault: PLACEHOLDER_USER_IMAGE_PATH\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tshow: {\n\t\t\t\tevaluations: false,\n\t\t\t\tcanceled: false\n\t\t\t}\n\t\t};\n\t},\n\tcomputed: {\n\t\tcompleteEvals(){\n\t\t\treturn this.user[this.evals]\n\t\t\t\t.filter(evaluation => evaluation.status === 'complete');\n\t\t},\n\t\tpendingEvals(){\n\t\t\treturn this.user[this.evals]\n\t\t\t\t.filter(evaluation => evaluation.status === 'pending');\n\t\t},\n\t\tdetailsEvals(){\n\t\t\treturn this.show.canceled\n\t\t\t\t? this.user[this.evals]\n\t\t\t\t: this.user[this.evals]\n\t\t\t\t\t.filter(evaluation =>\n\t\t\t\t\t\t['complete', 'pending'].includes(evaluation.status));\n\t\t}\n\t},\n\tmethods: {\n\t\trenderTrainingLevel,\n\t\tucfirst\n\t},\n\tcomponents: {\n\t\tEvaluationDetailsListItem,\n\t\tShowHideButton\n\t}\n};\n</script>\n\n<style scoped>\n\t.evaluation-list-item {\n\t\tborder-bottom: 1px solid rgba(0, 0, 0, 0.25);\n\t\tpadding: 5px 0;\n\t}\n\n\t.evaluation-list-item:nth-child(even){\n\t\tbackground-color: rgba(0, 0, 0, 0.05);\n\t}\n\n\t.evaluation-list-item .row {\n\t\tmargin: 0;\n\t}\n\n\t.name {\n\t\tfont-size: 1.15em;\n\t}\n\n\t.evaluation-list-item div section {\n\t\tdisplay: inline-block;\n\t}\n\n\t.evaluation-list-item .details {\n\t\tpadding: 10px 20px 0;\n\t}\n\n\timg {\n\t\tborder-radius: 100%;\n\t\tobject-fit: cover;\n\t\tobject-position: center;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/Needs/resources/assets/js/vue-components/Reports/Needs/EvaluationListItem.vue?7715c500","<template>\n\t<li class=\"list-group-item\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-1\">\n\t\t\t\t<small>#</small>\n\t\t\t\t<a :href=\"`/evaluation/${evaluation.id}`\" target=\"_blank\">\n\t\t\t\t\t{{ evaluation.id }}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-3\">\n\t\t\t\t<small>Evaluator</small>\n\t\t\t\t<a :href=\"`/profile/${evaluation.evaluator.id}`\" target=\"_blank\">\n\t\t\t\t\t{{ evaluation.evaluator.full_name }}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-3\">\n\t\t\t\t<small>Requested by</small>\n\t\t\t\t<a :href=\"`/profile/${evaluation.requestor.id}`\" target=\"_blank\">\n\t\t\t\t\t{{ evaluation.requestor.full_name }}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-3\">\n\t\t\t\t<small>Form</small>\n\t\t\t\t<a :href=\"`/manage/forms/${evaluation.form.id}`\" target=\"_blank\">\n\t\t\t\t\t{{ evaluation.form.title }}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-2 text-right\"\n\t\t\t\tv-html=\"renderEvaluationStatus(evaluation.status)\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-offset-2 col-md-2\">\n\t\t\t\t<small>Evaluation date</small>\n\t\t\t\t<span class=\"evaluation-date-field\"\n\t\t\t\t\t\t@mouseenter=\"hovering.evaluationDate = true\"\n\t\t\t\t\t\t@mouseleave=\"hovering.evaluationDate = false\">\n\t\t\t\t\t{{ evaluationDate }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-offset-1 col-md-2\">\n\t\t\t\t<small>Requested</small>\n\t\t\t\t<span class=\"evaluation-date-field\"\n\t\t\t\t\t\t@mouseenter=\"hovering.requestDate = true\"\n\t\t\t\t\t\t@mouseleave=\"hovering.requestDate = false\">\n\t\t\t\t\t{{ requestDate }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-offset-1 col-md-2\">\n\t\t\t\t<small>Completed</small>\n\t\t\t\t<span class=\"evaluation-date-field\"\n\t\t\t\t\t\t@mouseenter=\"hovering.completeDate = true\"\n\t\t\t\t\t\t@mouseleave=\"hovering.completeDate = false\">\n\t\t\t\t\t{{ completeDate }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t</li>\n</template>\n\n<script>\nimport moment from 'moment';\n\nimport { renderEvaluationStatus } from '@/modules/datatable-utils.js';\nimport { renderDateRange } from '@/modules/date-utils.js';\n\nexport default {\n\tprops: {\n\t\tevaluation: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\thovering: {\n\t\t\t\tevaluationDate: false,\n\t\t\t\trequestDate: false,\n\t\t\t\tcompleteDate: false\n\t\t\t}\n\t\t};\n\t},\n\tcomputed: {\n\t\tevaluationDate(){\n\t\t\tif(!this.evaluation.evaluation_date_start\n\t\t\t\t\t|| !this.evaluation.evaluation_date_end)\n\t\t\t\treturn '';\n\t\t\t\n\t\t\treturn renderDateRange(this.evaluation.evaluation_date_start,\n\t\t\t\tthis.evaluation.evaluation_date_end, !this.hovering.evaluationDate);\n\t\t},\n\t\trequestDate(){\n\t\t\tif(!this.evaluation.request_date)\n\t\t\t\treturn '';\n\t\t\t\n\t\t\treturn this.hovering.requestDate\n\t\t\t\t? moment(this.evaluation.request_date).format('ll LT')\n\t\t\t\t: moment(this.evaluation.request_date).calendar();\n\t\t},\n\t\tcompleteDate(){\n\t\t\tif(!this.evaluation.complete_date)\n\t\t\t\treturn '';\n\t\t\t\n\t\t\treturn this.hovering.completeDate\n\t\t\t\t? moment(this.evaluation.complete_date).format('ll LT')\n\t\t\t\t: moment(this.evaluation.complete_date).calendar();\n\t\t}\n\t},\n\tmethods: {\n\t\trenderEvaluationStatus\n\t}\n};\n</script>\n\n<style scoped>\n\t.list-group-item .row small {\n\t\tdisplay: block;\n\t}\n\n\t.list-group-item .row a {\n\t\tdisplay: block;\n\t}\n\n\t.evaluation-date-field {\n\t\tcursor: help;\n\t}\n\t\n\t.row + .row {\n\t\tmargin-top: 10px;\n\t}\n\t\n\tsmall {\n\t\tcolor: rgba(0, 0, 0, 0.5);\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/Needs/resources/assets/js/vue-components/Reports/Needs/EvaluationDetailsListItem.vue?d0cdd494","<template>\n\t<div>\n\t\t<div class=\"list-header-controls form-inline\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tSort\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<select class=\"form-control\" v-model=\"sortBy\">\n\t\t\t\t\t\t\t<option v-for=\"field of fields\" :value=\"field\">\n\t\t\t\t\t\t\t\t{{ renderFieldName(field) }}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<span class=\"input-group-btn\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t\t\t\t@click=\"sortOrder = sortOrder === 'asc' ? 'desc' : 'asc'\">\n\t\t\t\t\t\t\t\t<span v-if=\"sortOrder === 'asc'\"\n\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-sort-by-alphabet\"></span>\n\t\t\t\t\t\t\t\t<span v-else\n\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-sort-by-alphabet-alt\"></span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tSearch\n\t\t\t\t\t<input type=\"search\" class=\"form-control\" v-model=\"query\"\n\t\t\t\t\t\tplaceholder=\"Search\" />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div v-if=\"reloadable\" class=\"form-group\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-default labelless-button\"\n\t\t\t\t\t\t@click=\"$emit('reload')\">\n\t\t\t\t\t<span class=\"glyphicon glyphicon-refresh\"></span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"list-container\">\n\t\t\t<slot name=\"header\"></slot>\n\n\t\t\t<ol v-if=\"itemsToShow\" class=\"list\">\n\t\t\t\t<slot v-for=\"item of currentPageItems\" v-bind=\"item\"></slot>\n\t\t\t</ol>\n\t\t\t<p v-else class=\"no-items-text\">\n\t\t\t\tNo items to show\n\t\t\t</p>\n\n\t\t\t<slot name=\"footer\"></slot>\n\t\t</div>\n\t\t<list-paginator v-if=\"paginate\"\n\t\t\tv-model=\"page\" :paginatedItems=\"paginatedItems\"\n\t\t\t:itemsPerPage=\"itemsPerPage\"\n\t\t\t@pageSize=\"itemsPerPage = arguments[0]\" />\n\t</div>\n</template>\n\n<script>\nimport ListPaginator from './ListPaginator.vue';\n\nimport lunr from 'lunr';\n\nimport { snakeCaseToWords } from '@/modules/utils.js';\nimport { sortFunctions } from '@/modules/report-utils.js';\n\nexport default {\n\tprops: {\n\t\tsearchRef: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\tfields: {\n\t\t\ttype: Array,\n\t\t\tdefault() {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\t\titems: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t},\n\t\tfieldAccessors: {\n\t\t\ttype: Object,\n\t\t\trequired: false\n\t\t},\n\t\tdefaultSortBy: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\tdefaultSortOrder: {\n\t\t\ttype: String,\n\t\t\tvalidator(order) {\n\t\t\t\treturn ['asc', 'desc'].includes(order);\n\t\t\t},\n\t\t\tdefault: 'asc'\n\t\t},\n\t\tpaginate: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\treloadable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tsortFunctions: {\n\t\t\ttype: Map,\n\t\t\tdefault(){\n\t\t\t\treturn sortFunctions;\n\t\t\t}\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tquery: null,\n\t\t\tpage: 0,\n\t\t\titemsPerPage: 10,\n\t\t\tsortBy: this.defaultSortBy || this.fields[0],\n\t\t\tsortOrder: this.defaultSortOrder\n\t\t};\n\t},\n\tcomputed: {\n\t\titemMap() {\n\t\t\tlet map = new Map();\n\t\t\tthis.items.map(item => {\n\t\t\t\tmap.set(item.id, item);\n\t\t\t});\n\n\t\t\treturn map;\n\t\t},\n\t\tindex() {\n\t\t\tconst vm = this;\n\n\t\t\treturn lunr(function() {\n\t\t\t\tif (vm.searchRef)\n\t\t\t\t\tthis.ref(vm.searchRef);\n\n\t\t\t\tfor (const field of vm.fields) {\n\t\t\t\t\tlet name, options;\n\t\t\t\t\tif (typeof field === 'string') {\n\t\t\t\t\t\tname = field;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tname = field.name;\n\t\t\t\t\t\toptions = field;\n\t\t\t\t\t}\n\t\t\t\t\tthis.field(name, options);\n\t\t\t\t}\n\n\t\t\t\tfor (const item of vm.items) {\n\t\t\t\t\tif (vm.fieldAccessors) {\n\t\t\t\t\t\tfor (const field in vm.fieldAccessors) {\n\t\t\t\t\t\t\titem[field] = vm.fieldAccessors[field](item, 'search');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.add(item);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tfilteredItems() {\n\t\t\tif (this.query && this.index) {\n\t\t\t\tlet refs = this.index.search(this.query);\n\t\t\t\treturn refs.map(ref => {\n\t\t\t\t\treturn this.itemMap.get(ref.ref);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this.items;\n\t\t},\n\t\tsortedItems() {\n\t\t\tif (this.sortBy && this.sortOrder) {\n\n\t\t\t\treturn sortFunctions.has(this.sortBy)\n\t\t\t\t\t? this.filteredItems.sort(sortFunctions.get(this.sortBy))\n\t\t\t\t\t: this.filteredItems.sort((a, b) => {\n\t\t\t\t\t\tlet aValue;\n\t\t\t\t\t\tlet bValue;\n\n\t\t\t\t\t\tif (this.fieldAccessors && this.sortBy in this.fieldAccessors) {\n\t\t\t\t\t\t\taValue = this.fieldAccessors[this.sortBy](a, 'sort');\n\t\t\t\t\t\t\tbValue = this.fieldAccessors[this.sortBy](b, 'sort');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taValue = a[this.sortBy];\n\t\t\t\t\t\t\tbValue = b[this.sortBy];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Number.isNaN(aValue))\n\t\t\t\t\t\t\taValue = aValue.toUpperCase();\n\n\t\t\t\t\t\tif (Number.isNaN(bValue))\n\t\t\t\t\t\t\tbValue = bValue.toUpperCase();\n\n\t\t\t\t\t\tif (aValue < bValue)\n\t\t\t\t\t\t\treturn this.sortOrder === 'asc'\n\t\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t\t: 1;\n\t\t\t\t\t\tif (aValue > bValue)\n\t\t\t\t\t\t\treturn this.sortOrder === 'asc'\n\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t: -1;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this.filteredItems;\n\t\t},\n\t\tpaginatedItems() {\n\t\t\tif (!this.paginate)\n\t\t\t\treturn this.sortedItems;\n\n\t\t\tlet paginatedItems = [];\n\t\t\tlet items = this.sortedItems.slice();\n\t\t\twhile(items.length > 0)\n\t\t\t\tpaginatedItems.push(items.splice(0, this.itemsPerPage));\n\n\t\t\treturn paginatedItems;\n\t\t},\n\t\tcurrentPageItems() {\n\t\t\tif (!this.paginate)\n\t\t\t\treturn this.sortedItems;\n\n\t\t\treturn this.paginatedItems[this.page];\n\t\t},\n\t\titemsToShow() {\n\t\t\treturn this.filteredItems && this.filteredItems.length > 0;\n\t\t}\n\t},\n\tmethods: {\n\t\trenderFieldName(field) {\n\t\t\tif (field === 'id')\n\t\t\t\treturn 'ID';\n\n\t\t\treturn snakeCaseToWords(field);\n\t\t}\n\t},\n\tcomponents: {\n\t\tListPaginator\n\t}\n};\n</script>\n\n<style scoped>\n\t.list-header-controls {\n\t\ttext-align: right;\n\t}\n\n\t.list-header-controls input[type=\"search\"] {\n\t\twidth: 300px;\n\t\tmax-width: 100%;\n\t}\n\n\t.list-header-controls.form-inline .input-group > .form-control {\n\t\twidth: auto;\n\t}\n\n\t.list-container {\n\t\tmargin: 3em 0;\n\t}\n\n\t.list {\n\t\tpadding: 0;\n\t}\n\n\t.list li {\n\t\tlist-style: none;\n\t}\n\n\t.containing-label {\n\t\ttext-align: left;\n\t}\n\n\t.containing-label > * {\n\t\tdisplay: block;\n\t}\n\n\t.no-items-text {\n\t\tpadding: 0.5em 0;\n\t\tborder: 1px solid rgba(0, 0, 0, 0.15);\n\t\tborder-left: none;\n\t\tborder-right: none;\n\t\ttext-align: center;\n\t\tfont-size: 1.25em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/resources/assets/js/vue-components/ComponentList.vue?bed38d50","<template>\n\t<section class=\"paginator\">\n\t\t<div class=\"form-inline\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tCurrent page:\n\t\t\t\t\t<input type=\"number\" class=\"form-control\" :value=\"value + 1\"\n\t\t\t\t\t\tmin=\"1\" :max=\"paginatedItems.length\"\n\t\t\t\t\t\t@input=\"$emit('input', Number($event.target.value) - 1)\" />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tItems per page:\n\t\t\t\t\t<select class=\"form-control\" :value=\"itemsPerPage\"\n\t\t\t\t\t\t\t@input=\"$emit('pageSize', Number($event.target.value))\">\n\t\t\t\t\t\t<option value=\"5\">5</option>\n\t\t\t\t\t\t<option value=\"10\">10</option>\n\t\t\t\t\t\t<option value=\"20\">20</option>\n\t\t\t\t\t\t<option value=\"50\">50</option>\n\t\t\t\t\t\t<option value=\"100\">100</option>\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t\t<nav v-if=\"itemsPerPage && paginatedItems.length > 1\">\n\t\t\t<div class=\"btn-group\">\n\t\t\t\t<paginator-link :value=\"value - 1\" text=\"← Prev\"\n\t\t\t\t\t:active=\"value === 0\" @click=\"setPage\" />\n\n\t\t\t\t<paginator-link v-for=\"(pageItems, pageNum) of paginatedItems\"\n\t\t\t\t\t:key=\"pageNum\"\n\t\t\t\t\t:value=\"pageNum\"\n\t\t\t\t\t:active=\"pageNum === value\"\n\t\t\t\t\t@click=\"setPage\" />\n\n\t\t\t\t<paginator-link :value=\"value + 1\" text=\"Next →\"\n\t\t\t\t\t:active=\"value === paginatedItems.length - 1\"\n\t\t\t\t\t@click=\"setPage\" />\n\t\t\t</div>\n\t\t</nav>\n\t</section>\n</template>\n\n<script>\nimport PaginatorLink from './PaginatorLink.vue';\n\nexport default {\n\tprops: {\n\t\tvalue: Number,\n\t\titemsPerPage: Number,\n\t\tpaginatedItems: Array\n\t},\n\twatch: {\n\t\titemsPerPage(){\n\t\t\tif(this.value >= this.paginatedItems.length)\n\t\t\t\tthis.setPage(this.paginatedItems.length - 1);\n\t\t}\n\t},\n\tmethods: {\n\t\tsetPage(page){\n\t\t\tthis.$emit('input', page);\n\t\t}\n\t},\n\tcomponents: {\n\t\tPaginatorLink\n\t}\n};\n</script>\n\n<style scoped>\n\t.paginator {\n\t\ttext-align: center;\n\t}\n\n\tnav span {\n\t\tmargin: 0 0.25em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/resources/assets/js/vue-components/ListPaginator.vue?626194f0","<template>\n\t<div class=\"panel panel-default\">\n\t\t<div class=\"panel-heading\">\n\t\t\t<h3 class=\"heading-title\">\n\t\t\t\t{{ title }}\n\t\t\t</h3>\n\t\t</div>\n\t\t<div class=\"panel-body\">\n\t\t\t<section>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"email-to\">To</label>\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<input type=\"text\" id=\"email-to\"\n\t\t\t\t\t\t\tclass=\"form-control appear-not-readonly\"\n\t\t\t\t\t\t\t:value=\"toDisplayValue\" readonly />\n\t\t\t\t\t\t<span v-if=\"Array.isArray(to) && !possibleRecipients\"\n\t\t\t\t\t\t\t\tclass=\"input-group-btn\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t\t\t\t@click=\"show.recipients = !show.recipients\">\n\t\t\t\t\t\t\t\tShow recipients\n\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-triangle-bottom\"></span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span v-if=\"possibleRecipients\" class=\"input-group-btn\">\n\t\t\t\t\t\t\t<show-hide-button class=\"btn btn-default\"\n\t\t\t\t\t\t\t\t\tv-model=\"show.possibleRecipients\">\n\t\t\t\t\t\t\t\trecipients\n\t\t\t\t\t\t\t</show-hide-button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div v-if=\"Array.isArray(to) && !possibleRecipients\"\n\t\t\t\t\t\t\tv-show=\"show.recipients\">\n\t\t\t\t\t\t<ul class=\"list-group\">\n\t\t\t\t\t\t\t<li v-for=\"recipient of to\" class=\"list-group-item\">\n\t\t\t\t\t\t\t\t{{ recipient.full_name || recipient }}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div v-if=\"possibleRecipients\" v-show=\"show.possibleRecipients\">\n\t\t\t\t\t\t<div class=\"well row\">\n\t\t\t\t\t\t\t<template v-if=\"groupRecipients\">\n\t\t\t\t\t\t\t\t<template v-for=\"possibleRecipientGroup of groupedPossibleRecipients\">\n\t\t\t\t\t\t\t\t\t<template v-if=\"possibleRecipientGroup.children && possibleRecipientGroup.children.length > 0\">\n\t\t\t\t\t\t\t\t\t\t<b>{{ possibleRecipientGroup.text }}</b>\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li v-for=\"possibleRecipient of possibleRecipientGroup.children\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label :class=\"{'normal-text-label': !recipientsInclude(possibleRecipient)}\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"to\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:value=\"possibleRecipient\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ possibleRecipient.text || possibleRecipient }}\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li v-for=\"possibleRecipient of possibleRecipients\">\n\t\t\t\t\t\t\t\t\t\t<label :class=\"{'normal-text-label': !recipientsInclude(possibleRecipient)}\">\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"to\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:value=\"possibleRecipient\" />\n\t\t\t\t\t\t\t\t\t\t\t{{ possibleRecipient.full_name || possible.recipient }}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-xs btn-default\"\n\t\t\t\t\t\t\t\t\t@click=\"toggleRecipients\">\n\t\t\t\t\t\t\t\tToggle all\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"email-subject\">Subject</label>\n\t\t\t\t\t<input type=\"text\" id=\"email-subject\" class=\"form-control\"\n\t\t\t\t\t\tv-model=\"subject\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"email-body\">Body</label>\n\t\t\t\t\t<medium-editor v-model=\"body.html\" id=\"email-body\"\n\t\t\t\t\t\t:replacements=\"emailReplacements\" />\n\t\t\t\t</div>\n\n\t\t\t\t<alert-list v-if=\"alerts && alerts.length > 0\" v-model=\"alerts\" />\n\t\t\t</section>\n\t\t</div>\n\t\t<div class=\"panel-footer text-right\">\n\t\t\t<loading-button loading-class=\"btn btn-primary\" :loading=\"sendingEmails\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" @click=\"send\">\n\t\t\t\t\t<span class=\"glyphicon glyphicon-send\"></span>\n\t\t\t\t\tSend emails\n\t\t\t\t</button>\n\t\t\t</loading-button>\n\n\t\t\t<button type=\"button\" class=\"btn btn-default\" @click=\"$emit('close')\">\n\t\t\t\tClose\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\n</template>\n\n<script>\nimport MarkdownIt from 'markdown-it';\n\nimport AlertList from './AlertList.vue';\nimport MediumEditor from './MediumEditor.vue';\nimport ShowHideButton from './ShowHideButton.vue';\nimport LoadingButton from './LoadingButton.vue';\n\nimport { logError } from '@/modules/errors.js';\nimport {\n\tucfirst,\n\tgetFetchHeaders,\n\tgroupUsers,\n\thtmlLabelReplacements\n} from '@/modules/utils.js';\n\nconst md = new MarkdownIt();\n\n// FIXME: Possible recipients with a defaultTo doesn't work\n\nexport default {\n\tprops: {\n\t\tfrom: {\n\t\t\ttype: String,\n\t\t\tdefault: 'admin'\n\t\t},\n\t\ttarget: {\n\t\t\ttype: String,\n\t\t\tdefault: '/emails'\n\t\t},\n\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\tdefault: 'Email editor'\n\t\t},\n\n\t\tdefaultTo: {\n\t\t\tdefault(){\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\t\tdefaultSubject: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\tdefaultBodyMarkdown: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\n\t\tpossibleRecipients: {\n\t\t\ttype: Array,\n\t\t\trequired: false\n\t\t},\n\t\tgroupRecipients: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\temailReplacements: {\n\t\t\ttype: Array,\n\t\t\trequired: false\n\t\t},\n\t\teditToOnSend: {\n\t\t\ttype: Function,\n\t\t\trequired: false\n\t\t},\n\t\tadditionalFields: {\n\t\t\ttype: Object,\n\t\t\trequired: false\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tto: this.defaultTo,\n\t\t\tsubject: this.defaultSubject,\n\t\t\tbody: {\n\t\t\t\tmarkdown: this.defaultBodyMarkdown,\n\t\t\t\thtml: htmlLabelReplacements(md.render(this.defaultBodyMarkdown),\n\t\t\t\t\tthis.emailReplacements)\n\t\t\t},\n\t\t\teditorType: 'medium',\n\n\t\t\tsendingEmails: false,\n\n\t\t\tshow: {\n\t\t\t\trecipients: false,\n\t\t\t\tpossibleRecipients: false\n\t\t\t},\n\n\t\t\talerts: []\n\t\t};\n\t},\n\tcomputed: {\n\t\teditorTypes(){\n\t\t\treturn [\n\t\t\t\t'medium',\n\t\t\t\t'markdown'\n\t\t\t];\n\t\t},\n\t\tgroupedPossibleRecipients(){\n\t\t\treturn groupUsers(this.possibleRecipients);\n\t\t},\n\t\ttoDisplayValue(){\n\t\t\tif (this.possibleRecipients || Array.isArray(this.to))\n\t\t\t\treturn `${this.to ? this.to.length : '0'} recipients`;\n\t\t\tif (typeof this.to === 'string')\n\t\t\t\treturn this.to;\n\t\t\tif (this.to && this.to.full_name && this.to.email)\n\t\t\t\treturn `${this.to.full_name} <${this.to.email}>`;\n\t\t},\n\t\talertTypeClass(){\n\t\t\treturn {\n\t\t\t\t'alert-success': this.alert.type === 'success',\n\t\t\t\t'alert-info': this.alert.type === 'info',\n\t\t\t\t'alert-danger': this.alert.type === 'error'\n\t\t\t};\n\t\t},\n\t\tdefaultBody(){\n\t\t\treturn {\n\t\t\t\tmarkdown: this.defaultBodyMarkdown,\n\t\t\t\thtml: htmlLabelReplacements(md.render(this.defaultBodyMarkdown),\n\t\t\t\t\tthis.emailReplacements)\n\t\t\t};\n\t\t}\n\t},\n\twatch: {\n\t\tdefaultTo(defaultTo){\n\t\t\tthis.to = defaultTo;\n\t\t},\n\t\tdefaultSubject(defaultSubject){\n\t\t\tthis.subject = defaultSubject;\n\t\t},\n\t\tdefaultBody(defaultBody){\n\t\t\tthis.body = defaultBody;\n\t\t}\n\t},\n\tmethods: {\n\t\trecipientsInclude(recipient) {\n\t\t\tif (Array.isArray(this.to)) {\n\t\t\t\treturn this.to.includes(recipient);\n\t\t\t} else {\n\t\t\t\treturn this.to === recipient;\n\t\t\t}\n\t\t},\n\t\ttoggleRecipients() {\n\t\t\tif (Array.isArray(this.to) && this.to.length === 0)\n\t\t\t\tthis.to = this.possibleRecipients.slice();\n\t\t\telse\n\t\t\t\tthis.to = [];\n\t\t},\n\t\tsend(){\n\t\t\tthis.sendingEmails = true;\n\n\t\t\tlet body = {\n\t\t\t\tsubject: this.subject,\n\t\t\t\tbody: this.body.html,\n\t\t\t\tto: this.editToOnSend\n\t\t\t\t\t? this.editToOnSend(this.to)\n\t\t\t\t\t: this.to\n\t\t\t};\n\n\t\t\tif (this.additionalFields)\n\t\t\t\tbody = Object.assign(body, this.additionalFields);\n\n\t\t\tlet error = false;\n\t\t\tif (!body.to || (Array.isArray(body.to) && body.to.length === 0)){\n\t\t\t\tthis.alerts.push({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\thtml: `Please select a recipient.`\n\t\t\t\t});\n\t\t\t\terror = true;\n\t\t\t}\n\t\t\tif (!body.subject){\n\t\t\t\tthis.alerts.push({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\thtml: `Please enter a subject.`\n\t\t\t\t});\n\t\t\t\terror = true;\n\t\t\t}\n\t\t\tif (!body.body){\n\t\t\t\tthis.alerts.push({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\thtml: `Please enter a message body.`\n\t\t\t\t});\n\t\t\t\terror = true;\n\t\t\t}\n\t\t\tif (error)\n\t\t\t\treturn;\n\n\t\t\tfetch(this.target, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: getFetchHeaders(),\n\t\t\t\tcredentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(body)\n\t\t\t}).then(response => {\n\t\t\t\tif (response.ok)\n\t\t\t\t\treturn response.json();\n\t\t\t\telse\n\t\t\t\t\tthrow new Error('There was a problem sending the emails');\n\t\t\t}).then(response => {\n\t\t\t\tif (response.success){\n\t\t\t\t\tthis.alerts.push({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttext: `${response.success.length} emails successfully sent.`\n\t\t\t\t\t});\n\t\t\t\t\tif (Array.isArray(this.to))\n\t\t\t\t\t\tthis.to = this.to.filter(id => !response.success.includes(id));\n\t\t\t\t}\n\n\n\t\t\t\tif (response.error && response.error.length > 0 && this.possibleRecipients){\n\t\t\t\t\tlet userNames = response.error\n\t\t\t\t\t\t.map(errorRecipient => {\n\t\t\t\t\t\t\tlet id = (Number.isNaN(errorRecipient))\n\t\t\t\t\t\t\t\t? errorRecipient.id\n\t\t\t\t\t\t\t\t: errorRecipient;\n\t\t\t\t\t\t\treturn this.possibleRecipients.find(user => user.id === Number(id)).full_name;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tlogError(new Error('Error sending emails to the following users: ' + JSON.stringify(userNames)));\n\t\t\t\t\tthis.alerts.push({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\thtml: `Error sending emails to the following users: <ul>\n\t\t\t\t\t\t\t${userNames.map(name => `<li>${name}</li>`).join('')}\n\t\t\t\t\t\t</ul>`\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.sendingEmails = false;\n\t\t\t}).catch(err => {\n\t\t\t\tlogError(err);\n\t\t\t\tthis.alerts.push({\n\t\t\t\t\ttext: err.message,\n\t\t\t\t\ttype: 'error'\n\t\t\t\t});\n\t\t\t\tthis.sendingEmails = false;\n\t\t\t});\n\t\t},\n\t\tucfirst\n\t},\n\tcomponents: {\n\t\tAlertList,\n\t\tMediumEditor,\n\t\tShowHideButton,\n\t\tLoadingButton\n\t}\n};\n</script>\n\n<style scoped>\n\tul {\n\t\tcolumns: 150px 3;\n\t}\n\n\tfieldset label {\n\t\tmargin: 0 1em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/resources/assets/js/vue-components/EmailEditor.vue?39ad4b81","<template>\n\t<div ref=\"container\">\n\t\t<div :id=\"id\" ref=\"editor\" v-once v-html=\"value\"></div>\n\t\t<div class=\"row\">\n\t\t\t<small class=\"col-md-8\">\n\t\t\t\tSelect some text to show controls.\n\t\t\t\tCursor position gets a little wonky when a replacement is made,\n\t\t\t\tsorry about that.\n\t\t\t</small>\n\t\t\t<div class=\"col-md-4\">\n\t\t\t\t<replacement-list v-if=\"replacements\"\n\t\t\t\t\t:replacements=\"replacements\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport MediumEditor from 'medium-editor';\nimport 'medium-editor/dist/css/medium-editor.css';\nimport 'medium-editor/dist/css/themes/bootstrap.css';\n\nimport debounce from 'lodash/debounce';\n\nimport ReplacementList from './ReplacementList.vue';\n\nimport { htmlLabelReplacements } from '@/modules/utils.js';\n\nexport default {\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tid: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\treplacements: {\n\t\t\ttype: Array,\n\t\t\trequired: false\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\teditor: null\n\t\t};\n\t},\n\tmounted(){\n\t\tthis.editor = new MediumEditor(this.$refs.editor, {\n\t\t\tautoLink: true,\n\t\t\ttoolbar: {\n\t\t\t\tbuttons: [\n\t\t\t\t\t'bold',\n\t\t\t\t\t'italic',\n\t\t\t\t\t'underline',\n\t\t\t\t\t'anchor',\n\t\t\t\t\t'orderedlist',\n\t\t\t\t\t'unorderedlist',\n\t\t\t\t\t'removeFormat'\n\t\t\t\t]\n\t\t\t},\n\t\t\tpaste: {\n\t\t\t\tcleanPastedHTML: false\n\t\t\t}\n\t\t});\n\t\tthis.editor.subscribe('editableInput', debounce(() => {\n\t\t\tlet html = this.editor.getContent();\n\t\t\t\n\t\t\tthis.$emit('input', htmlLabelReplacements(html, this.replacements));\n\t\t}, 500));\n\t\t\n\t\tthis.$refs.container.querySelector('.medium-editor-element')\n\t\t\t.classList.add('form-control');\n\t},\n\t\n\twatch: {\n\t\tvalue(value){\n\t\t\tif(value !== this.editor.getContent()){\n\t\t\t\tthis.editor.saveSelection();\n\t\t\t\tthis.editor.setContent(value);\n\t\t\t\tthis.editor.restoreSelection();\n\t\t\t}\n\t\t}\n\t},\n\t\n\tdestroyed(){\n\t\tthis.editor.unsubscribe();\n\t\tthis.editor.destroy();\n\t},\n\t\n\tcomponents: {\n\t\tReplacementList\n\t}\n};\n</script>\n\n<style scoped>\n\ttextarea {\n\t\tdisplay: none;\n\t}\n\t\n\t.medium-editor-element {\n\t\tfont-size: 1.15em;\n\t}\n\t\n\t.medium-editor-element:focus {\n\t\toutline: none;\n\t}\n\t\n\t.form-control {\n\t\theight: auto !important;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/resources/assets/js/vue-components/MediumEditor.vue?65006084","<template>\n\t<aside>\n\t\t<show-hide-button v-model=\"show.replacements\"\n\t\t\t\tclass=\"btn btn-default btn-xs\">\n\t\t\tReplacements:\n\t\t</show-hide-button>\n\t\t<ul v-show=\"show.replacements\">\n\t\t\t<li v-for=\"replacement of replacements\">\n\t\t\t\t[[{{ replacement }}]]\n\t\t\t</li>\n\t\t</ul>\n\t</aside>\n</template>\n\n<script>\nimport ShowHideButton from './ShowHideButton.vue';\n\nexport default {\n\tprops: {\n\t\treplacements: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tshow: {\n\t\t\t\treplacements: false\n\t\t\t}\n\t\t};\n\t},\n\tcomponents: {\n\t\tShowHideButton\n\t}\n};\n</script>\n\n<style scoped>\n\t.btn {\n\t\tmargin-top: 1px;\n\t}\n\n\taside {\n\t\tfont-size: 0.8em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/resources/assets/js/vue-components/ReplacementList.vue?6173db7f","<template>\n\t<div>\n\t\t<div class=\"container body-block reports-selector\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>\n\t\t\t\t\tMerit report type\n\t\t\t\t</legend>\n\t\t\t\t<router-link v-for=\"type of reportTypes\" :key=\"type\"\n\t\t\t\t\t\t:to=\"`/faculty-merit/${type}`\"\n\t\t\t\t\t\tclass=\"report-type-option btn btn-default\"\n\t\t\t\t\t\tactive-class=\"disabled\">\n\t\t\t\t\t{{ kebabCaseToWords(type) }}\n\t\t\t\t</router-link>\n\t\t\t</fieldset>\n\t\t</div>\n\n\t\t<router-view></router-view>\n\t</div>\n</template>\n\n<script>\nimport { kebabCaseToWords } from '@/modules/utils.js';\n\nexport default {\n\tprops: {\n\t\treportTypes: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tmethods: {\n\t\tkebabCaseToWords\n\t}\n};\n</script>\n\n<style scoped>\n\t.report-type-option {\n\t\tmargin: 0 1em;\n\t}\n\n\t@media print {\n\t\t.reports-selector {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/resources/assets/js/vue-components/Reports/FacultyMeritReport.vue?10c841d6","<template>\n\t<div>\n\t\t<div class=\"container body-block\">\n\t\t\t<form @submit=\"handleSubmit\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<validated-form-group class=\"col-xs-12 files-container\"\n\t\t\t\t\t\t\t:errors=\"errors\" prop=\"reportFiles\">\n\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\tEgress report files (CSV, multiple allowed)\n\t\t\t\t\t\t\t<input ref=\"egressFileInput\"\n\t\t\t\t\t\t\t\ttype=\"file\" class=\"form-control\"\n\t\t\t\t\t\t\t\taccept=\".csv\"\n\t\t\t\t\t\t\t\tname=\"egressFiles[]\"\n\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t@change=\"handleEgressFilesChange\" />\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-sm btn-default\"\n\t\t\t\t\t\t\t\t\t@click=\"handleClearEgressFileInput\">\n\t\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\tCHW trainee report files (CSV, multiple allowed)\n\t\t\t\t\t\t\t<input ref=\"chwTraineeFileInput\"\n\t\t\t\t\t\t\t\ttype=\"file\" class=\"form-control\"\n\t\t\t\t\t\t\t\taccept=\".csv\"\n\t\t\t\t\t\t\t\tname=\"chwTraineeFiles[]\"\n\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t@change=\"handleChwTraineeFilesChange\" />\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-sm btn-default\"\n\t\t\t\t\t\t\t\t\t@click=\"handleClearChwTraineeFileInput\">\n\t\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</validated-form-group>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<validated-form-group class=\"col-sm-6\"\n\t\t\t\t\t\t\t:errors=\"errors\" prop=\"userType\">\n\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\tGroup by\n\t\t\t\t\t\t\t<select class=\"form-control\" name=\"userType\"\n\t\t\t\t\t\t\t\t\tv-model=\"userType\">\n\t\t\t\t\t\t\t\t<option v-for=\"type of userTypes\" :value=\"type\">\n\t\t\t\t\t\t\t\t\t{{ ucfirst(type) }}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</validated-form-group>\n\t\t\t\t\t<validated-form-group class=\"col-sm-6\"\n\t\t\t\t\t\t\t:errors=\"errors\" prop=\"maxPairs\">\n\t\t\t\t\t\t<div class=\"panel panel-default\">\n\t\t\t\t\t\t\t<div class=\"panel-heading\">\n\t\t\t\t\t\t\t\t<span class=\"panel-title\">\n\t\t\t\t\t\t\t\t\tMaximum number of pairs per user\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t\t\t<input type=\"number\"\n\t\t\t\t\t\t\t\t\t:disabled=\"maxPairs === null\"\n\t\t\t\t\t\t\t\t\tclass=\"form-control\" min=\"0\"\n\t\t\t\t\t\t\t\t\tv-model=\"maxPairs\" />\n\t\t\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\t\t\tUnlimited\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" :checked=\"maxPairs === null\"\n\t\t\t\t\t\t\t\t\t\t@change=\"handleUnlimitedPairsChange\" />\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</validated-form-group>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<validated-form-group class=\"col-sm-4\" :errors=\"errors\" prop=\"minCases\">\n\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\tMinimum cases together\n\t\t\t\t\t\t\t<input type=\"number\" class=\"form-control\" min=\"0\"\n\t\t\t\t\t\t\t\tname=\"minCases\" v-model=\"minCases\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</validated-form-group>\n\t\t\t\t\t<validated-form-group class=\"col-sm-4\" :errors=\"errors\" prop=\"minHours\">\n\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\tMinimum hours together\n\t\t\t\t\t\t\t<input type=\"number\" class=\"form-control\" min=\"0\"\n\t\t\t\t\t\t\t\tname=\"minHours\" v-model=\"minHours\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</validated-form-group>\n\t\t\t\t\t<validated-form-group class=\"col-sm-4\" :errors=\"errors\" prop=\"minMinutes\">\n\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\tMinimum minutes together\n\t\t\t\t\t\t\t<input type=\"number\" class=\"form-control\" min=\"0\" max=\"59\"\n\t\t\t\t\t\t\t\tname=\"minMinutes\" v-model=\"minMinutes\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</validated-form-group>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"submit-container text-center\">\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-lg btn-primary\"\n\t\t\t\t\t\t\t:disabled=\"!valid || processing\">\n\t\t\t\t\t\t{{ processing ? 'Processing report...' : 'Run report' }}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t<alert-list v-model=\"alerts\" />\n\t\t</div>\n\n\t\t<div v-if=\"overlapsToSend && overlapsToSend.length > 0\"\n\t\t\t\tclass=\"container body-block\">\n\n\t\t\t<div class=\"panel panel-default\">\n\t\t\t\t<div class=\"panel-heading\">\n\t\t\t\t\t<span class=\"panel-title\">\n\t\t\t\t\t\t{{ overlapsToSend.length }} reports selected\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li v-for=\"overlapToSend of overlapsToSend\">\n\t\t\t\t\t\t\t{{ overlapToSend[reportUserType].full_name }}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"panel-footer text-center\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t\t@click=\"deselectAllOverlaps\">\n\t\t\t\t\t\t<span class=\"glyphicon glyphicon-remove\"></span>\n\t\t\t\t\t\tClear selection\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"form\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<validated-form-group class=\"col-sm-6\" :errors=\"errors\"\n\t\t\t\t\t\t\tprop=\"emailSubject\">\n\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\tEmail subject\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"Resident pairing report\"\n\t\t\t\t\t\t\t\tv-model=\"emailSubject\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</validated-form-group>\n\t\t\t\t\t<validated-form-group class=\"col-sm-6\" :errors=\"errors\"\n\t\t\t\t\t\t\tprop=\"periodDisplay\">\n\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\tTime period display\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"'the past month', 'July' (displayed after the word 'for')\"\n\t\t\t\t\t\t\t\tv-model=\"periodDisplay\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</validated-form-group>\n\t\t\t\t\t<validated-form-group class=\"col-sm-12\" :errors=\"errors\"\n\t\t\t\t\t\t\tprop=\"reportDates\">\n\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\tReport dates (optional)\n\t\t\t\t\t\t\t<clearable-date\n\t\t\t\t\t\t\t\tinput-class=\"form-control appear-not-readonly\"\n\t\t\t\t\t\t\t\t:options=\"{mode: 'range'}\"\n\t\t\t\t\t\t\t\tv-model=\"reportDatesStr\"\n\t\t\t\t\t\t\t\t@change=\"handleReportDatesChange\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</validated-form-group>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"customizeMessageText\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<validated-form-group class=\"col-sm-12\"\n\t\t\t\t\t\t\t\t:errors=\"customMessageErrors\"\n\t\t\t\t\t\t\t\tprop=\"intro\">\n\t\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\t\tIntroduction\n\t\t\t\t\t\t\t\t<markdown-editor :placeholder=\"messageDefaults.intro\"\n\t\t\t\t\t\t\t\t\tv-model=\"customMessage.intro\"\n\t\t\t\t\t\t\t\t\t@html=\"customMessageHtml.intro = arguments[0]\" />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</validated-form-group>\n\t\t\t\t\t\t<validated-form-group class=\"col-sm-12\"\n\t\t\t\t\t\t\t\t:errors=\"customMessageErrors\"\n\t\t\t\t\t\t\t\tprop=\"successLead\">\n\t\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\t\tReport list lead\n\t\t\t\t\t\t\t\t<markdown-editor :placeholder=\"messageDefaults.successLead\"\n\t\t\t\t\t\t\t\t\tv-model=\"customMessage.successLead\"\n\t\t\t\t\t\t\t\t\t@html=\"customMessageHtml.successLead = arguments[0]\" />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</validated-form-group>\n\t\t\t\t\t\t<validated-form-group class=\"col-sm-12\"\n\t\t\t\t\t\t\t\t:errors=\"customMessageErrors\"\n\t\t\t\t\t\t\t\tprop=\"closing\">\n\t\t\t\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\t\t\t\tClosing\n\t\t\t\t\t\t\t\t<markdown-editor :placeholder=\"messageDefaults.closing\"\n\t\t\t\t\t\t\t\t\tv-model=\"customMessage.closing\"\n\t\t\t\t\t\t\t\t\t@html=\"customMessageHtml.closing = arguments[0]\" />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</validated-form-group>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"panel panel-default\">\n\t\t\t\t\t\t<div class=\"panel-heading\">\n\t\t\t\t\t\t\t<span class=\"panel-title\">\n\t\t\t\t\t\t\t\tFull message example\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"panel-body message-example-body\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tHello Dr\n\t\t\t\t\t\t\t\t<span class=\"label label-info\">\n\t\t\t\t\t\t\t\t\t{{ ucfirst(userType) }}\n\t\t\t\t\t\t\t\t</span>!\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div v-html=\"customMessageHtml.intro\n\t\t\t\t\t\t\t\t|| `<p>${messageDefaults.intro}</p>`\"></div>\n\n\t\t\t\t\t\t\t<div v-html=\"customMessageHtml.successLead\n\t\t\t\t\t\t\t\t|| `<p>${messageDefaults.successLead}</p>`\"></div>\n\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t<li v-for=\"pairing of examplePairings\">\n\t\t\t\t\t\t\t\t\t<b>{{ pairing.name }}</b>:\n\t\t\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\t\t\t{{ pairing.numCases }}\n\t\t\t\t\t\t\t\t\t\tcase{{ pairing.numCases === 1 ? '' : 's' }}\n\t\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\t\ttogether totalling\n\t\t\t\t\t\t\t\t\t<i>{{ pairing.totalTime }}</i>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ol>\n\n\n\t\t\t\t\t\t\t<div v-html=\"customMessageHtml.closing\n\t\t\t\t\t\t\t\t|| `<p>${messageDefaults.closing}</p>`\"></div>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tThank you!\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"text-center\">\n\t\t\t\t<label>\n\t\t\t\t\tCustomize message text\n\t\t\t\t\t<input type=\"checkbox\" v-model=\"customizeMessageText\" />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"text-center\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-info\"\n\t\t\t\t\t\t:disabled=\"!sendReportValid\"\n\t\t\t\t\t\t@click=\"sendReports\">\n\t\t\t\t\t<span class=\"glyphicon glyphicon-send\"></span>\n\t\t\t\t\tSend reports\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div v-if=\"overlaps\" class=\"container body-block\">\n\t\t\t<h2>\n\t\t\t\tOverlaps grouped by\n\t\t\t\t{{ reportUserType }}\n\t\t\t</h2>\n\t\t\t<div class=\"panel panel-default\">\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-info\"\n\t\t\t\t\t\t\t@click=\"selectAllOverlaps\">\n\t\t\t\t\t\t<span class=\"glyphicon glyphicon-send\"></span>\n\t\t\t\t\t\tSelect all\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<component-list :items=\"overlaps\"\n\t\t\t\t\t:fields=\"overlapsFields\"\n\t\t\t\t\t:fieldAccessors=\"overlapsFieldAccessors\">\n\t\t\t\t<template slot-scope=\"item\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-xs-1\">\n\t\t\t\t\t\t\t<label title=\"Send report\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t\t\t\t:value=\"item\"\n\t\t\t\t\t\t\t\t\tv-model=\"overlapsToSend\" />\n\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-send\"></span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-xs-11\">\n\t\t\t\t\t\t\t<overlap-list-item\n\t\t\t\t\t\t\t\t:overlap=\"item\"\n\t\t\t\t\t\t\t\t:user-type=\"reportUserType\"\n\t\t\t\t\t\t\t\t:subject-type=\"subjectType\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</component-list>\n\t\t</div>\n\t</div>\n</template>\n\n<style>\n\t.message-example-body {\n\t\tpadding: 2em;\n\t}\n\n\t.message-example-body .panel {\n\t\tmargin: 1em 0;\n\t}\n\n\t.files-container label {\n\t\tmargin: 1em 0;\n\t}\n\n\t.containing-label small {\n\t\tfont-weight: normal;\n\t}\n</style>\n\n<script>\nimport delve from 'dlv';\n\nimport HasAlerts from '@/vue-mixins/HasAlerts.js';\n\n\nimport ComponentList from '@/vue-components/ComponentList.vue';\nimport ValidatedFormGroup from '@/vue-components/ValidatedFormGroup.vue';\nimport ClearableDate from '@/vue-components/ClearableDate.vue';\nimport MarkdownEditor from '@/vue-components/MarkdownEditor.vue';\n\nimport OverlapListItem from './OverlapListItem.vue';\n\nimport { handleError } from '@/modules/errors.js';\nimport { isoDateString } from '@/modules/date-utils.js';\nimport {\n\tfetchConfig,\n\tucfirst,\n\tjsonOrThrow\n} from '@/modules/utils.js';\n\nexport default {\n\tmixins: [\n\t\tHasAlerts\n\t],\n\tdata() {\n\t\treturn {\n\t\t\tegressFiles: null,\n\t\t\tchwTraineeFiles: null,\n\t\t\tuserType: 'faculty',\n\t\t\tminCases: 0,\n\t\t\tminHours: 0,\n\t\t\tminMinutes: 30,\n\t\t\tmaxPairs: null,\n\t\t\tprocessing: false,\n\n\t\t\temailSubject: '',\n\t\t\tperiodDisplay: '',\n\t\t\treportDatesStr: '',\n\t\t\treportDates: null,\n\n\t\t\treportUserType: null,\n\t\t\toverlaps: null,\n\n\t\t\toverlapsToSend: [],\n\n\t\t\tcustomizeMessageText: false,\n\t\t\tcustomMessage: {\n\t\t\t\tintro: '',\n\t\t\t\tsuccessLead: '',\n\t\t\t\temptyMessage: '',\n\t\t\t\tclosing: ''\n\t\t\t},\n\t\t\tcustomMessageHtml: {\n\t\t\t\tintro: null,\n\t\t\t\tsuccessLead: null,\n\t\t\t\temptyMessage: null,\n\t\t\t\tclosing: null\n\t\t\t}\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tuserTypes() {\n\t\t\treturn [\n\t\t\t\t'faculty',\n\t\t\t\t'resident'\n\t\t\t];\n\t\t},\n\t\tsubjectType() {\n\t\t\treturn this.reportUserType === 'faculty'\n\t\t\t\t? 'resident'\n\t\t\t\t: 'faculty';\n\t\t},\n\t\toverlapsFields() {\n\t\t\treturn this.reportUserType === 'faculty'\n\t\t\t\t? [\n\t\t\t\t\t'faculty_name'\n\t\t\t\t]\n\t\t\t\t: [\n\t\t\t\t\t'resident_name'\n\t\t\t\t];\n\t\t},\n\t\toverlapsFieldAccessors() {\n\t\t\treturn this.reportUserType === 'faculty'\n\t\t\t\t? {\n\t\t\t\t\tfaculty_name: overlap => overlap.faculty.full_name,\n\t\t\t\t\tid: overlap => overlap.faculty.id\n\t\t\t\t}\n\t\t\t\t: {\n\t\t\t\t\tresident_name: overlap => overlap.resident.full_name,\n\t\t\t\t\tid: overlap => overlap.resident.id\n\t\t\t\t};\n\t\t},\n\t\terrors() {\n\t\t\tconst map = new Map();\n\n\t\t\tif (\n\t\t\t\t!delve(this, 'egressFiles.length')\n\t\t\t\t&& !delve(this, 'chwTraineeFiles.length')\n\t\t\t) {\n\t\t\t\tmap.set('reportFiles', 'Please select at least one report CSV file');\n\t\t\t}\n\n\t\t\tif (!this.userTypes.includes(this.userType)) {\n\t\t\t\tmap.set('userType', 'Invalid selection');\n\t\t\t}\n\n\t\t\tconst numProps = [\n\t\t\t\t'minCases',\n\t\t\t\t'minHours',\n\t\t\t\t'minMinutes'\n\t\t\t];\n\t\t\tfor (const prop of numProps) {\n\t\t\t\tif (Number.isNaN(Number(this[prop]))) {\n\t\t\t\t\tmap.set(prop, 'Must be a number');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.maxPairs !== null && Number.isNaN(Number(this.maxPairs))) {\n\t\t\t\tmap.set('maxPairs', 'Must be a number or unlimited');\n\t\t\t}\n\n\t\t\treturn map;\n\t\t},\n\t\tvalid() {\n\t\t\treturn Array.from(this.errors.keys()).length === 0;\n\t\t},\n\t\tsendReportErrors() {\n\t\t\tconst map = new Map();\n\n\t\t\tconst stringProps = [\n\t\t\t\t'emailSubject',\n\t\t\t\t'periodDisplay'\n\t\t\t];\n\t\t\tfor (const prop of stringProps) {\n\t\t\t\tif (!this[prop]) {\n\t\t\t\t\tmap.set(prop, 'Please enter a value');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn map;\n\t\t},\n\t\tsendReportValid() {\n\t\t\treturn Array.from(this.sendReportErrors.keys()).length === 0;\n\t\t},\n\t\tmessageDefaults() {\n\t\t\tconst stripWhitespace = s => s.replace(/\\s+/g, ' ');\n\t\t\treturn this.userType === 'resident'\n\t\t\t\t? {\n\t\t\t\t\tintro: stripWhitespace(`In an attempt to provide you more feedback and make it simpler\n\t\t\t\t\t\tfor evaluators to complete evaluations, we will be providing a periodic\n\t\t\t\t\t\treport of the faculty we believe you worked with the most.`),\n\t\t\t\t\tsuccessLead: stripWhitespace(`Based on our records, we've selected the following faculty as top\n\t\t\t\t\t\tcandidates to provide evaluations for ${this.periodDisplay || '(time period display)'}.\n\t\t\t\t\t\tPlease use this as a reference to request evaluations and to complete evaluations of faculty.`),\n\t\t\t\t\temptyMessage: stripWhitespace(`Unfortunately, we weren't able to come up with a list of faculty\n\t\t\t\t\t\tfor you this time. We're sorry about that!\n\n\t\t\t\t\t\tPlease request evaluations from faculty members that you worked with.`),\n\t\t\t\t\tclosing: ''\n\t\t\t\t}\n\t\t\t\t: {\n\t\t\t\t\tintro: stripWhitespace(`In an attempt to provide more feedback to our residents and make it simpler\n\t\t\t\t\t\tfor you to complete evaluations, we will be providing a periodic report of\n\t\t\t\t\t\tthe residents we believe you worked with the most.`),\n\t\t\t\t\tsuccessLead: stripWhitespace(`Based on our records, we've selected the following residents as top\n\t\t\t\t\t\tcandidates for evaluation for ${this.periodDisplay || '(time period display)'}.\n\t\t\t\t\t\tPlease use this as a reference to complete trainee evaluations.`),\n\t\t\t\t\temptyMessage: stripWhitespace(`Unfortunately, we weren't able to come up with a list of residents\n\t\t\t\t\t\tfor you this time. We're sorry about that!\n\n\t\t\t\t\t\tPlease complete evaluations for the residents that you worked with.`),\n\t\t\t\t\tclosing: ''\n\t\t\t\t};\n\t\t},\n\t\tcustomMessageErrors() {\n\t\t\tconst map = new Map();\n\n\t\t\t// Nothing to do right now\n\n\t\t\treturn map;\n\t\t},\n\t\texamplePairings() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tname: 'Jones, Joseph',\n\t\t\t\t\tnumCases: 25,\n\t\t\t\t\ttotalTime: '1 day, 14 hours, 32 minutes'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Smith, Deborah',\n\t\t\t\t\tnumCases: 17,\n\t\t\t\t\ttotalTime: '22 hours, 54 minutes'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Lopez, George',\n\t\t\t\t\tnumCases: 8,\n\t\t\t\t\ttotalTime: '5 hours, 19 minutes'\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t},\n\n\twatch: {\n\t\tcustomizeMessageText(customizeMessageText) {\n\t\t\tif (!customizeMessageText) {\n\t\t\t\tthis.customMessageHtml = {\n\t\t\t\t\tintro: null,\n\t\t\t\t\tsuccessLead: null,\n\t\t\t\t\temptyMessage: null,\n\t\t\t\t\tclosing: null\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t},\n\n\tmethods: {\n\t\tucfirst,\n\t\thandleEgressFilesChange(event) {\n\t\t\tthis.egressFiles = event.target.files;\n\t\t},\n\t\thandleChwTraineeFilesChange(event) {\n\t\t\tthis.chwTraineeFiles = event.target.files;\n\t\t},\n\t\thandleClearEgressFileInput(event) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.$refs.egressFileInput.value = null;\n\t\t\tthis.egressFiles = null;\n\t\t},\n\t\thandleClearChwTraineeFileInput(event) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.$refs.chwTraineeFileInput.value = null;\n\t\t\tthis.chwTraineeFiles = null;\n\t\t},\n\t\thandleUnlimitedPairsChange(event) {\n\t\t\tif (event.target.checked) {\n\t\t\t\tthis.maxPairs = null;\n\t\t\t} else {\n\t\t\t\tthis.maxPairs = 3;\n\t\t\t}\n\t\t},\n\t\thandleReportDatesChange([dates]) {\n\t\t\tthis.reportDates = dates;\n\t\t},\n\t\tselectAllOverlaps() {\n\t\t\tthis.overlapsToSend = this.overlaps.slice();\n\t\t},\n\t\tdeselectAllOverlaps() {\n\t\t\tthis.overlapsToSend = [];\n\t\t},\n\t\thandleSubmit(event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.processing = true;\n\n\t\t\tif (!this.valid) {\n\t\t\t\tthis.alerts.push({\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\ttext: 'Please fix all input errors'\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.overlaps = null;\n\t\t\tthis.overlapsToSend = [];\n\t\t\tthis.reportUserType = this.userType;\n\n\t\t\tconst body = new FormData(event.target);\n\t\t\tconst quoteUnlimitedMaxPairsUnquote = 99999;\n\n\t\t\tbody.set(\n\t\t\t\t'maxPairs',\n\t\t\t\tthis.maxPairs === null\n\t\t\t\t\t? quoteUnlimitedMaxPairsUnquote\n\t\t\t\t\t: this.maxPairs\n\t\t\t);\n\n\t\t\tfetch('/reports/egress-pairings/overlaps', {\n\t\t\t\t...fetchConfig({contentType: null}),\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody\n\t\t\t}).then(jsonOrThrow).then(overlaps => {\n\t\t\t\tthis.overlaps = overlaps;\n\t\t\t\tthis.overlapsToSend = [];\n\t\t\t}).catch(err => {\n\t\t\t\thandleError(err, this, 'There was a problem fetching the report');\n\t\t\t}).finally(() => {\n\t\t\t\tthis.processing = false;\n\t\t\t});\n\t\t},\n\t\tsendReports() {\n\t\t\tif (\n\t\t\t\t!this.sendReportValid\n\t\t\t\t|| !this.overlapsToSend\n\t\t\t\t|| this.overlapsToSend.length === 0\n\t\t\t)\n\t\t\t\treturn;\n\n\t\t\tfetch('/reports/egress-pairings/send-reports', {\n\t\t\t\t...fetchConfig(),\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\toverlaps: this.overlapsToSend,\n\t\t\t\t\tuserType: this.reportUserType,\n\t\t\t\t\tsubjectType: this.subjectType,\n\t\t\t\t\temailSubject: this.emailSubject,\n\t\t\t\t\tperiodDisplay: this.periodDisplay,\n\t\t\t\t\treportDates: this.reportDates.map(isoDateString),\n\t\t\t\t\t...this.customMessageHtml\n\t\t\t\t})\n\t\t\t}).then(jsonOrThrow).then(response => {\n\t\t\t\tif (response.successful) {\n\t\t\t\t\tthis.alerts.push({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttext: `${response.successful} reports sent successfully`\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (response.errors && Array.isArray(response.errors) && response.errors.length > 0) {\n\t\t\t\t\t\tconst lis = response.errors.map(overlap =>\n\t\t\t\t\t\t\toverlap[this.reportUserType].full_name\n\t\t\t\t\t\t).map(name => `<li>${name}</li>`);\n\t\t\t\t\t\tthis.alerts.push({\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\thtml: `\n\t\t\t\t\t\t\t\t<strong>Error:</strong>\n\t\t\t\t\t\t\t\tFailed to send reports to the following users:\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t${lis}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t`\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\thandleError(err, this, 'There was a problem displaying unsuccessful reports');\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\thandleError(err, this, 'There was a problem sending the reports');\n\t\t\t});\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tClearableDate,\n\t\tComponentList,\n\t\tValidatedFormGroup,\n\t\tOverlapListItem,\n\t\tMarkdownEditor\n\t}\n};\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/EgressPairings/resources/assets/js/vue-components/Reports/EgressPairings/EgressPairings.vue?26c86737","<template>\n\t<div>\n\t\t<section @mouseenter=\"mouseIn = true\" @mouseleave=\"mouseIn = false\">\n\t\t\t<textarea class=\"form-control\" :class=\"{'editor-shown': showEditor}\"\n\t\t\t\t\t:id=\"id\" rows=\"15\" tabindex=\"0\"\n\t\t\t\t\t:placeholder=\"placeholder\"\n\t\t\t\t\t:value=\"value\"\n\t\t\t\t\t@focusout=\"focused = false\" @focusin=\"focused = true\"\n\t\t\t\t\t@input=\"input\" ref=\"editor\"></textarea>\n\t\t\t<div v-show=\"!showEditor\" v-html=\"html || placeholder\"\n\t\t\t\tclass=\"form-control markdown-editor-rendered-html-container\"\n\t\t\t\t:class=\"{'displaying-placeholder': !html}\">\n\t\t\t</div>\n\t\t</section>\n\t\t<div class=\"row\">\n\t\t\t<small class=\"col-md-8\" v-if=\"showHelp\">\n\t\t\t\tSupports\n\t\t\t\t<a href=\"http://commonmark.org/help/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\tmarkdown\n\t\t\t\t\t<img src=\"/img/commonmark.png\" width=\"24\" height=\"24\"\n\t\t\t\t\t\talt=\"Commonmark\" />\n\t\t\t\t</a>\n\t\t\t</small>\n\t\t\t<div class=\"col-md-4\">\n\t\t\t\t<replacement-list v-if=\"replacements\"\n\t\t\t\t\t:replacements=\"replacements\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport MarkdownIt from 'markdown-it';\n\nimport ReplacementList from './ReplacementList.vue';\n\nimport { htmlLabelReplacements } from '@/modules/utils.js';\n\nconst md = new MarkdownIt();\n\nexport default {\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\treplacements: {\n\t\t\ttype: Array,\n\t\t\trequired: false\n\t\t},\n\t\tid: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\tshowHelp: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tplaceholder: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tmouseIn: false,\n\t\t\tfocused: false\n\t\t};\n\t},\n\tcomputed: {\n\t\thtml(){\n\t\t\tlet html = md.render(this.value);\n\t\t\tif (this.replacements)\n\t\t\t\thtml = htmlLabelReplacements(html, this.replacements);\n\n\t\t\tthis.$emit('html', html);\n\n\t\t\treturn html;\n\t\t},\n\t\tshowEditor(){\n\t\t\treturn this.mouseIn || this.focused;\n\t\t}\n\t},\n\twatch: {\n\t\tfocused(focused){\n\t\t\tif(focused)\n\t\t\t\tthis.$refs.editor.focus();\n\t\t}\n\t},\n\tmethods: {\n\t\tinput(event){\n\t\t\tlet markdown = event.target.value;\n\t\t\tthis.$emit('input', markdown);\n\t\t}\n\t},\n\tcomponents: {\n\t\tReplacementList\n\t}\n};\n</script>\n\n<style scoped>\n\ttextarea {\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t\tposition: absolute;\n\t\tleft: -10000px;\n\t}\n\n\ttextarea.editor-shown {\n\t\topacity: 1;\n\t\tpointer-events: all;\n\t\tposition: relative;\n\t\tleft: 0;\n\t}\n\n\t.markdown-editor-rendered-html-container {\n\t\theight: 300px;\n\t\toverflow: auto;\n\t}\n\n\t.markdown-editor-rendered-html-container.displaying-placeholder {\n\t\tcolor: #999;\n\t}\n</style>\n\n<style>\n\t.markdown-editor-rendered-html-container p + p {\n\t\tmargin-top: 20px;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/resources/assets/js/vue-components/MarkdownEditor.vue?30780500","<template>\n\t<div class=\"overlap-list-item\">\n\t\t<p class=\"overlap-user-name\">\n\t\t\t{{ user.full_name }}\n\t\t</p>\n\t\t<ol class=\"pairings-list\">\n\t\t\t<li v-for=\"pairing of overlap.pairings\" class=\"pairings-list-item\">\n\t\t\t\t<div class=\"pairings-list-item-row\">\n\t\t\t\t\t<div class=\"subject-name\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{{ pairing[subjectType].full_name }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"num-cases\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{{ pairing.numCases }} cases\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"total-time\">\n\t\t\t\t\t\t<php-date-interval :value=\"pairing.totalTime\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t</ol>\n\t</div>\n</template>\n\n<script>\nimport PhpDateInterval from '@/vue-components/PhpDateInterval.vue';\n\nexport default {\n\tprops: {\n\t\toverlap: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tuserType: {\n\t\t\ttype: String,\n\t\t\tdefault: 'faculty'\n\t\t},\n\t\tsubjectType: {\n\t\t\ttype: String,\n\t\t\tdefault: 'resident'\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tuser() {\n\t\t\treturn this.overlap[this.userType];\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tPhpDateInterval\n\t}\n};\n</script>\n\n<style scoped>\n\t.overlap-list-item {\n\t\tmargin: 1em 0.5em;\n\t}\n\n\t.overlap-user-name {\n\t\tfont-size: 1.25em;\n\t\tmargin: 0;\n\t}\n\n\t.pairings-list {\n\t\tmargin-left: 2em;\n\t}\n\n\t.pairings-list-item {\n\t\tfont-family: monospace;\n\t\tpadding: 0.25em;\n\t}\n\n\t.pairings-list-item:not(:last-child) {\n\t\tborder-bottom: 1px solid rgba(0, 0, 0, 0.2);\n\t}\n\n\t.pairings-list-item:nth-child(even) {\n\t\tbackground-color: rgba(0, 0, 0, 0.05);\n\t}\n\n\t.pairings-list-item-row {\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t}\n\n\t.pairings-list-item-row > * {\n\t\tflex-grow: 1;\n\t}\n\n\t.subject-name {\n\t\tflex-basis: 50%;\n\t}\n\n\t.num-cases {\n\t\tflex-basis: 20%;\n\t}\n\n\t.total-time {\n\t\tflex-basis: 30%;\n\t}\n\n\t.num-cases,\n\t.total-time {\n\t\ttext-align: right;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/EgressPairings/resources/assets/js/vue-components/Reports/EgressPairings/OverlapListItem.vue?06bf23d1","<template>\n\t<span class=\"php-date-interval\">{{ display }}</span>\n</template>\n\n<script>\nexport default {\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tdays() {\n\t\t\treturn this.value.days;\n\t\t},\n\t\thours() {\n\t\t\treturn this.value.h;\n\t\t},\n\t\tminutes() {\n\t\t\treturn this.value.i;\n\t\t},\n\t\tthingsToDisplay() {\n\t\t\treturn [\n\t\t\t\t'days',\n\t\t\t\t'hours',\n\t\t\t\t'minutes'\n\t\t\t];\n\t\t},\n\t\tdisplay() {\n\t\t\treturn this.thingsToDisplay\n\t\t\t\t.filter(thing => this[thing])\n\t\t\t\t.map(thing => {\n\t\t\t\t\tconst val = this[thing];\n\t\t\t\t\tconst unit = val === 1\n\t\t\t\t\t\t? thing.substring(0, thing.length - 1) + ' '\n\t\t\t\t\t\t: thing;\n\n\t\t\t\t\treturn `${String(val).padStart(2)} ${unit}`;\n\t\t\t\t})\n\t\t\t\t.join('  ');\n\t\t}\n\t}\n};\n</script>\n\n<style scoped>\n\t.php-date-interval {\n\t\twhite-space: pre;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/resources/assets/js/vue-components/PhpDateInterval.vue?4363d69a","<script>\nimport AcademicYearSelector from '@/vue-components/AcademicYearSelector.vue';\nimport ComponentList from '@/vue-components/ComponentList.vue';\n\nimport HasAlerts from '@/vue-mixins/HasAlerts.js';\n\nimport { FEATURE_RELEASE_DATES } from '@/modules/constants.js';\nimport { handleError } from '@/modules/errors.js';\nimport { isoDateStringObject, lastYear } from '@/modules/date-utils.js';\nimport { getUsersWithCompleteMerit } from '@/modules/merit-utils.js';\nimport { getFetchHeaders, jsonOrThrow } from '@/modules/utils.js';\n\nexport default {\n\tmixins: [\n\t\tHasAlerts\n\t],\n\tdata() {\n\t\treturn {\n\t\t\tdates: isoDateStringObject(lastYear()),\n\t\t\tusersWithMerits: null\n\t\t};\n\t},\n\n\tmounted() {\n\t\tthis.fetchUsersWithMerits();\n\t},\n\n\tcomputed: {\n\t\tmeritsReleaseDate() {\n\t\t\treturn FEATURE_RELEASE_DATES.FACULTY_MERIT;\n\t\t},\n\t\tusersWithMerit() {\n\t\t\treturn getUsersWithCompleteMerit(this.usersWithMerits);\n\t\t}\n\t},\n\n\twatch: {\n\t\tdates() {\n\t\t\tthis.fetchUsersWithMerits();\n\t\t}\n\t},\n\n\tmethods: {\n\t\tfetchUsersWithMerits() {\n\t\t\tlet q = $.param(this.dates);\n\n\t\t\tfetch(`/merits/by-user?${q}`, {\n\t\t\t\theaders: getFetchHeaders(),\n\t\t\t\tcredentials: 'same-origin'\n\t\t\t}).then(jsonOrThrow).then(usersWithMerits => {\n\t\t\t\tthis.usersWithMerits = usersWithMerits;\n\t\t\t}).catch(err => {\n\t\t\t\thandleError(err, this, 'There was a problem fetching merits');\n\t\t\t});\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tAcademicYearSelector,\n\t\tComponentList\n\t}\n};\n</script>\n\n<style scoped>\n\t.controls-row {\n\t\tmargin-bottom: 3em;\n\t}\n\n\t.containing-label {\n\t\twidth: 100%;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Reports/FacultyMerit/resources/assets/js/vue-components/Reports/FacultyMerit/UsersWithMeritReport.vue?c39a640e","<template>\n\t<div class=\"user-with-publications-list-item\">\n\t\t<div class=\"panel panel-default\">\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t<h2>{{ full_name }}</h2>\n\t\t\t\t\t\t<div class=\"report-summary\">\n\t\t\t\t\t\t\t<div class=\"total\">\n\t\t\t\t\t\t\t\t<small>Publications</small>\n\t\t\t\t\t\t\t\t{{ totalFacultyPublications }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-sm-8\">\n\t\t\t\t\t\t<ul class=\"publication-list\">\n\t\t\t\t\t\t\t<li v-for=\"[pubType, publications] of facultyPublicationsByType\"\n\t\t\t\t\t\t\t\t\tclass=\"publication-list-item\">\n\t\t\t\t\t\t\t\t<h3 class=\"publication-title row\">\n\t\t\t\t\t\t\t\t\t<span class=\"publication-type col-sm-10\">\n\t\t\t\t\t\t\t\t\t\t{{ pubType }}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span class=\"publication-count col-sm-2 text-right\">\n\t\t\t\t\t\t\t\t\t\t{{ publications.length }}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t<li v-for=\"publication of publications\">\n\t\t\t\t\t\t\t\t\t\t{{ publication.title }}\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div class=\"total-row row\">\n\t\t\t\t\t\t\t<div class=\"total-cell col-sm-offset-10 col-sm-2 text-right\">\n\t\t\t\t\t\t\t\t{{ totalFacultyPublications }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport { getFacultyPublicationsByType } from '@/modules/merits/faculty-merit/index.js';\n\nexport default {\n\tprops: {\n\t\tfull_name: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\treport: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tfacultyPublicationsByType() {\n\t\t\treturn Array.from(getFacultyPublicationsByType(this.report).entries());\n\t\t},\n\t\ttotalFacultyPublications() {\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\treturn this.facultyPublicationsByType.reduce((acc, [_, publications]) =>\n\t\t\t\tacc + publications.length\n\t\t\t, 0);\n\t\t}\n\t},\n\n\tmethods: {\n\t\tgetCsvRow() {\n\t\t\treturn [this.full_name].concat(\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tthis.facultyPublicationsByType.map(([_, publications]) =>\n\t\t\t\t\tpublications.length\n\t\t\t\t)\n\t\t\t).concat([this.totalFacultyPublications]);\n\t\t}\n\t}\n};\n</script>\n\n<style scoped>\n\t.report-summary {\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t}\n\n\t.total {\n\t\tdisplay: block;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-around;\n\t\talign-items: center;\n\t\tborder: 1px solid rgba(0, 0, 0, 0.15);\n\t\tmargin: 2em 0;\n\t\tpadding: 2em;\n\t\tfont-size: 2.5em;\n\t\tborder-radius: 1px;\n\t}\n\n\t.total small {\n\t\tdisplay: block;\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t\tfont-size: 0.5em;\n\t}\n\n\t.publication-list {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\n\t.publication-list-item {\n\t\tlist-style: none;\n\t\tpadding: 1em;\n\t}\n\n\t.publication-list-item ol {\n\t\tmargin-left: 2em;\n\t}\n\n\t.publication-list-item:nth-child(even) {\n\t\tbackground-color: rgba(0, 0, 0, 0.05);\n\t}\n\n\t.publication-title {\n\t\tmargin: 0 0 0.25em 0;\n\t\tfont-size: 1.5em;\n\t}\n\n\t.publication-count {\n\t\tfont-family: monospace;\n\t\tpadding-right: 1em;\n\t}\n\n\t.total-cell {\n\t\tfont-family: monospace;\n\t\tborder-top: 1px solid black;\n\t\tfont-size: 1.5em;\n\t\tpadding: 0.75em 1.5em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/resources/assets/js/vue-components/MeritCompensation/UserWithMeritPublicationsListItem.vue?15d10328"],"sourceRoot":""}