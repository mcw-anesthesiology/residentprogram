{"version":3,"sources":["webpack:///./resources/assets/js/vue-components/BootstrapAlert.vue","webpack:///./resources/assets/js/vue-components/ShowHideButton.vue","webpack:///./resources/assets/js/vue-components/SvgIcon.vue","webpack:///./resources/assets/js/vue-components/ComponentList.vue","webpack:///./resources/assets/js/vue-components/ListPaginator.vue","webpack:///./resources/assets/js/vue-components/RichDateRange.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/ReportById.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/Report.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/Checklist/Checklist.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/Checklist/Section.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/Checklist/Item.vue","webpack:///./resources/assets/js/vue-components/Questionnaire/Question/Checkbox.vue","webpack:///./resources/assets/js/vue-components/Questionnaire/Question/Radio.vue","webpack:///./resources/assets/js/vue-components/Questionnaire/Question/List/Items.vue","webpack:///./resources/assets/js/vue-components/Questionnaire/Question/List/Item.vue","webpack:///./resources/assets/js/vue-components/Questionnaire/Question/List/EditorialBoardItem.vue","webpack:///./resources/assets/js/vue-components/Questionnaire/Instruction.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/Checklist/SectionErrors.vue","webpack:///./resources/assets/js/vue-components/Questionnaire/Pager.vue","webpack:///./resources/assets/js/vue-components/Questionnaire/PagerControls.vue","webpack:///./resources/assets/js/vue-components/ProgressBullets.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/SummaryById.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/Summary.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/Checklist/Summary/Section.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/ReportListItem.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/Checklist/PrintView/Section.vue","webpack:///./resources/assets/js/vue-components/MeritCompensation/Checklist/PrintView/Item.vue","webpack:///./resources/assets/js/vue-components/Questionnaire/PrintView/Question/ValueQuestion.vue","webpack:///./resources/assets/js/vue-components/Questionnaire/PrintView/Question/RadioCheckboxQuestion.vue","webpack:///./resources/assets/js/vue-components/Questionnaire/PrintView/Question/List/List.vue"],"names":[],"mappings":";AAqDA;CACA;CACA;;AChBA;AACA;EACA;CACA;CACA;;ACTA;;CAEA;CACA;CACA;CACA;CACA;CACA;CACA;;ACiMA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;;AC9MA;CACA;CACA;AAEA;CACA;CACA;;ACDA;CACA;CACA;;ACcA;CACA;CACA;;ACkMA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;;ACtMA;CACA;CACA;AAEA;AACA;EACA;CACA;CACA;AAEA;AACA;EACA;CACA;CACA;AAEA;;CAEA;CACA;AAEA;;CAEA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;;AC9DA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;AACA;EACA;EACA;CACA;AAEA;EACA;CACA;AAEA;EACA;CACA;CACA;AAEA;AACA;EACA;EACA;CACA;AAEA;EACA;CACA;AAEA;EACA;CACA;CACA;;ACQA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;AACA;EACA;CACA;AAEA;EACA;CACA;AAEA;EACA;CACA;CACA;AAEA;AACA;EACA;CACA;AAEA;EACA;CACA;AAEA;EACA;CACA;CACA;;ACtEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;;ACZA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;;AC3CA;CACA;CACA;;AC7DA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;;AAIA;CACA;CACA;;ACgDA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;;AC3GA;CACA;CACA;AAEA;AAEA;EACA;EACA;CACA;CACA;;AAIA;CACA;CACA;;ACMA;CACA;CACA;CACA;CACA;;AC6GA;CACA;CACA;CACA;AAEA;CACA;CACA;;ACxFA;CACA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;;CAEA;CACA;AAEA;CACA;CACA;CACA;AAEA;AACA;EACA;EACA;CACA;AAEA;EACA;CACA;CACA;;AC3EA;CACA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;;ACyBA;CACA;CACA;;ACwDA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;;AClFA;CACA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;AACA;EACA;EACA;CACA;AAEA;EACA;CACA;AAEA;EACA;CACA;CACA;AAEA;AACA;EACA;EACA;CACA;AAEA;EACA;CACA;AAEA;EACA;CACA;CACA;;ACuFA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;AAEA;;CAEA;CACA;AAEA;CACA;CACA;;AC/KA;;CAEA;CACA;AAEA;CACA;CACA;CACA;;AAMA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;AAEA;CACA;CACA;;ACrDA;CACA;CACA;AAEA;CACA;CACA;CACA;AAEA;CACA;CACA;CACA;;ACvCA;CACA;CACA;AAEA;CACA;CACA;AAEA;AACA;EACA;CACA;CACA;AAEA;AACA;EACA;CACA;CACA;;ACQA;CACA;CACA;AAEA;CACA;CACA;AAEA;AACA;EACA;CACA;CACA;AAEA;AACA;EACA;CACA;CACA;;ACZA;CACA;CACA;AAEA;AACA;EACA;CACA;CACA;AAEA;AACA;EACA;CACA;CACA;AAEA;CACA;CACA;CACA;CACA","file":"../css/vue-merit-reports.css","sourcesContent":["<template>\n\t<div class=\"alert\" :class=\"alertTypeClass\">\n\t\t<button v-if=\"dismissable\" type=\"button\" class=\"close\" aria-label=\"Close\"\n\t\t\t\t@click=\"$emit('close')\">\n\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t</button>\n\t\t{{ text }}\n\t\t<div v-if=\"html\" v-html=\"html\"></div>\n\t\t<slot></slot>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tprops: {\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefault: 'error',\n\t\t\tvalidator(type){\n\t\t\t\treturn [\n\t\t\t\t\t'info',\n\t\t\t\t\t'success',\n\t\t\t\t\t'warning',\n\t\t\t\t\t'error',\n\t\t\t\t\t'danger'\n\t\t\t\t].includes(type);\n\t\t\t}\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\thtml: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\tdismissable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\tcomputed: {\n\t\talertTypeClass(){\n\t\t\tif(this.type === 'error')\n\t\t\t\treturn 'alert-danger';\n\t\t\t\n\t\t\treturn `alert-${this.type}`;\n\t\t}\n\t}\n};\n</script>\n\n<style scoped>\n\t.alert {\n\t\tpage-break-inside: avoid;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/BootstrapAlert.vue?6c1ead4e","<template>\n\t<button type=\"button\" class=\"btn\"\n\t\t\t@click=\"$emit('input', !value)\">\n\t\t\t\n\t\t<slot name=\"left-glyph\"></slot>\n\t\t\t\n\t\t<slot v-if=\"value\" name=\"true\">\n\t\t\tHide\n\t\t</slot>\n\t\t<slot v-else name=\"false\">\n\t\t\tShow\n\t\t</slot>\n\n\t\t<slot>\n\t\t\t{{ text }}\n\t\t</slot>\n\t\t\n\t\t<slot name=\"glyph\">\n\t\t\t<span class=\"glyphicon glyphicon-triangle-bottom\"></span>\n\t\t</slot>\n\t</button>\n</template>\n\n<script>\nexport default {\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t}\n\t}\n};\n</script>\n\n<style scoped>\n\t@media print {\n\t\tbutton {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/ShowHideButton.vue?47c685e9","<template>\n\t<span class=\"svg-icon\" v-html=\"svg\"></span>\n</template>\n\n<script>\n\nexport default {\n\tprops: {\n\t\tsrc: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata(){\n\t\treturn {\n\t\t\tsvg: null\n\t\t};\n\t},\n\tcreated(){\n\t\tfetch(this.src).then(response => {\n\t\t\tif(response.ok)\n\t\t\t\treturn response.text();\n\t\t\t\n\t\t\tthrow new Error('Unable to load icon');\n\t\t}).then(svg => {\n\t\t\tthis.svg = svg;\n\t\t}).catch(err => {\n\t\t\tconsole.err(err.message);\n\t\t});\n\t}\n};\n</script>\n\n<style>\n\t.svg-icon,\n\t.svg-icon > svg {\n\t\tdisplay: inline-block;\n\t\twidth: 1em;\n\t\theight: 1em;\n\t\tstroke-width: 0;\n\t\tstroke: currentColor;\n\t\tfill: currentColor;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/SvgIcon.vue?782cfc92","<template>\n\t<div>\n\t\t<div class=\"list-header-controls form-inline\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tSort\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<select class=\"form-control\" v-model=\"sortBy\">\n\t\t\t\t\t\t\t<option v-for=\"field of fields\" :value=\"field\">\n\t\t\t\t\t\t\t\t{{ renderFieldName(field) }}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<span class=\"input-group-btn\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t\t\t\t@click=\"sortOrder = sortOrder === 'asc' ? 'desc' : 'asc'\">\n\t\t\t\t\t\t\t\t<span v-if=\"sortOrder === 'asc'\"\n\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-sort-by-alphabet\"></span>\n\t\t\t\t\t\t\t\t<span v-else\n\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-sort-by-alphabet-alt\"></span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tSearch\n\t\t\t\t\t<input type=\"search\" class=\"form-control\" v-model=\"query\"\n\t\t\t\t\t\tplaceholder=\"Search\" />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div v-if=\"reloadable\" class=\"form-group\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-default labelless-button\"\n\t\t\t\t\t\t@click=\"$emit('reload')\">\n\t\t\t\t\t<span class=\"glyphicon glyphicon-refresh\"></span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"list-container\">\n\t\t\t<slot name=\"header\"></slot>\n\n\t\t\t<ol v-if=\"itemsToShow\" class=\"list\">\n\t\t\t\t<slot v-for=\"item of currentPageItems\" v-bind=\"item\"></slot>\n\t\t\t</ol>\n\t\t\t<p v-else class=\"no-items-text\">\n\t\t\t\tNo items to show\n\t\t\t</p>\n\n\t\t\t<slot name=\"footer\"></slot>\n\t\t</div>\n\t\t<list-paginator v-if=\"paginate\"\n\t\t\tv-model=\"page\" :paginatedItems=\"paginatedItems\"\n\t\t\t:itemsPerPage=\"itemsPerPage\"\n\t\t\t@pageSize=\"itemsPerPage = arguments[0]\" />\n\t</div>\n</template>\n\n<script>\nimport ListPaginator from './ListPaginator.vue';\n\nimport lunr from 'lunr';\n\nimport { snakeCaseToWords } from 'modules/utils.js';\nimport { sortFunctions } from 'modules/report-utils.js';\n\nexport default {\n\tprops: {\n\t\tfields: {\n\t\t\ttype: Array,\n\t\t\tdefault() {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\t\titems: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t},\n\t\tfieldAccessors: {\n\t\t\ttype: Object,\n\t\t\trequired: false\n\t\t},\n\t\tdefaultSortBy: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\tdefaultSortOrder: {\n\t\t\ttype: String,\n\t\t\tvalidator(order) {\n\t\t\t\treturn ['asc', 'desc'].includes(order);\n\t\t\t},\n\t\t\tdefault: 'asc'\n\t\t},\n\t\tpaginate: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\treloadable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tsortFunctions: {\n\t\t\ttype: Map,\n\t\t\tdefault(){\n\t\t\t\treturn sortFunctions;\n\t\t\t}\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tquery: null,\n\t\t\tpage: 0,\n\t\t\titemsPerPage: 10,\n\t\t\tsortBy: this.defaultSortBy || this.fields[0],\n\t\t\tsortOrder: this.defaultSortOrder\n\t\t};\n\t},\n\tcomputed: {\n\t\titemMap() {\n\t\t\tlet map = new Map();\n\t\t\tthis.items.map(item => {\n\t\t\t\tmap.set(item.id, item);\n\t\t\t});\n\n\t\t\treturn map;\n\t\t},\n\t\tindex() {\n\t\t\tlet fields = this.fields;\n\n\t\t\tlet index = lunr(function() {\n\t\t\t\tfields.map(field => {\n\t\t\t\t\tlet name, options;\n\t\t\t\t\tif (typeof field === 'string') {\n\t\t\t\t\t\tname = field;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tname = field.name;\n\t\t\t\t\t\toptions = field;\n\t\t\t\t\t}\n\t\t\t\t\tthis.field(name, options);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.items.map(item => {\n\t\t\t\tif (this.fieldAccessors) {\n\t\t\t\t\tfor (let field in this.fieldAccessors) {\n\t\t\t\t\t\titem[field] = this.fieldAccessors[field](item, 'search');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tindex.add(item);\n\t\t\t});\n\n\t\t\treturn index;\n\t\t},\n\t\tfilteredItems() {\n\t\t\tif (this.query) {\n\t\t\t\tlet refs = this.index.search(this.query);\n\t\t\t\treturn refs.map(ref => {\n\t\t\t\t\treturn this.itemMap.get(ref.ref);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this.items;\n\t\t},\n\t\tsortedItems() {\n\t\t\tif (this.sortBy && this.sortOrder) {\n\n\t\t\t\treturn sortFunctions.has(this.sortBy)\n\t\t\t\t\t? this.filteredItems.sort(sortFunctions.get(this.sortBy))\n\t\t\t\t\t: this.filteredItems.sort((a, b) => {\n\t\t\t\t\t\tlet aValue;\n\t\t\t\t\t\tlet bValue;\n\n\t\t\t\t\t\tif (this.fieldAccessors && this.sortBy in this.fieldAccessors) {\n\t\t\t\t\t\t\taValue = this.fieldAccessors[this.sortBy](a, 'sort');\n\t\t\t\t\t\t\tbValue = this.fieldAccessors[this.sortBy](b, 'sort');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taValue = a[this.sortBy];\n\t\t\t\t\t\t\tbValue = b[this.sortBy];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Number.isNaN(aValue))\n\t\t\t\t\t\t\taValue = aValue.toUpperCase();\n\n\t\t\t\t\t\tif (Number.isNaN(bValue))\n\t\t\t\t\t\t\tbValue = bValue.toUpperCase();\n\n\t\t\t\t\t\tif (aValue < bValue)\n\t\t\t\t\t\t\treturn this.sortOrder === 'asc'\n\t\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t\t: 1;\n\t\t\t\t\t\tif (aValue > bValue)\n\t\t\t\t\t\t\treturn this.sortOrder === 'asc'\n\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t: -1;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this.filteredItems;\n\t\t},\n\t\tpaginatedItems() {\n\t\t\tif (!this.paginate)\n\t\t\t\treturn this.sortedItems;\n\n\t\t\tlet paginatedItems = [];\n\t\t\tlet items = this.sortedItems.slice();\n\t\t\twhile(items.length > 0)\n\t\t\t\tpaginatedItems.push(items.splice(0, this.itemsPerPage));\n\n\t\t\treturn paginatedItems;\n\t\t},\n\t\tcurrentPageItems() {\n\t\t\tif (!this.paginate)\n\t\t\t\treturn this.sortedItems;\n\n\t\t\treturn this.paginatedItems[this.page];\n\t\t},\n\t\titemsToShow() {\n\t\t\treturn this.filteredItems && this.filteredItems.length > 0;\n\t\t}\n\t},\n\tmethods: {\n\t\trenderFieldName(field) {\n\t\t\tif (field === 'id')\n\t\t\t\treturn 'ID';\n\n\t\t\treturn snakeCaseToWords(field);\n\t\t}\n\t},\n\tcomponents: {\n\t\tListPaginator\n\t}\n};\n</script>\n\n<style scoped>\n\t.list-header-controls {\n\t\ttext-align: right;\n\t}\n\n\t.list-header-controls input[type=\"search\"] {\n\t\twidth: 300px;\n\t\tmax-width: 100%;\n\t}\n\n\t.list-header-controls.form-inline .input-group > .form-control {\n\t\twidth: auto;\n\t}\n\n\t.list-container {\n\t\tmargin: 3em 0;\n\t}\n\n\t.list {\n\t\tpadding: 0;\n\t}\n\n\t.list li {\n\t\tlist-style: none;\n\t}\n\n\t.containing-label {\n\t\ttext-align: left;\n\t}\n\n\t.containing-label > * {\n\t\tdisplay: block;\n\t}\n\n\t.no-items-text {\n\t\tpadding: 0.5em 0;\n\t\tborder: 1px solid rgba(0, 0, 0, 0.15);\n\t\tborder-left: none;\n\t\tborder-right: none;\n\t\ttext-align: center;\n\t\tfont-size: 1.25em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/ComponentList.vue?287c99c2","<template>\n\t<section class=\"paginator\">\n\t\t<div class=\"form-inline\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tCurrent page:\n\t\t\t\t\t<input type=\"number\" class=\"form-control\" :value=\"value + 1\"\n\t\t\t\t\t\tmin=\"1\" :max=\"paginatedItems.length\"\n\t\t\t\t\t\t@input=\"$emit('input', Number($event.target.value) - 1)\" />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tItems per page:\n\t\t\t\t\t<select class=\"form-control\" :value=\"itemsPerPage\"\n\t\t\t\t\t\t\t@input=\"$emit('pageSize', Number($event.target.value))\">\n\t\t\t\t\t\t<option value=\"5\">5</option>\n\t\t\t\t\t\t<option value=\"10\">10</option>\n\t\t\t\t\t\t<option value=\"20\">20</option>\n\t\t\t\t\t\t<option value=\"50\">50</option>\n\t\t\t\t\t\t<option value=\"100\">100</option>\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t</div>\t\t\t\n\t\t</div>\n\t\t<nav v-if=\"itemsPerPage && paginatedItems.length > 1\">\n\t\t\t<div class=\"btn-group\">\n\t\t\t\t<paginator-link :value=\"value - 1\" text=\"← Prev\"\n\t\t\t\t\t:active=\"value === 0\" @click=\"setPage\" />\n\n\t\t\t\t<paginator-link v-for=\"(pageItems, pageNum) of paginatedItems\"\n\t\t\t\t\t:value=\"pageNum\" :active=\"pageNum === value\"\n\t\t\t\t\t@click=\"setPage\" />\n\n\t\t\t\t<paginator-link :value=\"value + 1\" text=\"Next →\"\n\t\t\t\t\t:active=\"value === paginatedItems.length - 1\"\n\t\t\t\t\t@click=\"setPage\" />\n\t\t\t</div>\n\t\t</nav>\n\t</section>\n</template>\n\n<script>\nimport PaginatorLink from './PaginatorLink.vue';\n\nexport default {\n\tprops: {\n\t\tvalue: Number,\n\t\titemsPerPage: Number,\n\t\tpaginatedItems: Array\n\t},\n\twatch: {\n\t\titemsPerPage(){\n\t\t\tif(this.value >= this.paginatedItems.length)\n\t\t\t\tthis.setPage(this.paginatedItems.length - 1);\n\t\t}\n\t},\n\tmethods: {\n\t\tsetPage(page){\n\t\t\tthis.$emit('input', page);\n\t\t}\n\t},\n\tcomponents: {\n\t\tPaginatorLink\n\t}\n};\n</script>\n\n<style scoped>\n\t.paginator {\n\t\ttext-align: center;\n\t}\n\n\tnav span {\n\t\tmargin: 0 0.25em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/ListPaginator.vue?1568a33a","<template>\n\t<span ref=\"container\">\n\t\t{{ dateString }}\n\t</span>\n</template>\n\n<script>\nimport { renderDateRange } from 'modules/date-utils.js';\n\nexport default {\n\tprops: {\n\t\tdates: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tstart: {\n\t\t\ttype: String,\n\t\t\tdefault: 'startDate'\n\t\t},\n\t\tend: {\n\t\t\ttype: String,\n\t\t\tdefault: 'endDate'\n\t\t},\n\t\ttime: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\thovered: false\n\t\t};\n\t},\n\n\tmounted() {\n\t\tthis.$refs.container.addEventListener('mouseenter',\n\t\t\tthis.handleMouseEnter);\n\n\t\tthis.$refs.container.addEventListener('mouseleave',\n\t\t\tthis.handleMouseLeave);\n\t},\n\n\tcomputed: {\n\t\tstartDate() {\n\t\t\treturn this.dates[this.start];\n\t\t},\n\t\tendDate() {\n\t\t\treturn this.dates[this.end];\n\t\t},\n\t\tdateString() {\n\t\t\treturn renderDateRange(this.startDate, this.endDate, this.hovered);\n\t\t}\n\t},\n\n\tmethods: {\n\t\thandleMouseEnter() {\n\t\t\tthis.hovered = true;\n\t\t},\n\t\thandleMouseLeave() {\n\t\t\tthis.hovered = false;\n\t\t}\n\t},\n\n\tbeforeDestroy() {\n\t\tthis.$refs.container.removeEventListener('mouseenter',\n\t\t\tthis.handleMouseEnter);\n\n\t\tthis.$refs.container.removeEventListener('mouseleave',\n\t\t\tthis.handleMouseLeave);\n\t}\n};\n</script>\n\n<style scoped>\n\tspan {\n\t\tcursor: help;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/RichDateRange.vue?1ec92f20","<template>\n\t<div class=\"report-by-id\">\n\t\t<div class=\"container body-block\" v-if=\"meritReport\">\n\t\t\t<merit-report\n\t\t\t\tv-bind=\"meritReport\"\n\t\t\t\t:title=\"title\"\n\t\t\t\t:current-user=\"currentUser\"\n\t\t\t\t:form_id=\"meritReport.form.id\"\n\t\t\t\t@close=\"$emit('close')\"\n\t\t\t\t@reload=\"$emit('reload')\"\n\t\t\t\t@alert=\"$emit('alert', arguments[0])\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport MeritReport from './Report.vue';\n\nimport { fetchAllMeritReports } from 'modules/merit-utils.js';\n\nexport default {\n\tprops: {\n\t\tid: {\n\t\t\ttype: [ Number, String ],\n\t\t\trequired: true\n\t\t},\n\t\tmeritReports: {\n\t\t\ttype: Array,\n\t\t\trequired: false\n\t\t},\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tcurrentUser: {\n\t\t\ttype: Object,\n\t\t\trequired: false\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tfetchedReports: null\n\t\t};\n\t},\n\n\tcomputed: {\n\t\treports() {\n\t\t\treturn this.meritReports || this.fetchedReports;\n\t\t},\n\t\tmeritReport() {\n\t\t\tlet id = Number(this.id);\n\t\t\tif (Number.isNaN(id) || !this.reports)\n\t\t\t\treturn;\n\n\t\t\treturn this.reports.find(report => report.id === id);\n\t\t}\n\t},\n\n\tmounted() {\n\t\tif (\n\t\t\t!this.meritReports\n\t\t\t|| !Array.isArray(this.meritReports)\n\t\t\t|| this.meritReports.length === 0\n\t\t) {\n\t\t\tthis.fetchReports();\n\t\t}\n\t},\n\n\tmethods: {\n\t\tfetchReports() {\n\t\t\tfetchAllMeritReports().then(merits => {\n\t\t\t\tthis.fetchedReports = merits;\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t\tthis.alerts.push({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\thtml: '<strong>Error:</strong> There was a problem fetching past merit reports'\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tMeritReport\n\t}\n};\n</script>\n\n<style scoped>\n\t.report-by-id {\n\t\torder: 2;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/ReportById.vue?3246de5f","<template>\n\t<div>\n\t\t<div v-if=\"readonly\" class=\"form-summary panel panel-default\">\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<small>Report period</small>\n\t\t\t\t\t\t<rich-date-range :dates=\"dates\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t\t\t<small>Checked items</small>\n\t\t\t\t\t\t{{ checkedItems }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-else>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label class=\"containing-label\">\n\t\t\t\t\tReport period\n\t\t\t\t\t<academic-year-selector v-model=\"dates\" :min-date=\"lastMonth\" />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<merit-compensation-checklist v-bind=\"checklist\"\n\t\t\t:title=\"title\" :readonly=\"readonly\"\n\t\t\t:user=\"currentUser\"\n\t\t\t@input=\"handleChecklistInput\"\n\t\t\t@save=\"handleSave\"\n\t\t\t@close=\"handleClose\"\n\t\t\t@submit=\"handleComplete\" />\n\n\t\t<div v-if=\"!show.notes && (notes || userIsAdmin)\"\n\t\t\t\tclass=\"panel panel-default notes-container\">\n\t\t\t<div class=\"panel-heading\">\n\t\t\t\tNotes\n\t\t\t</div>\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<textarea class=\"form-control\"\n\t\t\t\t\t:value=\"notes\" readonly>\n\t\t\t\t</textarea>\n\t\t\t</div>\n\t\t\t<div v-if=\"userIsAdmin\" class=\"panel-footer text-center\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-info\"\n\t\t\t\t\t\t@click=\"show.notes = true\">\n\t\t\t\t\tEdit notes\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-if=\"show.notes\" class=\"panel panel-default notes-container\">\n\t\t\t<div class=\"panel-heading\">\n\t\t\t\tNotes\n\t\t\t</div>\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<textarea class=\"form-control\"\n\t\t\t\t\tv-model=\"inputNotes\">\n\t\t\t\t</textarea>\n\t\t\t</div>\n\t\t\t<div class=\"panel-footer text-center\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t\t@click=\"show.notes = false\">\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t\t<loading-button loading-class=\"btn-primary\"\n\t\t\t\t\t\ttooltip=\"Saved!\"\n\t\t\t\t\t\t:loading=\"saving\"\n\t\t\t\t\t\t:successful=\"savingSuccessful\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\"\n\t\t\t\t\t\t\t@click=\"handleSaveNotes\">\n\t\t\t\t\t\tSave notes\n\t\t\t\t\t</button>\n\t\t\t\t</loading-button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport moment from 'moment';\n\nimport MeritCompensationChecklist from './Checklist/Checklist.vue';\n\nimport AcademicYearSelector from 'vue-components/AcademicYearSelector.vue';\nimport LoadingButton from 'vue-components/LoadingButton.vue';\nimport RichDateRange from 'vue-components/RichDateRange.vue';\n\nimport { isoDateString } from 'modules/date-utils.js';\nimport { getCheckedItemCount } from 'modules/merit-utils.js';\nimport { isAdmin, getFetchHeaders, okOrThrow } from 'modules/utils.js';\n\nexport default {\n\tprops: {\n\t\tid: {\n\t\t\ttype: Number,\n\t\t\trequired: false\n\t\t},\n\t\tperiod_start: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tperiod_end: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\treport: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tstatus: {\n\t\t\ttype: String,\n\t\t\tdefault: 'pending'\n\t\t},\n\t\tnotes: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tuser_id: {\n\t\t\ttype: [ String, Number ],\n\t\t\trequired: true\n\t\t},\n\t\tform_id: {\n\t\t\ttype: [ String, Number ],\n\t\t\trequired: true\n\t\t},\n\t\tcurrentUser: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tdates: {\n\t\t\t\tstartDate: this.period_start,\n\t\t\t\tendDate: this.period_end\n\t\t\t},\n\t\t\tchecklist: this.report,\n\t\t\tinputNotes: this.notes || '',\n\t\t\tsavingNotes: '',\n\n\t\t\tsaving: false,\n\t\t\tsavingSuccessful: false,\n\n\t\t\tshow: {\n\t\t\t\tnotes: false\n\t\t\t}\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tuserIsAdmin() {\n\t\t\treturn isAdmin(this.currentUser);\n\t\t},\n\t\treadonly() {\n\t\t\treturn ![\n\t\t\t\t'pending',\n\t\t\t\t'open for editing'\n\t\t\t].includes(this.status);\n\t\t},\n\t\tcheckedItems() {\n\t\t\treturn getCheckedItemCount(this.report);\n\t\t},\n\t\tlastMonth() {\n\t\t\treturn isoDateString(moment().subtract(1, 'month'));\n\t\t}\n\t},\n\n\twatch: {\n\t\tperiod_start(period_start) {\n\t\t\tthis.dates = Object.assign({}, this.dates, {startDate: period_start});\n\t\t},\n\t\tperiod_end(period_end) {\n\t\t\tthis.dates = Object.assign({}, this.dates, {endDate: period_end});\n\t\t},\n\t\treport(report) {\n\t\t\tthis.checklist = report;\n\t\t},\n\t\tnotes(notes) {\n\t\t\tthis.inputNotes = notes;\n\t\t}\n\t},\n\n\tmethods: {\n\t\thandleChecklistInput(checklist) {\n\t\t\tif (this.readonly)\n\t\t\t\treturn;\n\n\t\t\tthis.checklist = Object.assign({}, this.checklist, checklist);\n\t\t\tif (this.currentUser.id === this.user_id) {\n\t\t\t\tthis.handleSubmit(false);\n\t\t\t}\n\t\t},\n\t\thandleSaveNotes() {\n\t\t\tif (!this.userIsAdmin)\n\t\t\t\treturn;\n\n\t\t\tthis.$emit('save', {\n\t\t\t\tid: this.id,\n\t\t\t\tnotes: this.inputNotes\n\t\t\t}, false);\n\t\t},\n\t\thandleSave() {\n\t\t\tthis.handleSubmit(false).then(() => {\n\t\t\t\tthis.$emit('reload');\n\t\t\t\tthis.handleClose(); // FIXME: Probably shouldn't close here\n\t\t\t});\n\t\t},\n\t\thandleComplete() {\n\t\t\tthis.handleSubmit(true).then(() => {\n\t\t\t\tthis.$emit('reload');\n\t\t\t\tthis.handleClose();\n\t\t\t});\n\t\t},\n\t\thandleSubmit(isComplete) {\n\t\t\tif (this.readonly || !this.currentUser || !this.user_id)\n\t\t\t\treturn;\n\n\t\t\tconst form_id = Number(this.form_id);\n\t\t\tconst user_id = Number(this.user_id);\n\n\t\t\tif (Number.isNaN(form_id) || Number.isNaN(user_id))\n\t\t\t\treturn;\n\n\t\t\tconst changes = {\n\t\t\t\t_method: 'PATCH',\n\t\t\t\tperiod_start: this.dates.startDate,\n\t\t\t\tperiod_end: this.dates.endDate,\n\t\t\t\treport: this.checklist,\n\t\t\t\tuser_id,\n\t\t\t\tform_id\n\t\t\t};\n\n\t\t\tif (isComplete)\n\t\t\t\tchanges.status = 'complete';\n\n\t\t\tlet meritReport = Object.assign(\n\t\t\t\t{\n\t\t\t\t\tid: this.id,\n\t\t\t\t\tperiod_start: this.period_start,\n\t\t\t\t\tperiod_end: this.period_end,\n\t\t\t\t\tstatus: this.status,\n\t\t\t\t\tnotes: this.notes\n\t\t\t\t},\n\t\t\t\tchanges\n\t\t\t);\n\n\t\t\tthis.saving = true;\n\n\t\t\treturn fetch(`/merits/${meritReport.id}`, {\n\t\t\t\tmethod: 'POST', // PATCH\n\t\t\t\theaders: getFetchHeaders(),\n\t\t\t\tcredentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(meritReport)\n\t\t\t}).then(okOrThrow).then(() => {\n\t\t\t\tthis.savingSuccessful = true;\n\t\t\t\tthis.saving = false;\n\t\t\t}).catch(err => {\n\t\t\t\tthis.savingSuccessful = false;\n\t\t\t\tthis.saving = false;\n\t\t\t\tconsole.error(err);\n\t\t\t\tthis.$emit('alert', {\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\thtml: '<strong>Error:</strong> There was a problem saving the report'\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\thandleClose() {\n\t\t\tthis.$emit('close');\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tMeritCompensationChecklist,\n\n\t\tAcademicYearSelector,\n\t\tLoadingButton,\n\t\tRichDateRange\n\t}\n};\n</script>\n\n<style scoped>\n\tsmall {\n\t\tfont-size: 0.75em;\n\t\tcolor: rgba(0, 0, 0, 0.55);\n\t\tdisplay: block;\n\t}\n\n\t.notes-container {\n\t\tmargin-top: 2em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/Report.vue?04192f92","<template>\n\t<div class=\"checklist\">\n\t\t<h1>{{ title }}</h1>\n\t\t<questionnaire-pager :pages=\"pages\" :readonly=\"readonly\"\n\t\t\t\t:checklist-validator=\"checklistIsValid\"\n\t\t\t\t@submit=\"handleSubmit\">\n\t\t\t<template scope=\"pager\">\n\t\t\t\t<section-errors :page=\"pager.page\" />\n\t\t\t\t<transition :name=\"`checklist-pager-${pager.lastChange}`\">\n\t\t\t\t\t<checklist-section :key=\"`page-${pager.pageNum}`\"\n\t\t\t\t\t\tv-bind=\"pager.page\" :page=\"true\"\n\t\t\t\t\t\t:readonly=\"readonly\" :user=\"user\"\n\t\t\t\t\t\t@input=\"handleInput(pager.pageNum, arguments[0])\" />\n\t\t\t\t</transition>\n\t\t\t\t<section-errors :page=\"pager.page\" />\n\t\t\t</template>\n\t\t</questionnaire-pager>\n\n\t\t<div class=\"text-center\">\n\t\t\t<button type=\"button\" v-if=\"readonly\" class=\"btn btn-default\"\n\t\t\t\t\t@click=\"handleClose\">\n\t\t\t\tClose\n\t\t\t</button>\n\t\t\t<confirmation-button v-else class=\"btn btn-default\"\n\t\t\t\t\tpressed-class=\"btn btn-warning\" @click=\"handleClose\">\n\t\t\t\tClose\n\t\t\t\t<template slot=\"pressed\">\n\t\t\t\t\tYes, close without saving\n\t\t\t\t</template>\n\t\t\t</confirmation-button>\n\n\t\t\t<button v-if=\"!readonly\" type=\"button\" class=\"btn btn-info\"\n\t\t\t\t\t@click=\"handleSave\">\n\t\t\t\tSave and close\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport ChecklistSection from './Section.vue';\nimport SectionErrors from './SectionErrors.vue';\nimport ConfirmationButton from 'vue-components/ConfirmationButton.vue';\nimport QuestionnairePager from 'vue-components/Questionnaire/Pager.vue';\n\nimport { checklistIsValid } from 'modules/merit-utils.js';\n\nexport default {\n\tprops: {\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tpages: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t},\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tuser: {\n\t\t\ttype: Object,\n\t\t\trequired: false\n\t\t}\n\t},\n\n\tmethods: {\n\t\tchecklistIsValid,\n\t\thandleInput(pageNum, page) {\n\t\t\tlet pages = this.pages.slice();\n\t\t\tpages[pageNum] = Object.assign({}, pages[pageNum], page);\n\n\t\t\tthis.$emit('input', {pages});\n\t\t},\n\t\thandleSave() {\n\t\t\tthis.$emit('save');\n\t\t},\n\t\thandleSubmit() {\n\t\t\tthis.$emit('submit');\n\t\t},\n\t\thandleClose() {\n\t\t\tthis.$emit('close');\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tChecklistSection,\n\t\tSectionErrors,\n\t\tConfirmationButton,\n\t\tQuestionnairePager\n\t}\n};\n</script>\n\n<style scoped>\n\t.checklist {\n\t\tfont-size: 1.25em;\n\t}\n\n\t@media (min-width: 768px) {\n\t\t.checklist {\n\t\t\tpadding: 0 1em;\n\t\t}\n\t}\n\n\t@media (min-width: 1200px) {\n\t\t.checklist {\n\t\t\tpadding: 0 2em;\n\t\t}\n\t}\n\n\t.checklist-pager-forward-enter-active,\n\t.checklist-pager-back-enter-active {\n\t\ttransition: all 0.1s ease-out;\n\t}\n\n\t.checklist-pager-forward-leave-active,\n\t.checklist-pager-back-leave-active {\n\t\ttransition: all 0.1s ease-out;\n\t}\n\n\t.checklist-pager-forward-enter, .checklist-pager-forward-leave-to {\n\t\ttransform: translateX(-10px);\n\t\topacity: 0;\n\t}\n\n\t.checklist-pager-back-enter, .checklist-pager-back-leave-to {\n\t\ttransform: translateX(10px);\n\t\topacity: 0;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/Checklist/Checklist.vue?0cb2a8c7","<script>\nimport ChecklistItem from './Item.vue';\nimport QuestionnaireInstruction from 'vue-components/Questionnaire/Instruction.vue';\nimport QuestionnaireSection from 'vue-components/Questionnaire/Section.vue';\n\nexport default {\n\textends: QuestionnaireSection,\n\tname: 'checklist-section',\n\n\tprops: {\n\t\tuser: {\n\t\t\ttype: Object,\n\t\t\trequired: false\n\t\t}\n\t},\n\n\trender(h) {\n\t\tlet items = this.items.map((item, index) => {\n\t\t\tlet componentName;\n\t\t\tswitch (item.type) {\n\t\t\t\tcase 'section':\n\t\t\t\t\tcomponentName = 'checklist-section';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'instruction':\n\t\t\t\t\tcomponentName = 'questionnaire-instruction';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'item':\n\t\t\t\t\tcomponentName = 'checklist-item';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn h(componentName, {\n\t\t\t\tprops: {\n\t\t\t\t\treadonly: this.readonly,\n\t\t\t\t\tuser: this.user,\n\t\t\t\t\t...item\n\t\t\t\t},\n\t\t\t\ton: {\n\t\t\t\t\tinput: item => {\n\t\t\t\t\t\tlet items = this.items.slice();\n\t\t\t\t\t\titems[index] = Object.assign({}, items[index], item);\n\n\t\t\t\t\t\tthis.$emit('input', {items});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tif (this.title)\n\t\t\titems.unshift(h('h1', this.title));\n\n\t\treturn h('section', {\n\t\t\tclass: {\n\t\t\t\tpage: this.page\n\t\t\t}\n\t\t}, items);\n\t},\n\n\tcomponents: {\n\t\tChecklistItem,\n\t\tQuestionnaireInstruction\n\t}\n};\n</script>\n\n<style scoped>\n\t@import url('https://fonts.googleapis.com/css?family=Roboto|Roboto+Condensed');\n\n\tsection {\n\t\tfont-size: 0.95em;\n\t\tpadding: 0 0.5em;\n\t\tmargin: 1.5em 0;\n\t\tborder-left: 2px solid rgba(0, 0, 0, 0.15);\n\t}\n\n\tsection.page {\n\t\tmargin: 0;\n\t\tborder: none;\n\t}\n\n\tsection h1 {\n\t\tfont-size: 1.75em;\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tmargin: 0 0 1em;\n\t}\n\n\tsection.page > h1 {\n\t\tfont-size: 2.5em;\n\t\tfont-family: 'Roboto Condensed', sans-serif;\n\t}\n\n\t@media (min-width: 768px) {\n\t\tsection {\n\t\t\tpadding: 0 2.5em;\n\t\t\tmargin: 2.5em 0;\n\t\t}\n\n\t\tsection h1 {\n\t\t\tfont-size: 2em;\n\t\t}\n\n\t\tsection.page > h1 {\n\t\t\tfont-size: 3em;\n\t\t}\n\t}\n\n\t@media (min-width: 1200px) {\n\t\tsection {\n\t\t\tpadding: 0 4em;\n\t\t\tmargin: 4em 0;\n\t\t}\n\n\t\tsection h1 {\n\t\t\tfont-size: 2.25em;\n\t\t}\n\n\t\tsection.page > h1 {\n\t\t\tfont-size: 4em;\n\t\t}\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/Checklist/Section.vue?48abd1f9","<template>\n\t<div class=\"checklist-item\" :class=\"{checked, readonly, editable: !readonlyToUser}\">\n\t\t<label class=\"containing-label\">\n\t\t\t<input type=\"checkbox\" :checked=\"checked\" :disabled=\"readonlyToUser\"\n\t\t\t\t@change=\"handleCheck\" />\n\n\t\t\t<span class=\"item-text\" v-html=\"markedUpText\"></span>\n\t\t</label>\n\t\t<div v-if=\"checked && hasQuestions\" class=\"item-questions\">\n\t\t\t<questionnaire-question v-for=\"(question, index) of questions\"\n\t\t\t\t:question=\"question\" :readonly=\"readonlyToUser\"\n\t\t\t\t@input=\"handleQuestionInput(index, arguments[0])\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport QuestionnaireQuestion from 'vue-components/Questionnaire/Question/Question.vue';\n\nimport snarkdown from 'snarkdown';\n\nexport default {\n\tprops: {\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tvalidator(type) {\n\t\t\t\treturn type === 'item';\n\t\t\t}\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tchecked: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tquestions: {\n\t\t\ttype: Array,\n\t\t\trequired: false\n\t\t},\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tsubjectReadonly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tuser: {\n\t\t\ttype: Object,\n\t\t\trequired: false\n\t\t}\n\t},\n\n\tcomputed: {\n\t\thasQuestions() {\n\t\t\treturn this.questions && this.questions.length > 0;\n\t\t},\n\t\tmarkedUpText() {\n\t\t\treturn snarkdown(this.text);\n\t\t},\n\t\treadonlyToUser() {\n\t\t\treturn this.readonly || (\n\t\t\t\tthis.subjectReadonly && (\n\t\t\t\t\t!this.user || this.user.type !== 'admin'\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t},\n\n\tmethods: {\n\t\thandleCheck() {\n\t\t\tif (this.readonlyToUser)\n\t\t\t\treturn;\n\n\t\t\tlet checked = !this.checked;\n\t\t\tlet item = {checked};\n\n\t\t\tif (!checked && this.questions) {\n\t\t\t\tlet questions = this.questions.map(this.clearQuestion);\n\t\t\t\titem.questions = questions;\n\t\t\t}\n\n\t\t\tthis.$emit('input', item);\n\t\t},\n\t\thandleQuestionInput(index, question) {\n\t\t\tif (this.readonlyToUser)\n\t\t\t\treturn;\n\n\t\t\tlet questions = this.questions.slice();\n\t\t\tquestions[index] = Object.assign({}, questions[index], question);\n\n\t\t\tthis.$emit('input', {questions});\n\t\t},\n\t\tclearQuestion(question) {\n\t\t\tif (this.readonlyToUser)\n\t\t\t\treturn;\n\n\t\t\tquestion = Object.assign({}, question);\n\t\t\tswitch (question.type) {\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'number':\n\t\t\t\t\tdelete question.value;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'checkbox':\n\t\t\t\tcase 'radio':\n\t\t\t\t\tquestion.options = question.options.map(option =>\n\t\t\t\t\t\tObject.assign({}, option, {checked: false})\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'list':\n\t\t\t\t\tdelete question.items;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn question;\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tQuestionnaireQuestion\n\t}\n};\n</script>\n\n<style scoped>\n\t.checklist-item {\n\t\tpadding-bottom: 0.25em;\n\t\tmargin-bottom: 0.75em;\n\t\tborder-bottom: 1px solid transparent;\n\t\tcolor: rgba(0, 0, 0, 0.5);\n\t}\n\n\t.checklist-item:hover {\n\t\tborder-bottom: 1px solid rgba(0, 0, 0, 0.15);\n\t}\n\n\t.checklist-item.editable:hover {\n\t\tcolor: rgba(0, 0, 0, 0.95);\n\t}\n\n\t.checklist-item.checked {\n\t\tcolor: rgba(0, 0, 0, 0.85);\n\t}\n\n\tlabel {\n\t\tdisplay: flex;\n\t\tfont-size: 1.25em;\n\t}\n\n\tinput[type=\"checkbox\"] {\n\t\twidth: 1em;\n\t\theight: 1em;\n\t\tmargin-right: 1em;\n\t\tflex-shrink: 0;\n\t}\n\n\t.item-text {\n\t\tfont-weight: normal;\n\t}\n\n\t.item-questions {\n\t\tmargin-left: 1em;\n\t\tpadding: 1em;\n\t}\n\n\t@media (min-width: 768px) {\n\t\tlabel {\n\t\t\tfont-size: 1.35em;\n\t\t}\n\n\t\tinput[type=\"checkbox\"] {\n\t\t\tmargin-right: 1.5em;\n\t\t}\n\n\t\t.item-questions {\n\t\t\tmargin-left: 4em;\n\t\t}\n\t}\n\n\t@media (min-width: 1200px) {\n\t\tlabel {\n\t\t\tfont-size: 1.5em;\n\t\t}\n\n\t\tinput[type=\"checkbox\"] {\n\t\t\tmargin-right: 2em;\n\t\t}\n\n\t\t.item-questions {\n\t\t\tmargin-left: 5em;\n\t\t}\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/Checklist/Item.vue?2ac929dd","<template>\n\t<validated-form-group class=\"checkbox-question\"\n\t\t\t:errors=\"validation.errors\" prop=\"options\">\n\t\t<fieldset :title=\"description\">\n\t\t\t<legend>\n\t\t\t\t{{ text }}\n\t\t\t</legend>\n\t\t\t<div class=\"options\">\n\t\t\t\t<label v-for=\"(option, index) of options\" :title=\"option.description\">\n\t\t\t\t\t<input type=\"checkbox\" :value=\"option.value\"\n\t\t\t\t\t\t:checked=\"option.checked\" :disabled=\"readonly\"\n\t\t\t\t\t\t@change=\"handleCheck(index)\" />\n\n\t\t\t\t\t<input type=\"text\" v-if=\"option.editable\"\n\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\t:value=\"option.text\"\n\t\t\t\t\t\tplacholder=\"Other\"\n\t\t\t\t\t\t@click=\"handleCheck(index)\"\n\t\t\t\t\t\t@input=\"handleEditableOptionInput(index, $event.target.value)\" />\n\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t{{ option.text }}\n\t\t\t\t\t</template>\n\n\t\t\t\t\t<div v-if=\"option.description\" class=\"question-description\"\n\t\t\t\t\t\tv-html=\"snarkdown(option.description)\">\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</fieldset>\n\n\t\t<show-hide-button v-if=\"description\" v-model=\"show.description\">\n\t\t\tdescription\n\t\t</show-hide-button>\n\t\t<div v-if=\"description\" v-show=\"show.description\">\n\t\t\t{{ markedUpDescription }}\n\t\t</div>\n\t</validated-form-group>\n</template>\n\n<script>\nimport ShowHideButton from 'vue-components/ShowHideButton.vue';\nimport ValidatedFormGroup from 'vue-components/ValidatedFormGroup.vue';\n\nimport snarkdown from 'snarkdown';\n\nimport { checkboxQuestion as validate } from 'modules/questionnaire/validate.js';\n\nexport default {\n\tmodel: {\n\t\tprop: 'options'\n\t},\n\tprops: {\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tvalidator(type) {\n\t\t\t\treturn type === 'checkbox';\n\t\t\t}\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tdescription: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t},\n\t\trequired: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tshow: {\n\t\t\t\tdescription: false\n\t\t\t}\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tmarkedUpDescription() {\n\t\t\tif (this.description)\n\t\t\t\treturn snarkdown(this.description);\n\t\t},\n\t\tvalidation() {\n\t\t\treturn validate(this);\n\t\t}\n\t},\n\n\tmethods: {\n\t\thandleCheck(index) {\n\t\t\tlet options = Array.slice(this.options);\n\t\t\toptions[index] = Object.assign({}, options[index], {\n\t\t\t\tchecked: !options[index].checked\n\t\t\t});\n\n\t\t\tthis.$emit('input', {options});\n\t\t},\n\t\thandleEditableOptionInput(index, value) {\n\t\t\tlet options = Array.slice(this.options);\n\t\t\toptions[index] = Object.assign({}, options[index], {text: value, value});\n\n\t\t\tthis.$emit('input', {options});\n\t\t},\n\t\tsnarkdown\n\t},\n\n\tcomponents: {\n\t\tShowHideButton,\n\t\tValidatedFormGroup\n\t}\n};\n</script>\n\n<style scoped>\n\t.checkbox-question {\n\t\tfont-size: 1.25em;\n\t}\n\n\tlegend {\n\t\tmargin: 0;\n\t}\n\n\t.options {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\n\t.options label {\n\t\tpadding: 1em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Questionnaire/Question/Checkbox.vue?0af95256","<template>\n\t<validated-form-group class=\"radio-question\"\n\t\t\t:errors=\"validation.errors\" prop=\"options\">\n\t\t<fieldset :title=\"description\">\n\t\t\t<legend class=\"control-label\">\n\t\t\t\t{{ text }}\n\t\t\t</legend>\n\t\t\t<div class=\"options\">\n\t\t\t\t<label v-for=\"(option, index) of options\" :title=\"option.description\">\n\t\t\t\t\t<input type=\"radio\" :value=\"option.value\"\n\t\t\t\t\t\t:checked=\"option.checked\" :disabled=\"readonly\"\n\t\t\t\t\t\t@change=\"handleCheck(index)\" />\n\n\t\t\t\t\t<input type=\"text\" v-if=\"option.editable\"\n\t\t\t\t\t\tclass=\"form-control editable-option-text\"\n\t\t\t\t\t\t:value=\"option.text\"\n\t\t\t\t\t\tplacholder=\"Other\"\n\t\t\t\t\t\t@click=\"handleCheck(index)\"\n\t\t\t\t\t\t@input=\"handleEditableOptionInput(index, $event.target.value)\" />\n\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t{{ option.text }}\n\t\t\t\t\t</template>\n\n\t\t\t\t\t<div v-if=\"option.description\" class=\"question-description\"\n\t\t\t\t\t\tv-html=\"snarkdown(option.description)\">\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</fieldset>\n\n\t\t<show-hide-button v-if=\"description\" v-model=\"show.description\">\n\t\t\tdescription\n\t\t</show-hide-button>\n\t\t<div v-if=\"description\" v-show=\"show.description\">\n\t\t\t{{ markedUpDescription }}\n\t\t</div>\n\t</validated-form-group>\n</template>\n\n<script>\nimport ShowHideButton from 'vue-components/ShowHideButton.vue';\nimport ValidatedFormGroup from 'vue-components/ValidatedFormGroup.vue';\n\nimport snarkdown from 'snarkdown';\n\nimport { radioQuestion as validate } from 'modules/questionnaire/validate.js';\n\nexport default {\n\tmodel: {\n\t\tprop: 'options'\n\t},\n\tprops: {\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tvalidator(type) {\n\t\t\t\treturn type === 'radio';\n\t\t\t}\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tdescription: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t},\n\t\trequired: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tshow: {\n\t\t\t\tdescription: false\n\t\t\t}\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tmarkedUpDescription() {\n\t\t\tif (this.description)\n\t\t\t\treturn snarkdown(this.description);\n\t\t},\n\t\tvalidation() {\n\t\t\treturn validate(this);\n\t\t}\n\t},\n\n\tmethods: {\n\t\thandleCheck(index) {\n\t\t\tlet options = this.options.map((option, i) => {\n\t\t\t\tlet newOption = Object.assign({}, option);\n\n\t\t\t\tnewOption.checked = (i === index);\n\n\t\t\t\treturn newOption;\n\t\t\t});\n\n\t\t\tthis.$emit('input', {options});\n\t\t},\n\t\thandleEditableOptionInput(index, value) {\n\t\t\tlet options = Array.slice(this.options);\n\t\t\toptions[index] = Object.assign({}, options[index], {text: value, value});\n\n\t\t\tthis.$emit('input', {options});\n\t\t},\n\t\tsnarkdown\n\t},\n\n\tcomponents: {\n\t\tShowHideButton,\n\t\tValidatedFormGroup\n\t}\n};\n</script>\n\n<style scoped>\n\t.radio-question {\n\t\tfont-size: 1.25em;\n\t}\n\n\tlegend {\n\t\tmargin: 0;\n\t}\n\n\t.options {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\n\t.options label {\n\t\tpadding: 1em;\n\t}\n\n\t.editable-option-text {\n\t\tdisplay: inline-block;\n\t\twidth: auto;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Questionnaire/Question/Radio.vue?5771416c","<script>\nimport TextItem from './TextItem.vue';\nimport PublicationItem from './PublicationItem.vue';\nimport CommitteeItem from './CommitteeItem.vue';\nimport StudyItem from './StudyItem.vue';\nimport GrantItem from './GrantItem.vue';\nimport CertificationItem from './CertificationItem.vue';\nimport EditorialBoardItem from './EditorialBoardItem.vue';\nimport ReviewItem from './ReviewItem.vue';\nimport LectureItem from './LectureItem.vue';\nimport MentorshipItem from './MentorshipItem.vue';\n\nexport default {\n\tprops: {\n\t\titems: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t},\n\t\tordered: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\n\trender(h) {\n\t\tlet listEl = this.ordered ? 'ol' : 'ul';\n\t\treturn h(listEl, this.items.map((item, index) => {\n\t\t\tconst itemComponent = this.getItemComponent(item.type);\n\n\n\t\t\treturn h(itemComponent, {\n\t\t\t\tprops: {\n\t\t\t\t\treadonly: this.readonly,\n\t\t\t\t\t...item\n\t\t\t\t},\n\t\t\t\ton: {\n\t\t\t\t\tinput: item => {\n\t\t\t\t\t\tlet items = Array.slice(this.items);\n\t\t\t\t\t\titems[index] = Object.assign({}, items[index], item);\n\n\t\t\t\t\t\tthis.$emit('change', items);\n\t\t\t\t\t},\n\t\t\t\t\tremove: () => {\n\t\t\t\t\t\tlet items = Array.slice(this.items);\n\t\t\t\t\t\titems.splice(index, 1);\n\n\t\t\t\t\t\tthis.$emit('change', items);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\t},\n\n\tmethods: {\n\t\tgetItemComponent(type) {\n\t\t\tswitch(type) {\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn 'text-item';\n\t\t\t\tcase 'publication':\n\t\t\t\t\treturn 'publication-item';\n\t\t\t\tcase 'committee':\n\t\t\t\t\treturn 'committee-item';\n\t\t\t\tcase 'study':\n\t\t\t\t\treturn 'study-item';\n\t\t\t\tcase 'grant':\n\t\t\t\tcase 'grantOther':\n\t\t\t\t\treturn 'grant-item';\n\t\t\t\tcase 'certification':\n\t\t\t\t\treturn 'certification-item';\n\t\t\t\tcase 'editorialBoard':\n\t\t\t\t\treturn 'editorial-board-item';\n\t\t\t\tcase 'review':\n\t\t\t\t\treturn 'review-item';\n\t\t\t\tcase 'lecture':\n\t\t\t\tcase 'audienceLecture':\n\t\t\t\t\treturn 'lecture-item';\n\t\t\t\tcase 'mentorship':\n\t\t\t\tcase 'subjectMentorship':\n\t\t\t\t\treturn 'mentorship-item';\n\t\t\t}\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tTextItem,\n\t\tPublicationItem,\n\t\tCommitteeItem,\n\t\tStudyItem,\n\t\tGrantItem,\n\t\tCertificationItem,\n\t\tEditorialBoardItem,\n\t\tReviewItem,\n\t\tLectureItem,\n\t\tMentorshipItem\n\t}\n};\n</script>\n\n<style scoped>\n\tul, ol {\n\t\tpadding-left: 1em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Questionnaire/Question/List/Items.vue?99797dbc","<template>\n\t<li class=\"questionnaire-list-item\">\n\t\t<div class=\"item-controls\">\n\t\t\t<confirmation-button v-if=\"!readonly\" class=\"btn btn-sm\"\n\t\t\t\t\tunpressed-class=\"btn-warning\"\n\t\t\t\t\tpressed-class=\"btn-danger\"\n\t\t\t\t\t@click=\"$emit('remove')\">\n\t\t\t\t<span class=\"glyphicon glyphicon-remove\"></span>\n\t\t\t\tRemove item\n\t\t\t</confirmation-button>\n\t\t\t<div v-if=\"invalid\" class=\"invalid-container\">\n\t\t\t\t<span class=\"glyphicon glyphicon-warning-sign\"></span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"item-contents\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t</li>\n</template>\n\n<script>\nimport ConfirmationButton from 'vue-components/ConfirmationButton.vue';\nimport ValidatedFormGroup from 'vue-components/ValidatedFormGroup.vue';\n\nexport default {\n\tprops: {\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tinvalid: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tConfirmationButton,\n\t\tValidatedFormGroup\n\t}\n};\n</script>\n\n<style scoped>\n\tli {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\n\t.item-controls {\n\t\tflex-shrink: 0;\n\t\tpadding: 1em 1em 1em 0;\n\t}\n\n\t.item-contents {\n\t\tflex-grow: 1;\n\t}\n\n\t.invalid-container .glyphicon {\n\t\tposition: absolute;\n\t\tleft: 100%;\n\t\ttransform: translateX(50%);\n\t\tpadding: 1em;\n\t\tcolor: #d9534f;\n\t\tfont-size: 2em;\n\t}\n</style>\n\n<style>\n\t.questionnaire-list-item {\n\t\tmargin-bottom: 1em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Questionnaire/Question/List/Item.vue?21bf1ccf","<template>\n\t<list-item :readonly=\"readonly\" :invalid=\"!validation.valid\"\n\t\t\t@remove=\"$emit('remove')\">\n\t\t<validated-form-group :errors=\"validation.errors\" prop=\"journal\">\n\t\t\t<label class=\"containing-label\">\n\t\t\t\tJournal\n\t\t\t\t<input type=\"text\" class=\"form-control\"\n\t\t\t\t\t:value=\"journal\" :readonly=\"readonly\"\n\t\t\t\t\t@input=\"$emit('input', {journal: $event.target.value})\" />\n\t\t\t</label>\n\t\t</validated-form-group>\n\t\t<validated-form-group :errors=\"validation.errors\" prop=\"role\">\n\t\t\t<fieldset class=\"radio-question\">\n\t\t\t\t<legend>\n\t\t\t\t\tRole\n\t\t\t\t</legend>\n\t\t\t\t<div class=\"options\">\n\t\t\t\t\t<label v-for=\"predefinedRole of predefinedRoles\">\n\t\t\t\t\t\t<input type=\"radio\" :value=\"predefinedRole\"\n\t\t\t\t\t\t\t:checked=\"role === predefinedRole\"\n\t\t\t\t\t\t\t:disabled=\"readonly\"\n\t\t\t\t\t\t\t@change=\"handleCheck\" />\n\t\t\t\t\t\t{{ kebabCaseToWords(predefinedRole) }}\n\t\t\t\t\t</label>\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type=\"radio\" :value=\"otherRole\"\n\t\t\t\t\t\t\t:checked=\"role === otherRole\"\n\t\t\t\t\t\t\t:disabled=\"readonly\"\n\t\t\t\t\t\t\t@change=\"handleCheck\" />\n\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\tclass=\"form-control editable-option-text\"\n\t\t\t\t\t\t\tplaceholder=\"Other\"\n\t\t\t\t\t\t\t:readonly=\"readonly\"\n\t\t\t\t\t\t\tv-model=\"otherRole\"\n\t\t\t\t\t\t\t@click=\"handleOtherCheck\" />\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</validated-form-group>\n\t</list-item>\n</template>\n\n<script>\nimport ListItem from './Item.vue';\n\nimport { kebabCaseToWords } from 'modules/utils.js';\nimport { editorialBoardListItem as validate } from 'modules/questionnaire/validate.js';\n\nconst predefinedRoles = [\n\t'editor-in-chief',\n\t'associate-editor',\n\t'executive-editor',\n\t'statistical-editor'\n];\n\nexport default {\n\textends: ListItem,\n\tprops: {\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t\tvalidator(type) {\n\t\t\t\treturn type === 'editorialBoard';\n\t\t\t}\n\t\t},\n\t\tjournal: {\n\t\t\ttype: String,\n\t\t\tdefault: ''\n\t\t},\n\t\trole: {\n\t\t\ttype: String\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\totherRole: predefinedRoles.includes(this.role)\n\t\t\t\t? ''\n\t\t\t\t: this.role\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tpredefinedRoles() {\n\t\t\treturn predefinedRoles;\n\t\t},\n\t\tvalidation() {\n\t\t\treturn validate(this);\n\t\t}\n\t},\n\n\twatch: {\n\t\totherRole(otherRole) {\n\t\t\tthis.$emit('input', {role: otherRole});\n\t\t}\n\t},\n\n\tmethods: {\n\t\tkebabCaseToWords,\n\t\thandleCheck(event) {\n\t\t\tif (this.readonly)\n\t\t\t\treturn;\n\n\t\t\tthis.$emit('input', {role: event.target.value});\n\t\t},\n\t\thandleOtherCheck() {\n\t\t\tif (this.readonly)\n\t\t\t\treturn;\n\n\t\t\tthis.$emit('input', {role: this.otherRole});\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tListItem\n\t}\n};\n</script>\n\n<style scoped>\n\t.radio-question {\n\t\tfont-size: 1.25em;\n\t}\n\n\tlegend {\n\t\tmargin: 0;\n\t}\n\n\t.options {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\n\t.options label {\n\t\tpadding: 1em;\n\t}\n\n\t.editable-option-text {\n\t\tdisplay: inline-block;\n\t\twidth: auto;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Questionnaire/Question/List/EditorialBoardItem.vue?74bddc1e","<template>\n\t<div class=\"instruction-block\" v-html=\"markedUpText\"></div>\n</template>\n\n<script>\nimport { Parser as CommonmarkParser, HtmlRenderer } from 'commonmark';\n\nconst reader = new CommonmarkParser();\nconst writer = new HtmlRenderer();\n\nexport default {\n\tprops: {\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tvalidator(type) {\n\t\t\t\treturn type === 'instruction';\n\t\t\t}\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tmarkedUpText() {\n\t\t\treturn writer.render(reader.parse(this.text));\n\t\t}\n\t}\n};\n</script>\n\n<style scoped>\n\t.instruction-block {\n\t\tfont-size: 1.25em;\n\t}\n\n\t@media (min-width: 768px) {\n\n\t\t.instruction-block {\n\t\t\tmargin: 1em;\n\t\t\tpadding: 1em;\n\t\t}\n\t}\n</style>\n\n<style>\n\t.instruction-block p {\n\t\tmargin-bottom: 1.5em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Questionnaire/Instruction.vue?3013fb0c","<template>\n\t<bootstrap-alert v-if=\"validation && !validation.valid\">\n\t\t<p>\n\t\t\t{{ errors.length }} error{{ errors.length !== 1 ? 's': '' }}\n\t\t\ton current page\n\t\t</p>\n\t\t<button type=\"button\" class=\"btn btn-danger\"\n\t\t\t\t@click=\"scrollToError\">\n\t\t\tScroll to error\n\t\t</button>\n\t</bootstrap-alert>\n</template>\n\n<script>\nimport BootstrapAlert from 'vue-components/BootstrapAlert.vue';\nimport { section as validate, flattenErrors } from 'modules/merits/validate.js';\n\nimport { getHeaderHeight } from 'modules/dom-utils.js';\n\nexport default {\n\tprops: {\n\t\tpage: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tvalidation() {\n\t\t\treturn validate(this.page);\n\t\t},\n\t\terrors() {\n\t\t\tif (!this.validation)\n\t\t\t\treturn [];\n\n\t\t\treturn flattenErrors(this.validation.errors);\n\t\t}\n\t},\n\n\tmethods: {\n\t\tscrollToError() {\n\t\t\t$('.invalid-container').first().parents('.checklist-item')\n\t\t\t\t.velocity('scroll', {\n\t\t\t\t\toffset: -1 * getHeaderHeight()\n\t\t\t\t});\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tBootstrapAlert\n\t}\n};\n</script>\n\n<style scoped>\n\t.alert {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/Checklist/SectionErrors.vue?c07467b0","<template>\n\t<div ref=\"pager\" class=\"questionnaire-pager\">\n\t\t<checklist-errors :pages=\"pages\" @navigate=\"goToPage\" />\n\t\t<pager-controls :current-page=\"currentPage\"\n\t\t\t:total-pages=\"pages.length\"\n\t\t\t:submit-text=\"submitText\"\n\t\t\t:forward-text=\"forwardText\"\n\t\t\t:back-text=\"backText\"\n\t\t\t:can-advance-page=\"canAdvancePage\"\n\t\t\t:can-go-back-page=\"canGoBackPage\"\n\t\t\t:can-submit=\"canSubmit\"\n\t\t\t:readonly=\"readonly\"\n\t\t\t@back=\"goBack\"\n\t\t\t@forward=\"advance\"\n\t\t\t@submit=\"submit\" />\n\n\t\t<button type=\"button\" class=\"scroll-button btn\"\n\t\t\t\t@click=\"scrollToBottom\">\n\t\t\t<span class=\"glyphicon glyphicon-arrow-down\"></span>\n\t\t\tScroll to bottom\n\t\t</button>\n\n\t\t<div class=\"pager-content\">\n\t\t\t<slot :page=\"page\"\n\t\t\t\t:page-num=\"currentPage\"\n\t\t\t\t:last-change=\"lastChange\">\n\t\t\t</slot>\n\t\t</div>\n\n\t\t<button type=\"button\" class=\"scroll-button btn\"\n\t\t\t\t@click=\"scrollToTop\">\n\t\t\t<span class=\"glyphicon glyphicon-arrow-up\"></span>\n\t\t\tScroll to top\n\t\t</button>\n\n\t\t<pager-controls :current-page=\"currentPage\"\n\t\t\t:total-pages=\"pages.length\"\n\t\t\t:submit-text=\"submitText\"\n\t\t\t:forward-text=\"forwardText\"\n\t\t\t:back-text=\"backText\"\n\t\t\t:can-advance-page=\"canAdvancePage\"\n\t\t\t:can-go-back-page=\"canGoBackPage\"\n\t\t\t:can-submit=\"canSubmit\"\n\t\t\t:readonly=\"readonly\"\n\t\t\t@back=\"goBack\"\n\t\t\t@forward=\"advance\"\n\t\t\t@submit=\"submit\" />\n\t</div>\n</template>\n\n<script>\nimport PagerControls from './PagerControls.vue';\nimport ChecklistErrors from '../MeritCompensation/Checklist/ChecklistErrors.vue';\n\nimport { getHeaderHeight } from 'modules/dom-utils.js';\n\nexport default {\n\tprops: {\n\t\tpages: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t},\n\t\tpageValidator: {\n\t\t\ttype: Function,\n\t\t\tdefault() {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tchecklistValidator: {\n\t\t\ttype: Function,\n\t\t\tdefault() {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tsubmitText: {\n\t\t\ttype: String,\n\t\t\tdefault: 'Submit'\n\t\t},\n\t\tforwardText: {\n\t\t\ttype: String,\n\t\t\tdefault: 'Next page'\n\t\t},\n\t\tbackText: {\n\t\t\ttype: String,\n\t\t\tdefault: 'Back'\n\t\t},\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcurrentPage: 0,\n\t\t\tlastChange: ''\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tpage() {\n\t\t\treturn this.pages[this.currentPage];\n\t\t},\n\t\tcanGoBackPage() {\n\t\t\treturn this.currentPage > 0;\n\t\t},\n\t\tcanAdvancePage() {\n\t\t\treturn this.pageValidator(this.pages[this.currentPage]);\n\t\t},\n\t\tcanSubmit() {\n\t\t\treturn this.checklistValidator({ pages: this.pages });\n\t\t}\n\t},\n\n\twatch: {\n\t\tcurrentPage(currentPage, prevPage) {\n\t\t\tif (currentPage > prevPage)\n\t\t\t\tthis.lastChange = 'forward';\n\t\t\telse if (currentPage < prevPage)\n\t\t\t\tthis.lastChange = 'back';\n\t\t\telse\n\t\t\t\tthis.lastChange = '';\n\t\t}\n\t},\n\n\tmethods: {\n\t\tscrollToTop() {\n\t\t\t$(this.$refs.pager).velocity('scroll', {\n\t\t\t\toffset: -1 * getHeaderHeight()\n\t\t\t});\n\t\t},\n\t\tscrollToBottom() {\n\t\t\t$(this.$refs.pager).velocity('scroll', {\n\t\t\t\toffset: (\n\t\t\t\t\tthis.$refs.pager.clientHeight\n\t\t\t\t\t- window.innerHeight\n\t\t\t\t)\n\t\t\t});\n\t\t},\n\t\tgoBack() {\n\t\t\tif (this.canGoBackPage) {\n\t\t\t\tthis.scrollToTop();\n\t\t\t\tthis.currentPage--;\n\t\t\t}\n\t\t},\n\t\tadvance() {\n\t\t\tif (this.canAdvancePage) {\n\t\t\t\tthis.scrollToTop();\n\t\t\t\tthis.currentPage++;\n\t\t\t}\n\t\t},\n\t\tgoToPage(page) {\n\t\t\tthis.scrollToTop();\n\t\t\tthis.currentPage = page;\n\t\t},\n\t\tsubmit() {\n\t\t\tif (this.canSubmit)\n\t\t\t\tthis.$emit('submit');\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tPagerControls,\n\t\tChecklistErrors\n\t}\n};\n</script>\n\n<style scoped>\n\t.scroll-button {\n\t\tdisplay: block;\n\t\tmargin-left: auto;\n\t}\n\n\t.scroll-button .glyphicon {\n\t\tdisplay: block;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Questionnaire/Pager.vue?6b0d2c40","<template>\n\t<div class=\"pager-controls\">\n\t\t<div class=\"button-container\">\n\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t:disabled=\"!canGoBackPage\"\n\t\t\t\t\t@click=\"$emit('back')\">\n\t\t\t\t{{ backText }}\n\t\t\t</button>\n\t\t</div>\n\n\t\t<progress-bullets :max=\"totalPages\" :value=\"currentPage + 1\" />\n\n\t\t<div class=\"button-container\">\n\t\t\t<button v-if=\"currentPage < totalPages - 1\" type=\"button\"\n\t\t\t\t\tclass=\"btn btn-default\" :disabled=\"!canAdvancePage\"\n\t\t\t\t\t@click=\"$emit('forward')\">\n\t\t\t\t{{ forwardText }}\n\t\t\t</button>\n\t\t\t<confirmation-button v-else-if=\"!readonly\"\n\t\t\t\t\tclass=\"btn btn-primary\" pressed-class=\"btn-success\"\n\t\t\t\t\t:disabled=\"!canSubmit\"\n\t\t\t\t\t@click=\"$emit('submit')\">\n\t\t\t\t{{ submitText }}\n\t\t\t\t<template slot=\"pressed\">\n\t\t\t\t\tConfirm\n\t\t\t\t</template>\n\t\t\t</confirmation-button>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport ConfirmationButton from 'vue-components/ConfirmationButton.vue';\nimport ProgressBullets from 'vue-components/ProgressBullets.vue';\n\nexport default {\n\tprops: {\n\t\tcurrentPage: {\n\t\t\ttype: Number,\n\t\t\trequired: true\n\t\t},\n\t\ttotalPages: {\n\t\t\ttype: Number,\n\t\t\trequired: true\n\t\t},\n\t\tsubmitText: {\n\t\t\ttype: String,\n\t\t\tdefault: 'Submit'\n\t\t},\n\t\tforwardText: {\n\t\t\ttype: String,\n\t\t\tdefault: 'Next page'\n\t\t},\n\t\tbackText: {\n\t\t\ttype: String,\n\t\t\tdefault: 'Back'\n\t\t},\n\t\tcanGoBackPage: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t},\n\t\tcanAdvancePage: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t},\n\t\tcanSubmit: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t},\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tcomputed: {\n\n\t},\n\n\tcomponents: {\n\t\tConfirmationButton,\n\t\tProgressBullets\n\t}\n};\n</script>\n\n<style scoped>\n\t.pager-controls {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t}\n\n\t.button-container {\n\t\tdisplay: inline-block;\n\t\tmargin: 0.5em;\n\t}\n\n\tbutton,\n\tconfirmation-button {\n\t\tmin-width: 100px;\n\t}\n\n\t.progress-bullets {\n\t\tdisplay: inline-block;\n\t\tmargin: 0.5em 2em;\n\t}\n\n\t@media (max-width: 768px) {\n\t\t.progress-bullets {\n\t\t\twidth: 100%;\n\t\t\torder: 1;\n\t\t}\n\n\t\t.button-container {\n\t\t\torder: 2;\n\t\t}\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Questionnaire/PagerControls.vue?30408960","<template>\n\t<div class=\"progress-bullets\"\n\t\t\trole=\"progressbar\" :aria-valuemin=\"min\" :aria-valuemax=\"max\"\n\t\t\t:aria-valuenow=\"value\" :title=\"label\">\n\t\t<div v-for=\"i in max\" class=\"bullet\" :class=\"{filled: i <= value}\">\n\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tprops: {\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefault: 'bar'\n\t\t},\n\t\tmin: {\n\t\t\ttype: Number,\n\t\t\tdefault: 0\n\t\t},\n\t\tmax: {\n\t\t\ttype: Number,\n\t\t\trequired: true\n\t\t},\n\t\tvalue: {\n\t\t\ttype: Number,\n\t\t\trequired: true\n\t\t},\n\t\tstepName: {\n\t\t\ttype: String,\n\t\t\tdefault: 'Page'\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tlabel() {\n\t\t\treturn `${this.stepName} ${this.value} of ${this.max}`;\n\t\t}\n\t}\n};\n</script>\n\n<style scoped>\n\t.progress-bullets {\n\t\tdisplay: inline-block;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t.bullet {\n\t\tdisplay: inline-block;\n\t\tmargin: 1em;\n\t\twidth: 0.5em;\n\t\theight: 0.5em;\n\t\tborder-radius: 0.5em;\n\t\tbackground-color: rgba(0, 0, 0, 0.35);\n\t}\n\n\t.bullet.filled {\n\t\tbackground-color: rgba(0, 0, 0, 0.75);\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/ProgressBullets.vue?03224a45","<template>\n\t<div class=\"summary-by-id\">\n\t\t<div class=\"container body-block\" v-if=\"meritReport\">\n\t\t\t<merit-report-summary\n\t\t\t\tv-bind=\"meritReport\"\n\t\t\t\t:title=\"title\"\n\t\t\t\t:subject-name=\"meritReport.user.full_name\"\n\t\t\t\t@close=\"$emit('close')\"\n\t\t\t\t@alert=\"$emit('alert', arguments[0])\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport MeritReportSummary from './Summary.vue';\n\nimport { fetchAllMeritReports } from 'modules/merit-utils.js';\n\nexport default {\n\tprops: {\n\t\tid: {\n\t\t\ttype: [ Number, String ],\n\t\t\trequired: true\n\t\t},\n\t\tmeritReports: {\n\t\t\ttype: Array,\n\t\t\trequired: false\n\t\t},\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tcurrentUser: {\n\t\t\ttype: Object,\n\t\t\trequired: false\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tfetchedReports: null\n\t\t};\n\t},\n\n\tcomputed: {\n\t\treports() {\n\t\t\treturn this.meritReports || this.fetchedReports;\n\t\t},\n\t\tmeritReport() {\n\t\t\tlet id = Number(this.id);\n\t\t\tif (Number.isNaN(id) || !this.reports)\n\t\t\t\treturn;\n\n\t\t\treturn this.reports.find(report => report.id === id);\n\t\t}\n\t},\n\n\tmounted() {\n\t\tif (\n\t\t\t!this.meritReports\n\t\t\t|| !Array.isArray(this.meritReports)\n\t\t\t|| this.meritReports.length === 0\n\t\t) {\n\t\t\tthis.fetchReports();\n\t\t}\n\t},\n\n\tmethods: {\n\t\tfetchReports() {\n\t\t\tfetchAllMeritReports().then(merits => {\n\t\t\t\tthis.fetchedReports = merits;\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t\tthis.alerts.push({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\thtml: '<strong>Error:</strong> There was a problem fetching past merit reports'\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tMeritReportSummary\n\t}\n};\n</script>\n\n<style scoped>\n\t.summary-by-id {\n\t\torder: 2;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/SummaryById.vue?586274d0","<template>\n\t<div class=\"panel panel-default\">\n\t\t<div class=\"form-summary panel-heading\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t<small>Name</small>\n\t\t\t\t\t{{ subjectName }}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t<small>Report period</small>\n\t\t\t\t\t<rich-date-range :dates=\"dates\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t<small>Checked items</small>\n\t\t\t\t\t{{ checkedItems }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"panel-body\">\n\t\t\t<merit-compensation-summary-checklist v-bind=\"checklist\"\n\t\t\t\t:title=\"title\" />\n\t\t</div>\n\n\t\t<div class=\"panel panel-default notes-container\">\n\t\t\t<div class=\"panel-heading\">\n\t\t\t\tNotes\n\t\t\t</div>\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<textarea class=\"form-control\"\n\t\t\t\t\t:value=\"notes\" readonly>\n\t\t\t\t</textarea>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"panel-footer text-center\">\n\t\t\t<button type=\"button\" class=\"btn btn-default\"\n\t\t\t\t\t@click=\"$emit('close')\">\n\t\t\t\tClose\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport moment from 'moment';\n\nimport MeritCompensationSummaryChecklist from './Checklist/Summary/Checklist.vue';\n\nimport AcademicYearSelector from 'vue-components/AcademicYearSelector.vue';\nimport LoadingButton from 'vue-components/LoadingButton.vue';\nimport RichDateRange from 'vue-components/RichDateRange.vue';\n\nimport { isoDateString } from 'modules/date-utils.js';\nimport { getCheckedItemCount } from 'modules/merit-utils.js';\n\nexport default {\n\tprops: {\n\t\tid: {\n\t\t\ttype: Number,\n\t\t\trequired: false\n\t\t},\n\t\tperiod_start: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tperiod_end: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\treport: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tstatus: {\n\t\t\ttype: String,\n\t\t\tdefault: 'pending'\n\t\t},\n\t\tnotes: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tsubjectName: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tdates: {\n\t\t\t\tstartDate: this.period_start,\n\t\t\t\tendDate: this.period_end\n\t\t\t},\n\t\t\tchecklist: this.report,\n\n\t\t\tshow: {\n\t\t\t\tnotes: false\n\t\t\t}\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tcheckedItems() {\n\t\t\treturn getCheckedItemCount(this.report);\n\t\t},\n\t\tlastMonth() {\n\t\t\treturn isoDateString(moment().subtract(1, 'month'));\n\t\t}\n\t},\n\n\twatch: {\n\t\tperiod_start(period_start) {\n\t\t\tthis.dates = Object.assign({}, this.dates, {startDate: period_start});\n\t\t},\n\t\tperiod_end(period_end) {\n\t\t\tthis.dates = Object.assign({}, this.dates, {endDate: period_end});\n\t\t},\n\t\treport(report) {\n\t\t\tthis.checklist = report;\n\t\t},\n\t\tnotes(notes) {\n\t\t\tthis.inputNotes = notes;\n\t\t}\n\t},\n\n\tmethods: {\n\t\thandleClose() {\n\t\t\tthis.$emit('close');\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tMeritCompensationSummaryChecklist,\n\n\t\tAcademicYearSelector,\n\t\tLoadingButton,\n\t\tRichDateRange\n\t}\n};\n</script>\n\n<style scoped>\n\tsmall {\n\t\tfont-size: 0.75em;\n\t\tcolor: rgba(0, 0, 0, 0.55);\n\t\tdisplay: block;\n\t}\n\n\t.notes-container {\n\t\tmargin-top: 2em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/Summary.vue?9a172f38","<script>\nimport ChecklistItem from '../Item.vue';\nimport QuestionnaireInstruction from 'vue-components/Questionnaire/Instruction.vue';\nimport QuestionnaireSection from 'vue-components/Questionnaire/Section.vue';\n\nimport { itemIsChecked } from 'modules/merit-utils.js';\n\nexport default {\n\textends: QuestionnaireSection,\n\tname: 'checklist-section',\n\n\tprops: {\n\t\tuser: {\n\t\t\ttype: Object,\n\t\t\trequired: false\n\t\t}\n\t},\n\n\trender(h) {\n\t\tlet items = this.items.filter(item =>\n\t\t\titemIsChecked(item)\n\t\t).map((item, index) => {\n\t\t\tlet componentName;\n\t\t\tswitch (item.type) {\n\t\t\t\tcase 'section':\n\t\t\t\t\tcomponentName = 'checklist-section';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'instruction':\n\t\t\t\t\tcomponentName = 'questionnaire-instruction';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'item':\n\t\t\t\t\tcomponentName = 'checklist-item';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn h(componentName, {\n\t\t\t\tprops: {\n\t\t\t\t\treadonly: this.readonly,\n\t\t\t\t\tuser: this.user,\n\t\t\t\t\t...item\n\t\t\t\t},\n\t\t\t\ton: {\n\t\t\t\t\tinput: item => {\n\t\t\t\t\t\tlet items = this.items.slice();\n\t\t\t\t\t\titems[index] = Object.assign({}, items[index], item);\n\n\t\t\t\t\t\tthis.$emit('input', {items});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tif (this.title)\n\t\t\titems.unshift(h('h1', this.title));\n\n\t\treturn h('section', {\n\t\t\tclass: {\n\t\t\t\tpage: this.page\n\t\t\t}\n\t\t}, items);\n\t},\n\n\tcomponents: {\n\t\tChecklistItem,\n\t\tQuestionnaireInstruction\n\t}\n};\n</script>\n\n<style scoped>\n\t@import url('https://fonts.googleapis.com/css?family=Roboto|Roboto+Condensed');\n\n\tsection {\n\t\tfont-size: 0.95em;\n\t\tpadding: 0 1.5em;\n\t\tmargin: 1.5em 0;\n\t\tborder-left: 2px solid rgba(0, 0, 0, 0.15);\n\t}\n\n\tsection.page {\n\t\tmargin: 0;\n\t\tborder: none;\n\t}\n\n\tsection h1 {\n\t\tfont-size: 1.75em;\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tmargin: 0 0 1em;\n\t}\n\n\tsection.page > h1 {\n\t\tfont-size: 2.5em;\n\t\tfont-family: 'Roboto Condensed', sans-serif;\n\t}\n\n\t@media (min-width: 768px) {\n\t\tsection {\n\t\t\tpadding: 0 2.5em;\n\t\t\tmargin: 2.5em 0;\n\t\t}\n\n\t\tsection h1 {\n\t\t\tfont-size: 2em;\n\t\t}\n\n\t\tsection.page > h1 {\n\t\t\tfont-size: 3em;\n\t\t}\n\t}\n\n\t@media (min-width: 1200px) {\n\t\tsection {\n\t\t\tpadding: 0 4em;\n\t\t\tmargin: 4em 0;\n\t\t}\n\n\t\tsection h1 {\n\t\t\tfont-size: 2.25em;\n\t\t}\n\n\t\tsection.page > h1 {\n\t\t\tfont-size: 4em;\n\t\t}\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/Checklist/Summary/Section.vue?ebaf53b4","<template>\n\t<div class=\"merit-report-list-item\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-sm-1\">\n\t\t\t\t<small>#</small>\n\t\t\t\t<span>{{ id }}</span>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-2\">\n\t\t\t\t<small>Form</small>\n\t\t\t\t<span>{{ form.name }}</span>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-3\">\n\t\t\t\t<small>Period</small>\n\t\t\t\t<rich-date-range :dates=\"dates\" />\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-2 checked-items-cell\">\n\t\t\t\t<small>Checked items</small>\n\t\t\t\t{{ checkedItems }}\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-2\">\n\t\t\t\t<span class=\"label\" :class=\"statusLabel\">\n\t\t\t\t\t{{ ucfirst(status) }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-2 controls-cell\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-info btn-xs\"\n\t\t\t\t\t\t@click=\"$emit('click', id)\">\n\t\t\t\t\t<span class=\"glyphicon\" :class=\"viewEditGlyph\"></span>\n\t\t\t\t\t{{ viewEditText }}\n\t\t\t\t</button>\n\n\t\t\t\t<button type=\"button\" class=\"btn btn-info btn-xs\"\n\t\t\t\t\t\t@click=\"$emit('summary', id)\">\n\t\t\t\t\t<span class=\"glyphicon glyphicon-list-alt\"></span>\n\t\t\t\t\tView summary\n\t\t\t\t</button>\n\n\t\t\t\t<template v-if=\"userIsAdmin\">\n\t\t\t\t\t<confirmation-button v-if=\"status === 'complete'\"\n\t\t\t\t\t\t\tclass=\"btn btn-xs btn-primary\"\n\t\t\t\t\t\t\t@click=\"openForEditing\">\n\t\t\t\t\t\t<span class=\"glyphicon glyphicon-edit\"></span>\n\t\t\t\t\t\tOpen for editing\n\t\t\t\t\t</confirmation-button>\n\t\t\t\t\t<confirmation-button v-else-if=\"status === 'open for editing'\"\n\t\t\t\t\t\t\tclass=\"btn btn-xs btn-primary\"\n\t\t\t\t\t\t\t@click=\"closeEditing\">\n\t\t\t\t\t\t<span class=\"glyphicon glyphicon-check\"></span>\n\t\t\t\t\t\tClose editing\n\t\t\t\t\t</confirmation-button>\n\n\t\t\t\t\t<confirmation-button v-if=\"status === 'disabled'\"\n\t\t\t\t\t\t\tclass=\"btn btn-xs btn-success\"\n\t\t\t\t\t\t\t@click=\"enableReport\">\n\t\t\t\t\t\t<span class=\"glyphicon glyphicon-check\"></span>\n\t\t\t\t\t\tEnable report\n\t\t\t\t\t</confirmation-button>\n\t\t\t\t\t<confirmation-yes-no v-else\n\t\t\t\t\t\t\tdefault-class=\"btn btn-xs btn-danger\"\n\t\t\t\t\t\t\tyes-class=\"btn btn-xs btn-danger\"\n\t\t\t\t\t\t\tno-class=\"btn btn-xs btn-default\"\n\t\t\t\t\t\t\t@click=\"disableReport\">\n\t\t\t\t\t\t<span class=\"glyphicon glyphicon-remove\"></span>\n\t\t\t\t\t\tDisable report\n\n\t\t\t\t\t\t<template slot=\"yes\">\n\t\t\t\t\t\t\tYes, disable report\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template slot=\"no\">\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</confirmation-yes-no>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport ConfirmationButton from 'vue-components/ConfirmationButton.vue';\nimport ConfirmationYesNo from 'vue-components/ConfirmationYesNo.vue';\nimport RichDateRange from 'vue-components/RichDateRange.vue';\n\nimport { getFetchHeaders, okOrThrow, ucfirst } from 'modules/utils.js';\nimport { getEvaluationStatusLabel } from 'modules/datatable-utils.js';\nimport { getCheckedItemCount } from 'modules/merit-utils.js';\n\nexport default {\n\tprops: {\n\t\tid: {\n\t\t\ttype: Number,\n\t\t\trequired: true\n\t\t},\n\t\tperiod_start: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tperiod_end: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\treport: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tstatus: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tform: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tuser: {\n\t\t\ttype: Object,\n\t\t\trequired: false\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tuserIsAdmin() {\n\t\t\treturn this.user && this.user.type === 'admin';\n\t\t},\n\t\tdates() {\n\t\t\treturn {\n\t\t\t\tstartDate: this.period_start,\n\t\t\t\tendDate: this.period_end\n\t\t\t};\n\t\t},\n\t\tviewEditText() {\n\t\t\treturn ['pending', 'open for editing'].includes(this.status)\n\t\t\t\t? 'Complete'\n\t\t\t\t: 'View';\n\t\t},\n\t\tviewEditGlyph() {\n\t\t\treturn ['pending', 'open for editing'].includes(this.status)\n\t\t\t\t? 'glyphicon-pencil'\n\t\t\t\t: 'glyphicon-list-alt';\n\t\t},\n\t\tstatusLabel() {\n\t\t\treturn getEvaluationStatusLabel(this.status);\n\t\t},\n\t\tcheckedItems() {\n\t\t\treturn getCheckedItemCount(this.report);\n\t\t}\n\t},\n\n\tmethods: {\n\t\tucfirst,\n\t\topenForEditing() {\n\t\t\tif (this.user.type !== 'admin' || this.status !== 'complete')\n\t\t\t\treturn;\n\n\t\t\tthis.updateReport({\n\t\t\t\tstatus: 'open for editing'\n\t\t\t});\n\t\t},\n\t\tcloseEditing() {\n\t\t\tif (this.user.type !== 'admin' || this.status !== 'open for editing')\n\t\t\t\treturn;\n\n\t\t\tthis.updateReport({\n\t\t\t\tstatus: 'complete'\n\t\t\t});\n\t\t},\n\t\tdisableReport() {\n\t\t\tif (this.user.type !== 'admin')\n\t\t\t\treturn;\n\n\t\t\tthis.updateReport({\n\t\t\t\tstatus: 'disabled'\n\t\t\t});\n\t\t},\n\t\tenableReport() {\n\t\t\tif (this.user.type !== 'admin')\n\t\t\t\treturn;\n\n\t\t\tthis.updateReport({\n\t\t\t\tstatus: 'open for editing'\n\t\t\t});\n\t\t},\n\t\tupdateReport(changes) {\n\t\t\tfetch(`/merits/${this.id}`, {\n\t\t\t\tmethod: 'POST', // PATCH\n\t\t\t\theaders: getFetchHeaders(),\n\t\t\t\tcredentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(Object.assign(changes, {\n\t\t\t\t\t_method: 'PATCH'\n\t\t\t\t}))\n\t\t\t}).then(okOrThrow).then(() => {\n\t\t\t\tthis.$emit('change');\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t\tthis.$emit('alert', {\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\thtml: '<strong>Error:</strong> There was a problem updating the merit report'\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tConfirmationButton,\n\t\tConfirmationYesNo,\n\t\tRichDateRange\n\t}\n};\n</script>\n\n<style scoped>\n\t.merit-report-list-item {\n\t\tborder-bottom: 1px solid rgba(0, 0, 0, 0.25);\n\t\tpadding: 5px 0;\n\t}\n\n\t.merit-report-list-item:nth-child(even) {\n\t\tbackground-color: rgba(0, 0, 0, 0.05);\n\t}\n\n\tsmall {\n\t\tfont-size: 0.75em;\n\t\tcolor: rgba(0, 0, 0, 0.55);\n\t\tdisplay: block;\n\t}\n\n\t.checked-items-cell,\n\t.controls-cell {\n\t\ttext-align: right;\n\t}\n\n\t.controls-cell button {\n\t\tmargin: 0.1em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/ReportListItem.vue?fe7b072c","<script>\nimport PrintViewChecklistItem from './Item.vue';\nimport QuestionnairePrintViewSection from 'vue-components/Questionnaire/PrintView/Section.vue';\n\nimport { itemIsChecked } from 'modules/merit-utils.js';\n\nexport default {\n\textends: QuestionnairePrintViewSection,\n\tname: 'print-view-checklist-section',\n\n\trender() {\n\t\tlet items = this.items.filter(item =>\n\t\t\t\titemIsChecked(item)\n\t\t\t).map(item => {\n\t\t\tlet component;\n\n\t\t\tlet vnodeData = {props: item};\n\n\t\t\tswitch (item.type) {\n\t\t\t\tcase 'section':\n\t\t\t\t\tcomponent = <print-view-checklist-section {...vnodeData} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'item':\n\t\t\t\t\tcomponent = <PrintViewChecklistItem {...vnodeData} />;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<tr class={`print-view-checklist-${item.type}-row`}>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{component}\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<table class=\"print-view-checklist-section\">\n\t\t{\n\t\t\tthis.title && (\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{this.title}</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t)\n\t\t}\n\t\t\t\t<tbody>\n\t\t\t\t\t{items}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n};\n</script>\n\n<style scoped>\n\t.print-view-checklist-section thead th,\n\t.print-view-checklist-section tbody td {\n\t\tpadding: 0.5em 0 0.5em 1em;\n\t}\n\n\t.print-view-checklist-section {\n\t\tmargin: 2em 0.5em;\n\t\twidth: 100%;\n\t}\n</style>\n\n<style>\n\t@import url('https://fonts.googleapis.com/css?family=Roboto|Roboto+Condensed');\n\n\tdiv > .print-view-checklist-section {\n\t\tmargin-top: 1.5em;\n\t}\n\n\t.print-view-checklist-section {\n\t\tborder-left: none;\n\t}\n\n\t.print-view-checklist-section .print-view-checklist-section {\n\t\tborder-left: 2px solid #dedede;\n\t}\n\n\t.print-view-checklist-section > thead > tr > th {\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tcolor: rgba(0, 0, 0, 0.65);\n\t\tfont-size: 2em;\n\t}\n\n\t.print-view-checklist-section .print-view-checklist-section > thead > tr > th {\n\t\tfont-size: 1.75em;\n\t}\n\n\t.print-view-checklist-section .print-view-checklist-section .print-view-checklist-section > thead > tr > th {\n\t\tfont-size: 1.5em;\n\t}\n\n\t.print-view-checklist-item-row {\n\t\tborder-bottom: 1px solid rgba(0, 0, 0, 0.1);\n\t}\n\n\t.print-view-checklist-item-row:nth-child(even) {\n\t\tbackground-color: rgba(0, 0, 0, 0.05);\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/Checklist/PrintView/Section.vue?18fa119e","<template>\n\t<table class=\"print-view-checklist-item\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th v-html=\"markedUpText\"></th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<print-view-question v-for=\"question of questions\"\n\t\t\t\t:question=\"question\" />\n\t\t</tbody>\n\t</table>\n</template>\n\n<script>\nimport PrintViewQuestion from 'vue-components/Questionnaire/PrintView/Question/Question.vue';\n\nimport snarkdown from 'snarkdown';\n\nexport default {\n\tprops: {\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tvalidator(type) {\n\t\t\t\treturn type === 'item';\n\t\t\t}\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tquestions: {\n\t\t\ttype: Array,\n\t\t\trequired: false\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tmarkedUpText() {\n\t\t\treturn snarkdown(this.text);\n\t\t}\n\t},\n\n\tcomponents: {\n\t\tPrintViewQuestion\n\t}\n};\n</script>\n\n<style scoped>\n\ttable {\n\t\tmargin-left: 1em;\n\t}\n\n\tthead th {\n\t\tfont-size: 1.15em;\n\t\tfont-weight: normal;\n\t}\n\n\ttbody {\n\t\tmargin-left: 1em;\n\t\tfont-size: 0.85em;\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/MeritCompensation/Checklist/PrintView/Item.vue?45116bbd","<template>\n\t<tr>\n\t\t<th>{{ text }}</th>\n\t\t<td>{{ value }}</td>\n\t</tr>\n</template>\n\n<script>\nexport default {\n\tprops: {\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\tdefault: ''\n\t\t}\n\t}\n};\n</script>\n\n<style scoped>\n\tth, td {\n\t\tpadding: 0.5em;\n\t}\n\n\tth {\n\t\tpadding-left: 1em;\n\t}\n\n\t@media (min-width: 768px) {\n\t\tth {\n\t\t\tpadding-left: 5em;\n\t\t}\n\t}\n\n\t@media (min-width: 1200px) {\n\t\tth {\n\t\t\tpadding-left: 30vw;\n\t\t}\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Questionnaire/PrintView/Question/ValueQuestion.vue?6c954ff6","<template>\n\t<tr>\n\t\t<th>{{ text }}</th>\n\t\t<td>\n\t\t\t<ul v-if=\"type === 'checkbox'\">\n\t\t\t\t<li v-for=\"option of checkedOptions\">\n\t\t\t\t\t{{ option.text }}\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<template v-else>\n\t\t\t\t{{ selectedOptionText }}\n\t\t\t</template>\n\t\t</td>\n\t</tr>\n</template>\n\n<script>\nexport default {\n\tprops: {\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tvalidator(type) {\n\t\t\t\treturn ['radio', 'checkbox'].includes(type);\n\t\t\t}\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tcheckedOptions() {\n\t\t\treturn this.options.filter(option => option.checked);\n\t\t},\n\t\tselectedOptionText() {\n\t\t\treturn (this.checkedOptions.length > 0)\n\t\t\t\t? this.checkedOptions[0].text\n\t\t\t\t: '';\n\t\t}\n\t}\n};\n</script>\n\n<style scoped>\n\tth, td {\n\t\tpadding: 0.5em;\n\t}\n\n\tth {\n\t\tpadding-left: 1em;\n\t}\n\n\t@media (min-width: 768px) {\n\t\tth {\n\t\t\tpadding-left: 5em;\n\t\t}\n\t}\n\n\t@media (min-width: 1200px) {\n\t\tth {\n\t\t\tpadding-left: 30vw;\n\t\t}\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Questionnaire/PrintView/Question/RadioCheckboxQuestion.vue?366d637a","<script>\nimport { ucfirst, camelCaseToWords } from 'modules/utils.js';\n\nexport default {\n\tprops: {\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\tordered: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\titems: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\trender() {\n\t\tconst ListElement = this.ordered ? 'ol' : 'ul';\n\n\t\tconst items = this.items.map(item =>\n\t\t\t<li class=\"print-view-list-item\">\n\t\t\t{\n\t\t\t\tObject.keys(item).filter(prop =>\n\t\t\t\t\t!['type', 'labels'].includes(prop)\n\t\t\t\t).map(prop =>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<b>{ucfirst(camelCaseToWords(prop))}: </b>\n\t\t\t\t\t\t{item[prop]}\n\t\t\t\t\t</p>\n\t\t\t\t)\n\n\t\t\t}\n\t\t\t</li>\n\t\t);\n\n\t\treturn (\n\t\t\t<tr class=\"print-view-question-list\">\n\t\t\t\t<td>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{this.text}\n\t\t\t\t\t</p>\n\t\t\t\t\t<ListElement>\n\t\t\t\t\t\t{items}\n\t\t\t\t\t</ListElement>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t);\n\t}\n};\n</script>\n\n<style>\n\t.print-view-question-list td {\n\t\tpadding-left: 1em;\n\t}\n\n\t@media (min-width: 768px) {\n\t\t.print-view-question-list td {\n\t\t\tpadding-left: 5em;\n\t\t}\n\t}\n\n\t@media (min-width: 1200px) {\n\t\t.print-view-question-list td {\n\t\t\tpadding-left: 30vw;\n\t\t}\n\t}\n\n\t.print-view-list-item {\n\t\tpadding: 0.25em;\n\t\tmargin: 0.25em;\n\t\tborder: 1px solid rgba(0, 0, 0, 0.15);\n\t}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/vue-components/Questionnaire/PrintView/Question/List/List.vue?5312e8a2"],"sourceRoot":""}